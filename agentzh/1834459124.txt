用户信息
用户昵称：agentzh
用户id: 1834459124
微博数: 4571
关注数: 236
粉丝数: 42537

原创微博内容: 
1:[置顶]OpenResty 1.15.8.2 正式版昨儿发布，包含了 Nginx 官方针对 HTTP/2 最新的安全修复。发布公告在这里：http://t.cn/AiEXjnNI 下载地址在这里：http://t.cn/R5qq7aA 我们所有的官方二进制包都已更新，还有 macOS 上的 homebrew 也进行了更新和优化（现在 macOS 上的编译在多核系统上会快非常多了）。  原图 
微博位置: 无
发布时间: 2019-09-10 11:02
点赞数: 20   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2:Docker 一直把容器共享宿主系统的内核作为一个优点，不过一个潜在的问题是容器内的 glibc 和宿主系统的内核不一定兼容。二进制的新 glibc 配二进制的老内核十有八九会有问题，而我们之前也遇到过 CentOS 7 的老 glibc 和自己编的新内核一起用时，某些系统锁调用可能会随机出现死锁 bug 的情况。所以 glibc 等库对内核的向后兼容也是相对的，不是绝对的，总有例外，而向前兼容就不用想了。而各个发行版都喜欢给内核和 glibc 之类的东西打上一堆自己的补丁，尤其是 Red Hat 系的发行版。于是最安全的还是尽量让宿主系统和容器内的系统保持一致，比如都同是 Ubuntu 18.04，否则感觉还是比较容易踩雷的。在野外的容器架构下，glibc 这样的用户态系统库的版本和内核版本之间组合的可能性实在太多了，很难充分地测试。所以还得非常小心才是。                                 
微博位置: 无
发布时间: 2019-09-13 12:54
点赞数: 60   转发数: 56   评论数: 7
发布工具: 微博 weibo.com

3:KVM 的虚机内存管理像普通的 Linux 用户态进程使用 malloc/mmap 分配的内存一样支持 on-demand paging 和 swapping，效率很高。所以即使同时运行的虚机内存总和远大于宿主机的内存也没啥问题，只要实际活动着的虚机实际使用的内存总和没超就没事。相比之下，之前用 VMWare 启动的虚机，在我的 NUC 上起...全文 
微博位置: 无
发布时间: 2019-09-13 12:28
点赞数: 5   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

4:Red Hat Enterprise Linux (RHEL) 8 的官方包仓库里竟然没有 ccache，让我震惊了。即使开启了 Red Hat 官方的 AppStream 和 CodeReady Builder 这些可选的 Yum 仓库源。因为第三方的 EPEL 的 RHEL 8 仓库里也还没有加这个包，我最后只好借用的 Fedora 28 仓库里的 ccache RPM 包来救急……  
微博位置: 无
发布时间: 2019-09-13 12:21
点赞数: 10   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

5:几天前在把 Amazon Linux 2 系统加进我本地的 KVM 虚机打包和测试集群时，发现其官方仓库里的 clang 缺少 libclang_rt.asan-x86_64.a 这个文件，扫描整个官方 Yum 仓库里所有的包提供的文件，也没找到，于是 clang ASAN 用官方的 rpm 包就用不了了，只能自己另外找完整的安装包，或者自己编译 clang。...全文 
微博位置: 无
发布时间: 2019-09-13 12:14
点赞数: 2   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

6:上个月回中国给我们公司国内的工程团队感兴趣的同学一人带了一个 Raspberry Pi 4。当时在美国买的时候还没现货，还要 pre-order 还要等。以后 OpenResty 如果在 ARM 上有兼容性问题，方便我抓人来调，哈哈！拿到货之后，发现比想象得还要小得多，只比火柴盒大些。我简单开机了一下就发现 Pi 4 的散热确...全文 
微博位置: 无
发布时间: 2019-09-13 11:59
点赞数: 11   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

7:原本想让我们的 OpenResty Inc 公司赞助一下 Red Hat 公司的 systemtap 开源团队，加速一下 systemtap 项目的开发工作的，结果 Red Hat 嫌我们太小，把我们鄙视了。我们继续加油长大，哈哈。  
微博位置: 无
发布时间: 2019-09-13 11:54
点赞数: 28   转发数: 4   评论数: 8
发布工具: 微博 weibo.com

8:RHEL 8 发布好几个月了，但貌似离实用还有距离。主要是 EPEL 这样的第三方包仓库里支持 RHEL 8 的包还太少，有时还得依靠 Fedora 的包来 bootstrap。无论如何，OpenResty 官方已经提供针对 RHEL 8 的官方 Yum 源了：http://t.cn/RD3Yczw 自然还是通过我的 Opslang + KVM 自动化工具链来管理。  
微博位置: 无
发布时间: 2019-09-13 11:43
点赞数: 1   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

9:OpenSUSE 系统上的包管理工具 zypper 真是一个挺神奇的存在。感觉在易用性上比 apt-get 和 yum/dnf 都要好很多，就是它们的官方镜像源貌似没用什么靠谱的 CDN 加速，我从美国湾区访问也好慢。我最喜欢 zypper 的一点是可以直接添加 yum 仓库源，所以 OpenResty 开源官方针对 OpenSUSE Leap 系统的二进制包仓库也直接用的 Yum 源和 RPM 工具链。                                 
微博位置: 无
发布时间: 2019-09-13 11:37
点赞数: 3   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

10:Ubuntu 18.04 系统一个让我很不爽的变化是默认使用所谓的 systemd-resolved 服务来管理 /etc/resolv.conf 等 DNS 解析，在我的 opslang 自动化的 KVM 集群操作中经常出 DNS 解析的问题，果断切换回之前版本用的 resolvconf 服务，这才恢复正常。Ubuntu 没事老喜欢把这样的简单问题复杂化……  
微博位置: 无
发布时间: 2019-09-13 11:33
点赞数: 9   转发数: 3   评论数: 8
发布工具: 微博 weibo.com

11:Ubuntu 19.04 Disco 官方 Server 版的 ISO 在 libvirt/kvm 上启动不了，直接黑屏了，我差点放弃。好在后来想到可以换用 19.04 的 Desktop 版，没想到居然成功了。可惜 Desktop 版的最小化安装模式也要比 Server 版大了好多（近一倍），于是装完还得自己裁剪删东西。网上看到也有哥们遇到类似的问题。最...全文 
微博位置: 无
发布时间: 2019-09-13 11:30
点赞数: 5   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

12:libvirt/KVM 工具链默认使用的 dnsmasq 这个 DHCP/DNS 服务器封装得很死，不方便绕过 libvirt 直接去配置它，比如 DHCP lease 的过期时间之类的。于是只好在 opslang 脚本里用了清 dnsmasq 生在的 lease 状态缓存文件的办法在必要时暴力释放一下所有 DHCP leases。另外，就是尽量自己在 opslang 脚本里...全文 
微博位置: 无
发布时间: 2019-09-13 11:22
点赞数: 6   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

13:KVM 默认的 qcow2 虚拟硬盘文件利用 sparse 文件可以节约大量的硬盘空间，不过 rsync 这些工具对传输这样的 sparse 文件的支持比较初级，不够理想。于是想到一个折衷的搞法是先用 tar + 多线程 gzip level 1 打包压缩 sparse 文件，然后再传输 .tar.gz 文件。即便是内网，传输速度也有了数量级的提升，一个虚机一般几秒到十几秒左右就传完了，毕竟我的 base image 虚机的 qcow2 文件压缩后经常也只有小几百兆。即使不压缩，一个虚机也只有 1G 左右。所以搞了 50 个虚机也没用多少空间，备份虚机的空间就更小了。                                 
微博位置: 无
发布时间: 2019-09-13 11:13
点赞数: 10   转发数: 36   评论数: 7
发布工具: 微博 weibo.com

14:这周我也用零碎的时间把我们 OpenResty Inc 公司内部所有私有软件包的打包集群也全迁移到我那一套全新的 Opslang + KVM 的工具链上来了（最初是为了 OpenResty 开源二进制包在各个不同种类和版本的操作系统上全自动打包和测试所准备的）。我这一组加起来一共一千多行的 Opslang 脚本把 KVM 的各种不同 OS 的虚机克隆、操作系统初始化、网络配置、虚拟硬盘整理和优化、快照管理全自动化了，还是挺简单的。即使是那些最恶心的不得不进行终端交互的操作，用 Opslang 表达也极简单极自然。貌似这组脚本再改改也可以用于构建企业私有云了，极为轻量和简洁，同时也非常透明，非常容易修改和扩展。                                 
微博位置: 无
发布时间: 2019-09-13 10:16
点赞数: 17   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

15:JVM 的一大尴尬是 JNI 本身序列化反序列化的开销太大了些，所以在传输的数据量较大的时候，用 C 重写一般不会有太大提升，相反可能反而会慢很多很多倍。这确实比较遗憾。而在 LuaJIT 这样的 VM 实现中，和 C 互操作的损耗经常只是一两条机器指令而已，当然后者的设计也决定了 LuaJIT 无法使用 JVM 所采...全文 
微博位置: 无
发布时间: 2019-09-13 10:06
点赞数: 16   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

16:美国 Kong 公司的 CTO 之前跟我喝咖啡时回忆，他们的 Kong 这个 API 网关软件最初其实是基于 NodeJS 编写的，后来实在受不了性能上的问题才迁移到了 OpenResty，性能立即有了极大的提升。当然，他们目前的实现方式其实仍然有非常大的性能提升空间，或许我们的 OpenResty Trace 产品可以帮助他们进一步...全文 
微博位置: 无
发布时间: 2019-09-13 09:18
点赞数: 27   转发数: 15   评论数: 2
发布工具: 微博 weibo.com

17:我们有一家较大规模的互联网类型的商业客户公司，最近把他们之前用 Go 语言编写的一个流量转发中间件迁移到 OpenResty，全线生产流量的延时都减少了 100 毫秒，而他们需要自己维护的代码量也有了非常大的降低。  
微博位置: 无
发布时间: 2019-09-13 09:13
点赞数: 38   转发数: 42   评论数: 12
发布工具: 微博 weibo.com

18:从最新的 OpenResty 1.15.8.2 开始，我们正式提供新的二进制包仓库，针对 x86_64 体系结构的 Debian 10、Fedora 30、Red Hat Enterprise Linux (RHEL) 8、Amazon Linux 2、OpenSUSE Leap 15.1 还有 ARM64 体系结构的 CentOS 7。细节请见 http://t.cn/RVhMIIJ 另外，OpenSSL 的官方二进制包也升级到了最...全文 原图 
微博位置: 无
发布时间: 2019-09-10 11:17
点赞数: 25   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

19:最新的 OpenResty 1.15.8.2 正式版包含了最新的 nginx http2 的安全修复，着急的同学可以先用这里的源码包：http://t.cn/AiRcNUnD 我们还在准备二进制包过程中。我们也同时在准备 OpenResty 1.17.x.x 版，应该快了。  
微博位置: 无
发布时间: 2019-09-02 15:05
点赞数: 10   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

20:最新的 openresty 1.15.8.2 版包含了最新的 nginx http2 的安全修复，着急的同学可以先用这里的源码包：http://t.cn/AiRcNUnD 我们还在准备二进制包过程中。  
微博位置: 无
发布时间: 2019-09-02 14:52
点赞数: 8   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

21:我们 OpenResty Inc 公司最近又赞助 Linaro 公司的工程师 Siddhesh Poyarekar 帮忙修了 LuaJIT 的 JIT 编译器在 Aarch64（ARM64）上的第三个寄存器分配相关的 bug。这个 bug 比之前的两个 bug 要难调得多，因为并不会导致进程崩溃，而只是让我们的 ylang 编译器在随机压力测试中偶尔会出现某一个 Lua i...全文 
微博位置: 无
发布时间: 2019-09-02 14:27
点赞数: 21   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

22:我刚推荐的那个 .vimrc 配置文件的作者之一，Audrey Tang（唐凤），是 Perl 界最著名的黑客之一。十几年前她在 IRC 上教了我很多重要的技术、思想和方法，那会儿我还在上大学。算是我早年的恩师之一。Perl 5 CPAN 网络上她好像也贡献了一百多个开源软件包，算模块最多的贡献者之一了。她也是当年我见过...全文 
微博位置: 无
发布时间: 2019-08-19 12:14
点赞数: 140   转发数: 95   评论数: 19
发布工具: 微博 weibo.com

23:我在深圳 OR 技术沙龙现场写代码时，用的是 vim 编辑器，这是我多年来一直使用的“IDE”了。有多位同学好奇我的 .vimrc 配置，其实我一直把最新版的 .vimrc 同步到了我自己的 agentzh.org 服务器上，链接是 http://t.cn/AiQwxP3v 有兴趣的同学可以参考。我设了一些快捷键，比如 gl 可以跳到左边  split...全文 原图 
微博位置: 无
发布时间: 2019-08-19 11:37
点赞数: 85   转发数: 72   评论数: 14
发布工具: 微博 weibo.com

24:今天深圳 OpenResty 技术沙龙的一些照片，感谢今天帮我们拍照的同学们。我现场手写了一个针对 OpenResty Web 应用的自动化测试台，好刺激。  [组图共6张] 原图 
微博位置: 无
发布时间: 2019-08-18 00:06
点赞数: 67   转发数: 104   评论数: 15
发布工具: iPhone SE

25:深圳确实是一座年轻而有活力的城市。如果不那么热就好了，哈哈。  
微博位置: 无
发布时间: 2019-08-16 15:56
点赞数: 19   转发数: 1   评论数: 9
发布工具: 微博 weibo.com

26:昨晚受邀在深圳大地01公司作了一次分享，一不小心又聊了 2 小时。大家都听得很专心，我便越说越高兴……  
微博位置: 无
发布时间: 2019-08-16 15:55
点赞数: 19   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

27:深圳好热，走在室外就像身处烤箱中一样……  
微博位置: 无
发布时间: 2019-08-13 12:23
点赞数: 18   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

28:这几天在北京了，继续全力准备这周末的两场交流活动。已经准备了几周了。窗外依旧是熟悉的北京的雾……  
微博位置: 无
发布时间: 2019-08-09 07:38
点赞数: 33   转发数: 3   评论数: 13
发布工具: 微博 weibo.com

29:我们 OpenResty Inc 公司 8 月 17 日周六下午还将在深圳举办一场面向开源社区的 OpenResty 技术沙龙。我也会继续主讲，和大家面对面。应该讲的内容会跟北京的技术沙龙不同了。报名页面在这里：http://t.cn/AiYxSeWU有关此次沙龙的信息沟通会在微信群“OR 深圳 8 月 技术沙龙”中进行，想入群的朋友，请加我的助手 Helen 为微信好友并说明想入这个群，她会拉大家入群的。多谢！她的微信号是 helengao0707 感谢华为和亚康的赞助。                  原图                             
微博位置: 无
发布时间: 2019-08-02 11:03
点赞数: 30   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

30:最近我和 Linaro 公司的印度工程师 Siddhesh Poyarekar 一起，修了 LuaJIT 的 JIT 编译器在 Aarch64 (ARM64) 系统上的两个比较深的 bug，都和寄存器分配有关。ARM64 上的通用目的寄存器比 x86_64 要多很多，所以要给寄存器分配器施加压力，需要很复杂的 Lua 程序作为输入。幸运的是，我们 OpenResty Inc 公司的 edgelang 和 ylang 编译器本身的 Lua 实现代码都足够复杂，都是好几万行的由 fanlang 编译器生成的 Lua 代码，可以比较容易地复现这些问题。当然，主要是 Sid 同学的功劳了，我只是提供可以复现的例子和环境，以及验证他的修复补丁。他的这些工作是由 OpenResty Inc 公司出资赞助的。                                 
微博位置: 无
发布时间: 2019-08-02 10:33
点赞数: 40   转发数: 17   评论数: 5
发布工具: 微博 weibo.com

31:apisix 这个开源项目与 OpenResty 开源官方以及 OpenResty 公司都没有任何关系。看到有朋友误认为是 OpenResty 官方的项目。特此声明。  
微博位置: 无
发布时间: 2019-08-02 06:37
点赞数: 35   转发数: 17   评论数: 4
发布工具: 微博 weibo.com

32:我们 OpenResty Inc 公司将于 8 月 11 日周日下午，在北京举办 OpenResty Inc 商业产品交流会。报名地址是：http://t.cn/AiYA28qF这个会是在我们面向开源社区的 OpenResty 技术沙龙的*后一天*。不是同一个会。在商业产品交流会上，我们将向大家详细介绍并现场演示我们的 OpenResty Edge、OpenResty Trace、OpenResty QA、OpenResty Showman、OpenResty CI 和 OpenResty 小语言集合等商业产品。仍然是由我现场主讲。我们也会邀请我们的 OpenResty Edge 商业客户到现场分享经验。这次活动的赞助商华为和亚康也会做自己产品和服务的商业分享。欢迎感兴趣的企业报名参加。                  原图                             
微博位置: 无
发布时间: 2019-07-31 17:03
点赞数: 55   转发数: 14   评论数: 7
发布工具: 微博 weibo.com

33:下个月（8 月）10 日周六下午我们将在北京举办一次面向社区的 OpenResty 技术沙龙，我会跟大家坐下来，面对面聊一聊 OpenResty 的方方面面，聊一聊 OpenResty Trace 相关的动态追踪技术，聊一聊我们的那些有趣的小语言，聊一聊禅修与编程。大家在现场会有机会亲自体验我们最近研发的一些全新的技术，包...全文 原图 
微博位置: 无
发布时间: 2019-07-27 13:34
点赞数: 82   转发数: 41   评论数: 21
发布工具: 微博 weibo.com

34:好吧，不说了，我还是抓紧把这些小语言编译器做成大家都有机会用的 SaaS 服务吧……说再多，不能自己上手玩，才是最遗憾的。  
微博位置: 无
发布时间: 2019-07-20 14:37
点赞数: 26   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

35:现代的正则表达式引擎实现的早已不是教科书上那么局限的“正则语言”了。比如 look-ahead、look-behind、递归模式等等特性，实在太强大了，接近较完整的语法分析能力了。可惜我遇到的很多工程师，甚至连常规的正则写法都还不熟悉。相信 Perl 程序员肯定是最熟正则的了。现在其他语言的正则多是和  Perl 正则兼容的，或者至少源自 Perl 正则，包括微软的 .NET CLR 里的正则库。我最近在实现 opslang 和 edgelang 的解析器里时，一些比较难搞的复杂词法，往往一个小正则就圆满搞定了。比如 look-ahead 和递归模式就实在太好用。而遇到有性能问题的正则时，非回溯型的 *+、++ 和 ?+ 这些正则操作符又经常能救急。                                 
微博位置: 无
发布时间: 2019-07-20 14:02
点赞数: 21   转发数: 27   评论数: 8
发布工具: 微博 weibo.com

36:我自己用 opslang 写的第一个实用的脚本是用来维护一个永远不会挂的 ssh 隧道的，这样方便我从任何地方连到家里的内网。之前试过很多现成的方案，但都不理想，还是用 opslang 写了一个简单而优美的实现比较靠谱。这个 tunnel 还真的一直很稳定，虽然中间因为网络等原因中断过很多次，但都很快自动恢复了。不看日志我还真没觉察到中间其实有短暂地中断过。                                 
微博位置: 无
发布时间: 2019-07-20 13:52
点赞数: 10   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

37:我们其实还做了很多好玩的东西，但不能在这里一下分享太多了，否则有哥们要骂我刷屏了。后面一点一点慢慢分享出来。  
微博位置: 无
发布时间: 2019-07-20 13:36
点赞数: 14   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

38:UNIX 文化的核心之一是工具编程，即每项功能都实现为一个小工具，然后在 shell 层面进行串并联组合。可惜 UNIX 的 shell 从来没有足够靠谱和足够强大过。于是大家又去写 Perl 和 Python 之类的东西，在里面内嵌 shell 命令，但很容易变得恶心，同时还要小心注入，另外也远不够灵活。所以最近花了一个多月的时间实现了一个我梦想了多年的自动化命令行终端的小语言，叫做 opslang。编译器本身和生成的代码都完全基于 OpenResty 技术栈实现。OpenResty 的 ngx.pipe API 是实现 opslang 的核心技术之一，从而实现运行时的 100% 非阻塞通信。而流式正则匹配和替换技术则是另外一个基石。这种小语言以基于规则的方式，可以摸拟人类直接对终端摸拟器进行各种复杂的操作，也支持像 screen/tmux 工具那样同时创建多个终端窗口，自动按需来回切换着操作，也可以使用多个轻线程同时在这些虚拟窗口中操作。可以像 Tcl/Expect 一样对终端输出进行模式匹配和交互操作，而且对终端控制序列的处理远比 Expect 来得更加透明和智能，可以同时并行匹配多个正则模式和规则。Opslang 原生识别 shell 语言的记法，所以会自动根据在 shell 命令串中引用 opslang 变量的上下文，使用正确的转义规则（比如 Bash 里在双引号里面和外面的转义规则就很不一样）。这就根除了 shell 注入攻击的可能性，同时 opslang 代码可以保持优美和简洁。Opslang 也支持 Gnu make 那样的目标和目标依赖描述，只不过这里的目标都不直接对应文件系统上的文件，而是抽象的。这样可以实现自动依赖计算和增量构造。同时也内建了各种重试机制（比如变长等待延时的多次重试）和强大的异常处理模型。用户可以自定义异常。同时也有完整的算术运算、字符串操作、赋值运算、数组/哈希/标量等变量。用户自定义函数。拥有完整的模块系统，可以自定义模块并用 use 语句来加载。目标机器上也无需预装任何软件，只要有标准的 bash 就可以了。毕竟 opslang 是直接摸拟的人类操作。下面的图一是一个很简单的 opslang 样例程序，图二是这个程序执行后产生的终端操作日志。很像人类直接操作哈？             [组图共2张]      原图                             
微博位置: 无
发布时间: 2019-07-20 12:33
点赞数: 137   转发数: 142   评论数: 19
发布工具: 微博 weibo.com

39:请到我的微博个人主页看置顶🔝微博，有关8月技术沙龙。  
微博位置: 无
发布时间: 2019-07-19 20:58
点赞数: 2   转发数: 0   评论数: 0
发布工具: iPhone SE

40:下个月我会回国一趟。我们 OpenResty Inc 公司计划于 8 月 10 日周六下午在北京，8 月 17 日周六下午在深圳，分别举办一场小规模的面向 OpenResty 开源社区的技术沙龙。新朋友和老朋友都欢迎。希望这两次聚会形式上能更活泼，更灵活，互动性更强，真的交流爽了。欢迎与会的朋友向我们提任何问题、期望或意见。我打算现场多演示一下我们自己是如何开发、调试和测试 OpenResty 核心的，我们自己是如何基于 OpenResty 来构建各种工具、小语言和应用的。大家有兴趣的话，我们也可以介绍一下 OpenResty、Nginx、LuaJIT、SystemTap 这些软件的核心工作原理和优缺点，OpenResty 即将发布的由 wirelang 自动生成的各种后端服务的客户端 Lua 库，还有我们觉得比较好的入门和精通 OpenResty 应用开发的学习路径。与会的朋友们希望我聊什么，我们都很乐意考虑，只要有能力的话。感兴趣参加的朋友，请扫下面对应的二维码加入我们这两次聚会的微信群，方便同步聚会信息和沟通话题。请认准二维码上方标题里的城市名哈，别扫错了。期待下个月和大家面对面。             [组图共2张]      原图                             
微博位置: 无
发布时间: 2019-07-19 10:35
点赞数: 26   转发数: 17   评论数: 19
发布工具: 微博 weibo.com

41:微博网页版无法访问了，貌似一直在重定向跳转，最后浏览器就报错了。服务器 IP 是 180.149.134.141。  
微博位置: 无
发布时间: 2019-07-19 09:16
点赞数: 4   转发数: 1   评论数: 9
发布工具: iPhone SE

42:前一阵子我们给 SystemTap 的内核运行时和语言前端添加了比较完整的浮点数支持。现在在 stap 脚本中终于可以随意使用 32 位（float）或 64 位（double）浮点数常量，从用户态进程空间读取这两种浮点数的值，以及它们的加、减、乘、除、取负、绝对值、平方根、IEEE 浮点取模和 C 语言的 fmod() 取模操作...全文 原图 
微博位置: 无
发布时间: 2019-07-18 12:12
点赞数: 21   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

43:之前看到一些工程师在设计和实现自己的“小语言”时，为了避免写语法解析器，直接使用 YAML 来作为小语言的语法。其实解析器在任何一个像样的编译器项目中所占的比重都是非常小的，毕竟有成熟的理论和工具可以自动构造。节约这里的成本是很得不偿失的。毕竟 YAML 解码器一般不会保留每一个语法元素的行号、列号等信息，所以小语言用户在调试问题的时候会很痛苦。另外，一旦需要向语言加入加减乘除等表达式运算符，则还是需要自己写一些语法分析的代码，毕竟没有人会愿意手写抽象语法树的 YAML 数据 dump 的。所以我觉得最好还是稍微学习一下那些成熟的语法分析器生成器，以及经典的语法和词法分析算法。这个懒不值得偷了。                                 
微博位置: 无
发布时间: 2019-07-18 11:45
点赞数: 44   转发数: 49   评论数: 21
发布工具: 微博 weibo.com

44:前一阵子无意中注意到我们一家 OpenResty Edge 商业客户公司的运维同学正在用我多年前写的 SSH::Batch 的开源命令行工具 atnodes: http://t.cn/AilZ5V1T 挺高兴。还是当年在雅虎中国时搞的，当时也有雅虎的同事用它来替代 Yahoo! 的 YST 工具链来批量操纵大集群，当然，从功能上讲，和 YST 还是有很大差距了。我们公司近来也在基于 OpenResty 技术栈，研发高级得多的自动化运维技术体系。                                 
微博位置: 无
发布时间: 2019-07-18 11:22
点赞数: 26   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

45:我们 OpenResty 的官方博客最近上线了：http://t.cn/AilzGgLN 第一篇文章详细介绍了 LuaJIT 的 GC64 模式：http://t.cn/AilzGgL5 从最新的 OpenResty 1.15.8.1 开始，我们在 x86_64 上默认开启 GC64 模式，从而取消了原先的 2G 内存上限。我自己写的是英文版的，我们团队的德江帮忙翻译一篇中文版的，在这里：http://t.cn/AilzGgLK                  原图                             
微博位置: 无
发布时间: 2019-07-18 09:50
点赞数: 35   转发数: 32   评论数: 7
发布工具: 微博 weibo.com

46:那天，路过一座群山环抱的幽静的教堂，四下一个人也没有，于是便想去教堂的一角去看书，结果意外发现一头野生的大鹿，正悠闲地坐在树荫下。它离我坐的地方只有几米远，却丝毫不介意我的到来。  原图 
微博位置: 无
发布时间: 2019-07-18 09:35
点赞数: 22   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

47:RedHat 提供的 DevToolset 软件包仓库提供了很新版本的开发工具链，比如有 gcc 8 之类特别新的编译器工具链，也有更新版本的 eu-strip 之类的命令行工具。对于需要在 CentOS 系统上编译较新的软件的情况，真是免去了非常多的麻烦。比如有些软件必需使用较新版本的编译器。可以参见这里的安装介绍：http://t.cn/AiWuFRS2 当然，最新的版本已经是 8 了。                                 
微博位置: 无
发布时间: 2019-07-16 16:16
点赞数: 9   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

48:在调试 rpm/deb 打包脚本的时候，ccache 这样的工具真的是无价之宝（distcc 这样的工具也可能很有用），可以节约大量宝贵的时间。调试问题的时候，时间真的就是生命啊。有些奇怪为啥在打包界很少看到有用 ccache 的，难道大家直接在本地系统级别，把 cc 和 gcc 这些命令改写为 ccache cc 之类的了吗？  
微博位置: 无
发布时间: 2019-07-16 16:06
点赞数: 8   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

49:IBM 美国的工程师也开始向我们 OpenResty 官方维护的 LuaJIT 分支贡献补丁了。他们最近贡献的功能是让 LuaJIT 能跑在 IBM s390x 机器上面，当然，目前他们的移植尚不包含 JIT 编译器部分。由 ARM、IBM 和三星等公司创办的 Linaro 组织的工程师也开始向我们的 LuaJIT 分支贡献 ARM64（Aarch64）平台上的 bug 修复和优化补丁。我们 OpenResty Inc 公司也开始尝试与 Linaro 进行一些商业和技术上的合作。我们的 LuaJIT 分支有望成为 LuaJIT 事实上的主线版本了。我们继续加油！                                 
微博位置: 无
发布时间: 2019-07-16 15:26
点赞数: 44   转发数: 18   评论数: 3
发布工具: 微博 weibo.com

50:看新闻说，当年阿波罗登月飞船使用的导航用的电子计算机只有 72KB 存储。相关的程序必须压缩到这么小。结果 NASA 的工程师们怎么精简和优化，最后写的程序还是大了 50%。最后貌似还是做成部分依赖地面配合的，才能装进去。原先的貌似是不依赖地面的。按今天的标准这么烂的计算机在当时却是最先进的使用了集成电路的，哈哈。作为今天的程序员，对这种苛刻的编程要求，真是很难想象。有人说，最棒的技术和创新经常源自苛刻的客观条件的制约，还很有道理的。真是一种极致编程啊。                                 
微博位置: 无
发布时间: 2019-07-16 15:15
点赞数: 48   转发数: 48   评论数: 10
发布工具: 微博 weibo.com

51:根据古老的佛教经文，佛陀也明显认为世俗世界的贫困是各种罪恶的根源，所以也倡导国王等统治者尽量接济贫民，因为消除贫困是实现理想社会的基本前提。佛陀对在家人的教导也多强调如何累积和保持财富上面。这可能会让很多朋友感到惊讶。他并没有劝大家把家财都布施给他的僧团，更没有直接劝大家都出家。...全文 
微博位置: 无
发布时间: 2019-07-14 16:05
点赞数: 15   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

52:南传上座部要求盘腿打坐，不过其他早期部派的经文中貌似并无此语。我自己感觉姿势其实不重要了。毕竟习禅的较高阶段是随时随地，无论身体保持何种姿态。相传佛陀本人去世之前的入定不就是侧卧着的嘛，也没盘腿坐化。所以我近几年的修禅都是舒服地坐着或平躺着。当然，孙伦禅修法把盘腿坐作为一种观苦的禅修手段，那就另当别论了。盘腿久坐比较伤腰，也容易让腿部血流不畅，我还是算了吧。                                 
微博位置: 无
发布时间: 2019-07-14 15:37
点赞数: 9   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

53:二禅境界确实远比初禅要美妙，内心状态就像高山上的深湖，静谧，不起一丝波澜，却同时又能映照天地万物。初禅的那种强烈的喜悦就被深深的轻松安宁所替代。从初禅入二禅，边界是非常明显的，修禅的人自己肯定是知道的，那种感觉就像一刹那进入一个全新的精神境界。当然，从日常状态进入初禅也是边界很分明的了。2014 年时曾经密集修习，想进入三禅，但定力还不够坚固，没有成功。后面继续努力了。或许未来有机会可以检测一下我在初禅和二禅中的脑电波或心电图什么的，肯定跟我平常状态很不一样了。                                 
微博位置: 无
发布时间: 2019-07-14 15:15
点赞数: 27   转发数: 26   评论数: 11
发布工具: 微博 weibo.com

54:最近一二年比较用功地修习原始佛教的禅法，只要无聊时就修。如今终于可以比较自如地出入初禅了。初禅确实如上座部的巴利三藏的相关经文中所描述的那样，喜悦充满全身，甚至每一个细胞。只有亲身体会过的人才能理解了。每当一口气吸进去，喜悦会充满心脏，充满胸腔，然后扩散到整个躯干，乃至四肢，直至足尖和指尖。当呼吸延绵不绝，这种喜悦也会延绵不绝，而且越来越强烈，强烈到感觉汗毛孔都竖了起来，有时喜悦也会延伸到脸颊和太阳穴这样的位置上来。这种修行持续几小时也不会觉得疲乏。当修到深处时，呼吸也会越来越细微，毕竟就接近二禅了。虽然有经文说“声音是初禅之刺”，但当初禅坚固时，就算周围环境一直有声音也不会受影响，比如我就曾在火车上或人很多的药房里入过初禅。初禅的喜悦超过日常生活中一切感官上的刺激所能带来的喜悦，而且可以一直持续下去。经上说，“初禅由舍离生”，即需要首先放下对各种欲望的向往和思考，如果还满脑子想着那些事情，肯定是无法入定的。不过有些遗憾的是，我这一二年不太能进入二禅了，只有 2014 年的时候密集修行时进入过二禅境界二三回。我还需要继续努力了。二禅由专注生，不是世俗意义上的专注了，而是非常高层次上的所有精神全部注于一点。                                 
微博位置: 无
发布时间: 2019-07-14 15:06
点赞数: 60   转发数: 30   评论数: 27
发布工具: 微博 weibo.com

55:Aarch64 (Arm64) Linux 系统上的内存页配置经常是 64KB 的（比如在 AWS 上），所以 nginx 或 openresty 在配置共享内存区域的时候，要小心别把 zone 配得空间太小了，如果配成小于等于 64KB 的话，nginx 都会起不来，直接报 no memory 的错误。  
微博位置: 无
发布时间: 2019-07-14 14:42
点赞数: 7   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

56:deb 原生的打包方法还是挺痛苦的，即使有 dh 这样较新的工具链。相比之下，rpm 的 spec 文件还是要简单多了。原先一直逼着我们团队的同学手动移植我们二进制私有软件包的 spec 文件到 deb 打包文件，但搞得都很慢，而且多有问题。后来我终于下决定花了 759 行 Perl 代码（除去空行和注释）写了一个 spec2deb.pl 脚本工具，可以自动把 spec 文件转换为对应的 deb 打包文件，同时自动确保达到我们公司的 deb 打包脚本的规范和策略。所以还是逼机器比较好了，哈哈。在动手写 spec2deb.pl 脚本时也发现了一个开源的用 Python 写的同名工具，虽然有一些问题和限制，但在一定程度上也能工作。我写 deb2spec.pl 时也参考了一下那个工具。那个工具的 Python 代码写得密密麻麻的，不太好改。所以说，“可编辑的代码”还是要更有用了。                                 
微博位置: 无
发布时间: 2019-07-14 13:47
点赞数: 25   转发数: 5   评论数: 9
发布工具: 微博 weibo.com

57:我们给商业客户提供的软件包也是通过对应 Linux 发行版的包管理系统来分发的，比如 yum, dnf 和 apt-get 这些软件，这样也方便更新个别组件。不涉及二进制程序的业务软件包，比如纯 Lua 的软件包，我们通过 fpm 这样的工具来生成 rpm 或 deb 包，比较方便，而涉及二进制程序的，使用 rpmbuild 或 dh 这样发行版自己标准的打包工具链好处还是挺明显的，比如它们会按发行版自己的包策略来进行检查，可以自动检测常见的错误，还可以自动优化 DWARF 调试符号包。                                 
微博位置: 无
发布时间: 2019-07-14 13:37
点赞数: 18   转发数: 14   评论数: 0
发布工具: 微博 weibo.com

58:在 ylua 语言中可以用 Lua 语法直接检查目标 OpenResty 或  LuaJIT 进程里的任意复杂的 Lua 数据结构（比如 table 套 table，各种），比如可以直接写 foo.bar[32].["hello"] 这样的 Lua 表达式来检查目标进程里的 foo 变量里的值。Ylua 编译器生成的是 ylang 代码。Ylang 是 C 语言的一个超集，就像 yl...全文 原图 
微博位置: 无
发布时间: 2019-07-12 11:36
点赞数: 10   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

59:前一阵子花了两周左右的时间用我们自己的 fan 脚本语言编写了一个 ylua 编译器，可以用 Lua 语法写的针对 Lua 应用的调试工具编译为动态追踪工具。使用 Lua 来追踪和调试 Lua 一直是我从前的愿望。Ylua 编译器实现了几乎整个 LuaJIT 支持的 Lua 语言，同时加上了动态追踪所需要的一些扩展，比如在 Lua 函数的入口和出口设置动态探针的语法，之类的。下面这个 ylua 的小例子可以追踪所有的 io.open() 调用，并打印出参数信息。YLua 将成为我们 OpenResty Trace 平台的一部分。                  原图                             
微博位置: 无
发布时间: 2019-07-12 11:29
点赞数: 32   转发数: 23   评论数: 6
发布工具: 微博 weibo.com

60:OpenResty 开源官方从今天开始，正式向开源用户社区提供针对 Aarch64（ARM64）体系结构的 OpenResty CentOS 7 Yum 安装包仓库：http://t.cn/RD3Yczw 我们也正在着手移植我们的 OpenResty Edge 和 OpenResty Trace 等商业产品到这种体系结构的服务器硬件上去。  
微博位置: 无
发布时间: 2019-07-12 11:17
点赞数: 27   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

61:从刚刚发布的 OpenResty 1.15.8.1 版开始，我们最新提供针对 Ubuntu 19.04 Disco 的 OpenResty 官方 APT deb 安装包仓库：http://t.cn/RD3Yczw 今天我们也把所有官方的 OpenResty 的 OpenSSL 二进制 rpm/deb 包升级到了最新的 OpenSSL 1.1.0j 这个版本（未来版本的 OpenResty 也会支持 OpenSSL 1.1.1 系列）。                                 
微博位置: 无
发布时间: 2019-05-17 16:42
点赞数: 25   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

62:经过近一年的艰苦努力，OpenResty 1.15.8.1 正式版今天终于发布了：http://t.cn/EKEXtcO 包含了过去一年中积累的大量新特性和 bug 修复。完整的更动列表在这里：http://t.cn/EKEXtcY 下载地址在这里：http://t.cn/RD3YZmD 感谢我们所有的开发者、贡献者、赞助商和用户。OpenResty Inc 公司的 OpenResty Plus 也同时驱动着开源版 OpenResty 往前大步推进。后面我们会努力将开源版发布的频率恢复到每一到两月出一版。                  原图                             
微博位置: 无
发布时间: 2019-05-17 16:24
点赞数: 73   转发数: 24   评论数: 9
发布工具: 微博 weibo.com

63:我们还有一家 OpenResty Edge 产品的商业客户，之前反馈说他们的某些内网请求在网关这一环节的延时经常有 40ms 这么久，于是照例直接上 OpenResty Trace 对真实的线上服务进程进行实时采样，首先很快筛选出那些在网关这一环节延时超过 40ms 的所有请求，然后再筛选出这些请求的  40ms 时间几乎都分布是 nginx access 请求处理阶段，更进一步工具分析出这 40ms 又几乎都在 access 阶段读取请求体的时间，最后发现他们的某个内网客户端在发较大的请求时，两个 TCP 网络包之间会故意引入 40ms 的延时，于是又是一个和我们的产品没关系的问题                                  
微博位置: 无
发布时间: 2019-05-09 11:41
点赞数: 34   转发数: 6   评论数: 7
发布工具: 微博 weibo.com

64:我们有一家 OpenResty Edge 的商业客户反馈说他们统计访问日志得到的后端平均响应时间和后端服务器一侧统计出来的请求时间的平均值差了 2 倍之多，于是我们上 OpenResty Trace 远程直接对线上的 nginx 进程空间进行后端延时的实时统计，立即得到了一个平均值，和他们后端服务器一侧统计的平均值其实完...全文 
微博位置: 无
发布时间: 2019-05-09 11:34
点赞数: 30   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

65:OpenResty 1.15.8.1 RC2 刚刚发布了。自从 RC1 以来修了不少重要的问题。从这个新版开始，我们会默认加载 lua-resty-core 这个库。新版的下载地址、更动列表以及完整的发布公告在这里：http://t.cn/EojTeHl 欢迎大家测试和反馈。如果未来一周以内社区没有反馈 RC2 中的比较重要的问题，则我们会在一周...全文 原图 
微博位置: 无
发布时间: 2019-05-09 07:12
点赞数: 36   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

66:大乘佛教产生于佛陀去世后六七百年。按照大乘佛教徒自己的说法，他们所持的特殊经典是由龙树、无著等大乘的祖师爷自己从天界或地下龙宫取得的，所以一切现有的早期佛教部派所持的三藏经典中都没有任何大乘的经典，自然，所有早期部派都不承认大乘经典为佛所说，毕竟他们只认自己的传统，只认佛灭后佛教僧团的三次结集产生的经典。大乘经典中充满了对早期佛教部派的斥责和贬低，在阅读了很多早期佛教经典之后，很难想象佛陀本人会使用”小乘“这样骂人的话。在最古老的经典中，佛陀本人即使对于婆罗门等其他”外道“的僧侣也是礼遇有加。大乘把整个原始佛教贬为”方便说“，或者说”是不了义“，更是套上了一个带有污辱性的帽子，叫做”小乘“。大乘真的把一切都说成”空“了，包括四圣谛、因缘缘起程序，万事万物，即所谓的“万法皆空”，其实是原始佛教里批评的“虚无主义”。同时大乘把佛的地位无限拔高，已经相当于基督教里的上帝了，而在原始佛教中，佛陀和阿罗汉并没有本质上的区别，只不过佛陀是自己成道的，并没有依赖其他人的指引。                                 
微博位置: 无
发布时间: 2019-05-08 16:35
点赞数: 11   转发数: 6   评论数: 12
发布工具: 微博 weibo.com

67:中国古代的老庄思想也有类似的追求，即所谓的”定乎内外之分，辨乎荣辱之境“。凡夫和圣人的区别不在于他们的人生际遇有多少根本性的不同，而在于两种人在面对顺境和逆境，面对福祸的反应，是截然不同的。凡夫容易为利益和欲望所控制所局限，从而遇到各种伤害，感到各种痛苦。当然，原始佛教修行的最高境界是能完全控制自己的一切感受和意识，可以完全摆脱欲望和感观刺激的束缚，可以摆脱了那些形而上的思维的束缚，甚至可以让意识绝对停止（这就是佛家讲的”涅磐“境界）。这是原始佛教追求的”自由“和”解脱“。                                 
微博位置: 无
发布时间: 2019-05-08 16:14
点赞数: 14   转发数: 8   评论数: 12
发布工具: 微博 weibo.com

68:在阅读了很多早期部派的经典之后，我惊讶地发现原始佛教的教义其实是很”唯物“的。原始佛教最根本的修行方法就是如实观察各种客观现象，包括世间万事万物、自己的身体、自己的感受，以及自己的内心。修行的目的就是如实了知世界运行的客观规律，即一切都在变化，一切都是从因缘缘起程序产生的（用科学...全文 
微博位置: 无
发布时间: 2019-05-08 16:01
点赞数: 25   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

69:很多被我从小接受的正统学校教育批判为“唯心主义”的哲学派别和观点，其实有很多被曲解的地方。在进行哲学讨论时，如果不把对方使用的哲学术语在那个时代的真实含义搞明白，而只是按字面意思自己随便解释，很容易把意思理解错，甚至完全理解反了。我上初中时初读列宁的哲学笔记时，就有很多这样的困挠。在很多佛教教义的讨论中，这种问题更明显，毕竟讨论的问题更抽象。这一点甚至被一些聪明的人所利用，故意把名词概念进一步搞混，甚至偷换概念，以便他们故弄玄虚，比如佛教中“法”的概念。所以有志于深入哲学研究的同学，一定要特别小心这一点。否则很容易就被绕进去了。                                 
微博位置: 无
发布时间: 2019-05-08 15:41
点赞数: 11   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

70:俄国的大文豪托尔斯泰在快步入晚年时陷入了思想危机，开始非常认真地思考死亡和人生的意义 -- 人生一切最宝贵最珍视的东西，最终都会被死亡彻底毁灭，或早或晚。他先去研究了科学，然后得出结论说，科学只是绕过了真正重要的人生问题，而提出了很多科学自己的问题，然后再去解决那些科学自己的问题。而“把有限的生命投入到无限的科学研究工作中去”显然对他毫无吸引力。然后他又去研究了哲学（估计也就是西方古典哲学了），然后得出结论：哲学只是把他最关心的问题用很复杂的方式重新描述了一遍，也并没有提出任何真正解决的办法。哲学对他来说唯一的价值只是证明困挠他的问题其他人也在研究，他并没有疯掉。他的这些摸索和感受，我也或多或少地感同身受，所以多年来一直在研究各种哲学，包括各种西方古典哲学和东方古老的哲学。                                 
微博位置: 无
发布时间: 2019-05-08 15:22
点赞数: 32   转发数: 19   评论数: 14
发布工具: 微博 weibo.com

71:中国古代有很多勤奋的佛经翻译工作者，最著名的有鸠摩罗什（不是金庸小说里的鸠摩智）和玄奘。他们译的经我也都看过一些，个人更喜欢鸠摩罗什的文字风格。不幸的是，他们一直以为古印度存在一部统一的三藏经典，但其实印度有很多不同的佛教部派，他们一直在向三藏中添加自己杜撰的文字以支持自己部派的观点，有时是有意的，有时则无意的（因为印度宗教和哲学界几千年来的口口相传的佛经传承传统，弟子很可能把老师自己加的经文注解也当作原始经文的一部分来记忆和传承，虽然印度大陆很早就有文字，但多局限于政府文书之类的场合）。所以中国的译经者在译文中都不会注明原始经文的来源，于是给现代佛教研究的部派甄别带来很大的麻烦。而中国的广大译经者前仆后继，译了几个世纪也没有译完，这是因为在他们翻译的过程中，还一直有大量全新的经典在印度大陆被不断地创造出来……                                 
微博位置: 无
发布时间: 2019-05-08 14:43
点赞数: 9   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

72:原始佛教产生于古印度的那个百家争鸣的时代（公元前 5 ~ 6 世纪），即佛陀这个历史人物生活的时代。当时印度还活跃着其他的哲学和沙门派别，比如耆那教、不可知论、等等。那个时代还真有点儿像中国的战国时代。原始佛教怎么看都不像是宗教，在我看来就是一门哲学，而且是最注重于实践和亲身体验的哲学。首先，佛陀否认灵魂概念（即所谓的“无我”），其次，缺少神的位置（最古老的佛教经典里的“天神”其实只是附和了婆罗门教的传统，这些天神的出场多是嘲讽性的，其地位其实还不如人），最后，最早整理三藏的佛陀弟子，其实对佛陀本人并不感兴趣，只专注于记录他们老师生前的言行教导，就像孔子的弟子编《伦语》，所以关于佛陀的生平传记材料极为有限，多只是为了场景需要而一笔带过（后世的佛教文学杜撰出许多光怪陆离的佛陀生平文字，也只能作为佛教文学来看了）。而对于任何一个成功的宗教而言，没有灵魂和神的存在是无法想象的。在佛陀去世（即“佛灭”）之后六七百年之后产生的大乘佛教，还有后来的密宗金刚乘，则都是彻彻底底的宗教了。                                 
微博位置: 无
发布时间: 2019-05-08 14:30
点赞数: 9   转发数: 1   评论数: 7
发布工具: 微博 weibo.com

73:微博貌似发不出去新贴了……试试看……  
微博位置: 无
发布时间: 2019-04-25 10:08
点赞数: 14   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

74:我们 OpenResty Inc 的中国大陆子公司诚邀后端工程师或系统工程师加入。希望能和对后端技术有激情、有想法、有追求的年轻人一起构建 OpenResty Trace、OpenResty Edge、OpenResty QA/Showman、OpenResty CI 等全新一代的企业级软件产品，实现“机器编程”、“机器调试”、“机器测试”和“机器演示”的宏伟蓝图。不要求非得是大牛，但需要有旺盛的求知欲和强大的学习能力。可致力于以下工作中的一项或多项：1. OpenResty Lua 研发2. Nginx 核心、ngx_http_lua 模块、ngx_stream_lua 模块等 OpenResty 核心组件的研发和优化3. LuaJIT 核心研发和开发4. Linux 系统编程和网络编程5. Linux 与 macOS 等操作系统内核相关的优化和开发。6. GDB/LLDB/SystemTap/BCC/eBPF 等调试和动态追踪工具链的完善与优化。7. Docker、KVM、QEMU 等虚拟化技术栈的动态追踪与自动化。8. 各种上层领域内小语言编译器的研发、优化和维护9. 针对各种开源技术栈（PHP、V8/NodeJS、Java/JVM、Python、Rust、Go、PostgreSQL、MySQL、Chrome 等等）的动态追踪工具的研发需要有如下的技能中的多数项（不要求全部）：1. 拥有扎实的 C 语言功底2. 熟悉 Lua 语言、Perl 或 Python 脚本语言3. 熟悉 Shell 脚本语言（bash、csh 之类）。4. 不仅能自己快速写出高质量的代码，也能快速阅读其他人写的代码5. 能快速了解各种技术栈的开源软件（比如各种编程语言的 VM 和解释器、开源数据库核心、Web 服务器的内部实现等等）。6. 拥有较为丰富的性能优化的经验7. 拥有较为丰富的独立排查各种诡异问题的经验8. 拥有较扎实的计算机科学及相关数学的基础知识（含编译原理、编程语言理论、算法、自动机理论、数据库理论）。不拘一格，喜欢挑战，热爱创新。对新技术、新理论、新算法都充满好奇心。对代码有追求，有洁癖更好。拥有开源基因，拥抱开源社区。曾做过的酷炫的开源后端应用可以展示给我们。我们不纠结学历、学校和公司工作经历。远程工作模式，工作地点随意。我们会签订正式的劳动合同，会提供五险一金。会提供丰厚的美国公司的期权。欢迎有兴趣的朋友投简历到 talents@openresty.com 邮箱，请附上自己最酷的作品。                  原图                             
微博位置: 无
发布时间: 2019-04-25 09:53
点赞数: 74   转发数: 67   评论数: 25
发布工具: iPhone SE

75:去年我用咱们的 ylang 语言快快地编写过 Perl 代码级别的 CPU 火焰图的采样工具，正好最近我需要优化我的一个需要处理几百兆数据的 Perl 命令行工具，于是采样了几张 Perl 语言级别的火焰图。第一天根据第一张火焰图调整了一下 Perl 代码，总用时减少了 35%；第二天又采样了一张新的火焰图，又调整了一下 Perl 代码，总用时又干掉了 35%（好吧，两天的数字完全相同，纯属巧合）。两天加起来已经超过 1 倍的整体性能提升了。原先需要近 29 秒，现在只需要 12 秒多一点。根据最新的火焰图看，貌似已经接近 Perl 脚本解释器的性能极限了，需要换 C/C++ 才能进一步提升了。下图是最初采样的第一张火焰图。图中的那三个“尖塔”是因为代码中的递归编历树状数据结构的逻辑。                  原图                             
微博位置: 无
发布时间: 2019-03-22 13:41
点赞数: 21   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

76:昨儿晚上睡觉前，想起来 RedHat 搞的 elfutils 开源项目的 eu-readelf 工具导出文本形式的 dwarf 数据有些慢，导出 openresty 的 nginx 可执行文件里的 DWARF 数据需要 2.5 秒，于是顺手用 C 火焰图工具照了一下，发现大部分 CPU 时间都花在了把地址值转成符号上面，这个功能一般也没啥用处，于是修改它的源码把它干掉了，于是立马总用时从 2.5 秒减少到了只有 0.5 秒，总时间减少 80%，好爽。确实所谓的“大部分程序的 10% 的代码占了 90% 的时间”是很有道理的。                  原图                             
微博位置: 无
发布时间: 2019-03-22 13:27
点赞数: 33   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

77:上周我们的一家 OpenResty Trace 的试用客户遇到了他们自己写的 OpenResty 应用存在内存泄漏的问题。于是我们远程通过 OpenResty Trace 的动态追踪工具直接分析了他们跑在 AWS 上的占了 2G 多内存的生产进程，结果发现 glibc 内存分配器里面只占了 110MB，而 nginx 所有的共享内存区域加起来也不过 60MB 多一点，LuaJIT 的垃圾回收器管理的内存也不过几十 MB 而已，怎么着都凑不到 2G。最后通过一个特殊工具发现 LuaJIT 的内存分配器内部存在大量的内存碎片，碎片化程度达到了接近 100%。这便导致没有整块的空闲内存可以返回操作系统。所有的空闲内存块加起来有 1.8G。解决的办法也很简单，通过另一个工具发现他们每个请求会创建几千个很碎的  Lua table，并精确定位了创建临时 table 最多的 Lua 代码路径。在这些路径上使用我们开源的 lua-tablepool 库来循环复用一下那堆 table 就应该没事了。下图是 LuaJIT 内存分配器的内存碎片分布图。                  原图                             
微博位置: 无
发布时间: 2019-03-18 11:34
点赞数: 64   转发数: 46   评论数: 15
发布工具: 微博 weibo.com

78:今年春节前后，我们有一家技术支持的付费客户希望他们自己写的 OpenResty 应用能提高一下性能。于是我们给他们上 OpenResty Trace 平台直接进行远程活体追踪，在他们的宿主系统上面以非侵入的方式，穿透进他们线上正在运行的 docker 容器，对容器内的 openresty 进程采样出了 Lua 语言级别的 CPU 火焰...全文 
微博位置: 无
发布时间: 2019-03-18 11:12
点赞数: 40   转发数: 26   评论数: 4
发布工具: 微博 weibo.com

79:最近观察到我们最复杂的一个 ylang 动态追踪工具，在被 stap 编译的时候需要特别久的时间，于是我用 stap 来分析了一下 stap 自身，生成了一张 C++ 的 CPU 火焰图，发现了一个性能瓶颈占了绝大部分的 CPU 时间，于是快快地搞了一个小补丁，结果编译时间从 23 秒骤降到了 1.6 秒，节约了 93% 的时间。好爽。这个补丁已经提交到了 systemtap 官方邮件列表：http://t.cn/Ex5x1tD 补丁邮件里也附上了相关的细节信息，包括优化前后的原始的火焰图。                  原图                             
微博位置: 无
发布时间: 2019-03-18 11:00
点赞数: 63   转发数: 37   评论数: 12
发布工具: 微博 weibo.com

80:我刚刚发布了 OpenResty 1.15.8.1 RC1 版：http://t.cn/EI5I4mQ 下载地址和完整的更动列表都在这个页面上。欢迎大家测试反馈！  
微博位置: 无
发布时间: 2019-03-03 09:45
点赞数: 8   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

81:昨天 OpenResty 开源社区的一位哥们报了 LuaJIT 在某些特殊情况下会陷入死循环的问题，很难复现。今天我用 Mozilla rr 工具调了一下，快速定位了这是一个“use after free”的问题，根本原因是 LuaJIT 的垃圾回收器里有一个小 bug。打了一个单行的小补丁就修好了。具体细节讨论我写在那个 GitHub issue 里了：http://t.cn/EfBNt7V 我的 rr 调试过程也整理发到这个 gist 上面了：http://t.cn/EfBNt7x 这个补丁已经只有一行，已经包含在 OpenResty 自己的 LuaJIT 分支里，会随最近的 OpenResty 1.15.8.1 一起发布。                                 
微博位置: 无
发布时间: 2019-02-28 11:13
点赞数: 43   转发数: 40   评论数: 9
发布工具: 微博 weibo.com

82:前一阵子我还写了一篇介绍我们的 OpenResty EC2 测试集群工具链的详细文档，也放 openresty.org 官网上面了：http://t.cn/EfhVpiB 欢迎有兴趣的同学帮忙译成中文，提交 pull request 哈。这些年来，这个东西成功帮我找出来很多有趣的 bug，包括 Nginx 核心和 LuaJIT 核心里的问题，是 OpenResty 版本发布前不可缺少的测试步骤。                  原图                             
微博位置: 无
发布时间: 2019-02-22 07:36
点赞数: 22   转发数: 24   评论数: 2
发布工具: 微博 weibo.com

83:最近看新闻，看到 NASA 投了几百万美元在研究用 3D 打印技术和纳米材料，可以直接从零把各种传感器、无线数据发送元件等等东西都一起打在一整块小硅片上，感觉好爽。以后利用这种技术，咱们的机器编程技术也可以在个性化硬件设计和制做上大显身手呀。硅谷这边也有 startup 在用 3D 打印造火箭了。  
微博位置: 无
发布时间: 2019-02-20 14:59
点赞数: 16   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

84:Thibault 同学在用我的 EC2 测试集群工具链，通过 check leak 测试模式压测 OpenResty 的 lua-resty-core 项目的测试集时，捕捉到 luajit 在某些情况下会段错误的问题。于是我今天快快地在 luajit 核心中定位了一下问题，原来是 event hook 在处理 Lua 栈的时候有 bug，便搞了一个补丁修了一下：...全文 
微博位置: 无
发布时间: 2019-02-20 14:44
点赞数: 10   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

85:上周抽空写了一篇比较详细的 OpenResty C 代码风格指南，当然，这也适用于一般的 Nginx 核心或 Nginx C 模块的 C 开发，放到 openresty.org 官网上面了：http://t.cn/EVTcJvD 附上了很多代码实例来讲解大部分的规则。如本文有所遗漏或不准确的地方，欢迎批评指正哈。  原图 
微博位置: 无
发布时间: 2019-02-19 15:24
点赞数: 38   转发数: 79   评论数: 3
发布工具: 微博 weibo.com

86:每次我在微博和微信朋友圈里发招聘贴，都能招到一两位优秀的人才，所以这次我再试一下。我们 OpenResty Inc 的中国大陆子公司诚邀前端工程师加入。希望能和对前端技术有激情，有想法，有追求的年轻人一起构建优美而强大的各种 Web 应用。不要求非得是大牛，但需要有强烈的求知欲和强大的学习能力。可以致力于 Vue、d3.js/SVG、three.js/WebGL、WebExtensions、CodeMirror 等各种技术栈的创造性的前端工作。拥有一定的美感和品味。不拘一格，喜欢挑战。曾做过酷炫的前端应用可以展示给我们。我们不纠结学历、学校和公司工作经历。远程工作模式，工作地点随意。我们会签订正式的劳动合同，会提供五险一金。会提供丰厚的美国公司的期权。对于还在学校的同学，也提供兼职职位和毕业后的转正途径（如果能胜任工作的话）。欢迎有兴趣的朋友投简历到 talents@openresty.com 邮箱，记得附上自己最酷的作品哦。下面的 gif 动画是我们前端的一位女同学做的一个小东西自动生成的，全比例的文件在这里：http://t.cn/EcsFyzT 非常感谢！                  原图                             
微博位置: 无
发布时间: 2019-02-14 11:16
点赞数: 47   转发数: 29   评论数: 17
发布工具: 微博 weibo.com

87:上个月我们公司几乎整个工程团队在曼谷 retreat 了几天，一起游玩加一起开会。我们国内有的同学我还是第一次见到真人。很开心。就是从旧金山飞曼谷有些伤不起，单程 20 多小时。幸好我通过修习入出息，在飞机上也休息得不错。曼谷大街上的摩托车大军和很多巨幅的国王画像都给我留下了深刻的印象。以后咱们公司在海外 retreat 或许也可以制度化了，只要签证不难就好                   原图                             
微博位置: 无
发布时间: 2019-02-08 15:28
点赞数: 35   转发数: 18   评论数: 8
发布工具: 微博 weibo.com

88:最近社区报告了我们自主开发的一个 LuaJIT 新功能让 LuaJIT 在 ARM 体系结构上不能构建成功。于是我利用交叉编译工具链和 qemu 的用户模式，再加上 Mozilla rr 工具，快速地复现、定位和修复了这个 regression。相关细节信息可以参见这个 GitHub issue: http://t.cn/EtYYsbJ 现在我可以在我的 Fedora x86_64 Linux 系统上直接通过 qemu-arm 和 qemu-aarch64 来跑 LuaJIT 官方测试集和我们自己的扩展测试集了，很方便。                                 
微博位置: 无
发布时间: 2019-01-31 14:47
点赞数: 29   转发数: 13   评论数: 4
发布工具: 微博 weibo.com

89:我刚放出来开源 openresty 的一个新的预览版：http://t.cn/EtYltkF 预览版一般没有 change log ，不过这个版本刚好有一份，感谢 Thibault 的编辑工作：http://t.cn/EtYltFv 欢迎大家试用和反馈。包含了很多大的新特性，也有不少 bug 修复。我们正在准备 rc1 版，还将有多个新功能和新的库会加进来。OpenResty 1.15.8.1 这个版本会很大。                                 
微博位置: 无
发布时间: 2019-01-31 14:39
点赞数: 12   转发数: 15   评论数: 2
发布工具: 微博 weibo.com

90:LinkedIn 开了账户的一大麻烦是猎头和 recruiter 的骚扰信息太多。不过有时也有客户会通过 LinkedIn 私信来尝试联系我，所以倒也不能直接关了……记得几年前见一位投资人时，那个投资人就嫌消息太骚扰，直接关账户了。  
微博位置: 无
发布时间: 2019-01-01 13:34
点赞数: 11   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

91:我们 OpenResty Inc 公司（ http://t.cn/RCrz3cb ）的中国子公司诚邀优秀的销售工程师加入。OpenResty Inc.公司总部在美国，致力于通过机器编程、机器测试、机器调试和机器演示等技术更好地服务于各行各业的企业客户。这是一个全职职位，我们可以在当地提供五险一金。初创团队成员会获得优厚的股票期权。薪资面议。工作地点不限，可在家办公，也可以到我们的珠海办公室。需要有很强的学习能力、思考能力、沟通能力和工作热情，有一定的互联网和企业软件相关的技术背景；能帮助我们规划和拓展 OpenResty Edge、OpenResty Trace 等多条产品线在中国乃至亚州的市场，并维护在该地区的企业客户。有 to B 销售经验者优先，有三年以上销售经验者优先，有组建销售团队经验者优先。有兴趣的朋友，请将简历发至 talents@openresty.com                  原图                             
微博位置: 无
发布时间: 2018-12-18 12:20
点赞数: 70   转发数: 57   评论数: 14
发布工具: 微博 weibo.com

92:OpenResty 官方刚又新增了针对 Fedora 28、Federa 29 和 Ubuntu 18.10 Cosmic 的 Yum 和 APT 二进制包仓库。使用方法请见官网上的文档：http://t.cn/RD3Yczw  原图 
微博位置: 无
发布时间: 2018-12-10 04:54
点赞数: 21   转发数: 12   评论数: 1
发布工具: 微博 weibo.com

93:最近在系统编程层面（C 和汇编层面）尝试了一下“机器编程”的搞法，效果好到让我很兴奋。其实我原本想手动写一些静态的 C 基础库的，但很快发现用机器编程的方法可以非常简单，同时根据业务配置和实际数据动态生成的代码质量和内存布局也可以好到极致，同时保持很好的简洁性、可调试性、可理解性和可维护性。计算机科学里的一些原本实用价值有限的算法，在机器动态编程的模式下一下变得非常有用。真是一片新天地了。OpenResty 下一代的 C 核心也可以这么搞了，再也不用纠结于在很多彼此矛盾的设计目标和需求之间做各种艰难的权衡和折衷了。优化无止境！                                 
微博位置: 无
发布时间: 2018-12-09 16:23
点赞数: 44   转发数: 31   评论数: 10
发布工具: 微博 weibo.com

94:clang 的编译速度明显比 gcc 要慢，不论是大程序还是小程序。这一点在 ./configure 脚本进行 feature test 时显得尤为明显。可惜 ./configure 脚本一直都没有像 make 环节那样支持多核并行跑。OpenResty 的 ./configure 脚本倒是特意加了 -jN 命令行选项，但也没有并行化 nginx 的 feature test 部分，只是 LuaJIT 部分。                                 
微博位置: 无
发布时间: 2018-12-09 09:33
点赞数: 10   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

95:最近自己攒了一台 PC：Intel Core i9-9900K，G.Skill 64G 3466MHz DDR4 内存，Gigabyte Z390 Aorus Master 主板，Samsung 970 Pro SSD，Corsair Hydro H150i PRO 水冷，Corsair Crystal 570X RGB 机箱。运行我们的 systemtap-plus 的测试集，相比我的最高配的 mid-2015 MBP，整体时间减少 74%。一开始是装的 Ubuntu，但很快发现 Ubuntu 18.10 和 18.04 的官方内核还没把 post-meltdown 引入的 regression 修完整，果断放弃。后来又尝试装最新的 Fedora 29，结果发现 X Window 都起不来，对集成显卡存在兼容性问题，最后还是装了 Fedora 28 了事。                  原图                             
微博位置: 无
发布时间: 2018-12-09 06:47
点赞数: 34   转发数: 18   评论数: 16
发布工具: 微博 weibo.com

96:今天我一口气给 Fabrice Bellard 大神的 TinyCC（TCC）编译器项目提了 6 个补丁：http://t.cn/Eype7Jx 其中修了一个 use-after-free 的 bug，还有就是给 libtcc 的 AOT 内存编译接口作了扩展和加固，避免内存里的 ELF 镜像里可执行的 ELF 段具有可写权限，同时避免那些不可执行的数据段拥有可执行权限，其余都是 TCC 官方测试工具链的改进了。                                 
微博位置: 无
发布时间: 2018-12-07 08:36
点赞数: 62   转发数: 29   评论数: 4
发布工具: 微博 weibo.com

97:昨天我在 OpenResty 大会上讲的第二场分享，“开源 OpenResty 的商业支持与 OpenResty Trace 平台”，讲了 50 多分钟。从 OpenResty 的测试讲到商业技术支持，又讲到 OpenResty Trace，最后讲到“软件小宇宙”（让机器自动用可视化方法向人类解释任意程序的执行过程）。这个分享的幻灯片在这里：http://t.cn/E2SfrsX 分享视频文件在这里：http://t.cn/E2Sfrsx                  原图                             
微博位置: 无
发布时间: 2018-11-19 11:02
点赞数: 63   转发数: 59   评论数: 8
发布工具: 微博 weibo.com

98:因为平时看的技术书都是英文的，所以发现现在思考或表达技术问题也总是不自觉地使用英语，即使是在做这次 OpenResty 大会分享的中文幻灯片的时候。总是不自觉地写出英语来，然后再立马删掉换成中文的……没想到在技术世界，英语已经不知不觉成为我的母语了。  
微博位置: 无
发布时间: 2018-11-17 14:10
点赞数: 70   转发数: 10   评论数: 10
发布工具: 微博 weibo.com

99:今天我在 OpenResty 大会上作了“OpenResty 开源世界新发展”的分享。幻灯片在这里：http://t.cn/E25hVBy （直接用浏览器打开），视频文件在这里：http://t.cn/E25hVBU 这次分享忘了提 opm 工具链和官网的改进计划了。opm 后面会支持含有 C 的 Lua 模块，同时官网也会有较大改版。另外一个忘提了的 OpenResty 新特性是基于连接池的后端并发调控（溢出连接池容量的新连接可以自动排队这样的，非阻塞）。明儿我还有一场分享，题为“开源 OpenResty 的商业技术支持与 OpenResty Trace 平台”。我已经为明天的分享做了 55 页幻灯了，还有几页就可以收工了……我加油。                  原图                             
微博位置: 无
发布时间: 2018-11-17 13:25
点赞数: 76   转发数: 95   评论数: 14
发布工具: 微博 weibo.com

100:OpenResty 大会已经开始啦，看直播请扫下图的二维码。  原图 
微博位置: 无
发布时间: 2018-11-17 10:37
点赞数: 30   转发数: 10   评论数: 5
发布工具: iPhone SE

101:Nginx 新的 http2 的安全隐患并没有提供老版本的修复补丁，所以我们不能快快地发出新的 OpenResty hotfix 发布，而升级 nginx 核心是需要大量测试工作。我刚放出来一个基于 nginx 1.15.6 核心的  OpenResty 预览版，1.15.6.1 RC0：http://t.cn/EAB9HvE 有需要的同学可以试试看。这个版本我们仍然在测试，所以如果你要上生产的话，记得自己先好好测测看。                                 
微博位置: 无
发布时间: 2018-11-14 04:51
点赞数: 15   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

102:Debian/Ubuntu 原生的 deb 打包方式确实痛苦，每打一个新包，就要痛苦一回。无法想象 deb 打包工具链的作者的设计理念了，品味实在是不敢恭维。相比之下，RedHat 的 rpm 打包工具链和 spec 文件的设计简直是好到天上了（虽然仍有一些不爽的地方）。  
微博位置: 无
发布时间: 2018-11-12 08:19
点赞数: 11   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

103:Linux 主线内核里的 uretprobes 机制居然会修改用户态进程的运行时栈，会把函数的返回地址给改写了。这种实现方式会影响到目标程序在运行时的 stack unwinding，比如异常处理，也会影响 systemtap 这样的调试工具取得 C 级别上的调用栈轨迹。无论如何，这都破坏了运态追踪的“非侵入式”的基本原则。于...全文 
微博位置: 无
发布时间: 2018-11-12 07:48
点赞数: 20   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

104:正是因为不存在完美的软件，所以现代软件工程方法论中所提倡的“可复用的代码”其实还属于比较低的层次，或者说还是过于理想化了。软件工程世界没有真正的“一劳永逸”这样的事情。当出了问题或者不够用的时候，还是得一层一层地把“可复用的组件”给剥开来。从这个角度看，“可理解、可编辑、可修改的...全文 
微博位置: 无
发布时间: 2018-11-11 01:23
点赞数: 74   转发数: 55   评论数: 16
发布工具: 微博 weibo.com

105:我在去年创办 OpenResty Inc 公司其实主要并不是为了做 OpenResty，只是顺带着发展 OpenResty。OpenResty Inc 公司的使命是让机器多做事，人类少做事，不限于某一种技术栈了。这才是真正让我兴奋的事情。公司自从创办以来这一年半，我们团队研发了很多有趣的技术，其中很多技术已经在我们公司内部大量使用了，比如“机器编程”、“机器测试”、“机器调试”、“机器演示”、还有“机器运维”。后面会陆续发布出来。先自己吃一吃“狗粮”，自己先用爽了。                                 
微博位置: 无
发布时间: 2018-11-08 09:41
点赞数: 85   转发数: 31   评论数: 9
发布工具: 微博 weibo.com

106:早年的时候，我总想着找一个靠谱的不出问题的技术栈一直用就好了。这么多年下来最大的感触就是只要是软件就不可能不出问题，即使今天用得好好的，也许明天就掉沟里了。我们这些年用的各种层次上的软件几乎都是要自己修 bug 的，即使是 Linux 内核、gcc 编译器，乃至于 Intel 的 CPU 硬件这些一般工程师认为非常靠谱的东西，也都遇到过真实的 bug。所以对于一个好的工程师而言，重要的不是赌运气，寄希望于盯着一个技术栈的某一个特定版本一直用，而是不论什么技术栈，熟悉的不熟悉的，只要出了问题，都能自己快速定位乃至修复。这才是万全之策。（当然，如果是私有软件没有代码的话，还是联系厂商的技术支持吧……）                                 
微博位置: 无
发布时间: 2018-11-08 09:11
点赞数: 56   转发数: 72   评论数: 11
发布工具: 微博 weibo.com

107:再接再厉，今天我又成功使用 Mozilla 的 rr 工具快速定位并修复了 LuaJIT 的 JIT 编译器里的一个诡异的段错误。补丁已经提给了 LuaJIT 的作者 Mike Pall。从复现问题到补丁通过测试只花了不到一小时。而崩溃位置距离有问题的代码路径也相距甚远。这个崩溃是因为 JIT 编译器里有一个 uint16_t 的 C 结构体字段发生了整数溢出。这个 bug 也很难复现，必须先用我们的 fanlang 编译器将我们的 ylang 编译器编译成一个 Lua 程序（这个 Lua 程序的源码就有 3.6 MB），然后再运行这个 Lua 程序去编译用 ylang 编写的我们的一个分析 Perl 5 的动态追踪工具（plftrace.y）。最后一步编译操作必须不停不停地反复运行才能复现一次段错误。如果没有 rr 工具，调试这样的问题可就痛苦一万倍了。后面我们也要再进一步增强一下 rr 工具，并将之集成进我们的 OpenResty Trace 商业产品中去。                                 
微博位置: 无
发布时间: 2018-11-08 08:54
点赞数: 48   转发数: 20   评论数: 10
发布工具: 微博 weibo.com

108:今天利用 Mozilla rr 工具快速地定位并修复了 systemtap 核心中的两个比较诡异的 bug，一个是断言失败，一个是段错误。崩溃位置离真正有问题的代码位置差了十万八千里，而且只有用我们的最复杂的那些 ylang 工具自动生成的 systemtap 脚本工具才能复现（一个是分析 luajit 的工具，一个是分析 python...全文 
微博位置: 无
发布时间: 2018-11-07 12:07
点赞数: 34   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

109:近期我用 ylang 重新实现了 C 级别和 Lua 级别的火焰图采样工具，并且最近成功地用这些工具在 OpenResty Trace 平台上帮助我们的一家商业客户快速定位了一个线上的性能瓶颈，有望稍微优化后有成倍的性能提升。只是在线采样了几秒钟就好了，非常简单，也几乎没有线上可测量的性能损耗。这些 ylang 写的动态追踪工具，相比原先开源在 openresty-systemtap-toolkit 和 stap++ 等 github 仓库里的类似工具，无论是正确性、可靠性，还是可移植性和功能的丰富程度，都有了很大的提升。原先手写 stap 脚本和 gdb python 脚本，那真叫一个痛苦啊，所以完全没有不断 hack 的欲望。现在有了 ylang，可以想到哪儿写到哪儿了，而且绝大部分工具代码可以从目标开源软件里直接拷贝过来就能用，甚至很多代码可以自动生成。终于实现了原先在 Cloudflare 想做却一直没有做到的理想境界。                                 
微博位置: 无
发布时间: 2018-11-03 14:11
点赞数: 44   转发数: 37   评论数: 7
发布工具: 微博 weibo.com

110:OpenResty 核心近两年最新的发展趋势是越来越把 nginx 当作一个 IO 库来使用了，而不是作为容器。所以我也有想法后面可以搞一个不同于 nginx 多进程模型的 IO 引擎，这样可以用于一些新的应用场景，比如 CDN 级别的 Cache 软件或者数据库式的存储系统。  
微博位置: 无
发布时间: 2018-11-03 00:42
点赞数: 59   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

111:我刚把 OpenResty 1.15.5.1 RC0 这个预览版给放出来了，可以在这里下载源码包：http://t.cn/EwxW7or 这是第一个基于最新的 nginx 1.15.5 核心的 OpenResty 版本，也是第一个正式支持 ARM64 体系结构的版本。当然，我们还在测试中，放出来先给大家体验和尝鲜。最终的 1.15.5.1 正式版还会有一些大的新特性，比如 ngx_stream_lua 模块的 ngx.req.socket:peek API，还有 100% 非阻塞的 ngx.pipe API（用于 IPC 方式和 shell 命令通信）。                                 
微博位置: 无
发布时间: 2018-11-02 12:55
点赞数: 26   转发数: 8   评论数: 9
发布工具: 微博 weibo.com

112:最新版的 ngx_lua 模块已不再支持标准 Lua 5.1 解释器，编译会报 luajit.h 头文件找不到。抛弃掉标准 Lua 5.1 解释器之后，我们终于可以大量地删除模块里的很多针对它的兼容性代码。我们推荐使用我们 OpenResty 自己的 LuaJIT 分支（如果使用 OpenResty 的话，则已经用上了），虽然我们仍将一直支持标准的 LuaJIT 版本。前者的性能在很多场合下都要比后者明显更高。                                 
微博位置: 无
发布时间: 2018-11-02 07:08
点赞数: 30   转发数: 16   评论数: 8
发布工具: 微博 weibo.com

113:最近我才发现 QEMU 的作者 Fabrice Bellard 原来也是 Tiny C Compiler (tcc) 和 FFmpeg 的作者。他做的开源项目都特别是我的菜，纯 C 实现，小巧、高效而精致（出于同样的原因，我很喜欢 Nginx 和 Lua/LuaJIT VM 的实现代码）。这哥们还曾经创造过 Pi 和最大素数的纪录：http://t.cn/RyAxmLu 人家都是用超级计算机创造纪录，他只是用便宜的 PC 来做。无论是数学还是工程水平，都绝对堪称偶象级啊。                                 
微博位置: 无
发布时间: 2018-10-27 08:55
点赞数: 121   转发数: 210   评论数: 25
发布工具: 微博 weibo.com

114:Nginx 大会主办方刚刚把我在这次 Nginx Conf 2018 大会上的演讲视频给放出来了，在 YouTube 网站上面：http://t.cn/EZpvnlQ 当时使用的幻灯片在这里：http://t.cn/Ez6NPh3 确实 35 分钟的时间很不够用，讲到后面我只能一扫而过了……这个 talk 需要讲两个钟头才能讲爽了……  原图 
微博位置: 无
发布时间: 2018-10-27 08:35
点赞数: 91   转发数: 105   评论数: 22
发布工具: 微博 weibo.com

115:Kong Inc 公司最近赞助我们 OpenResty Inc 公司开发的 ngx_stream_lua 模块的 ssl_certificate_by_lua* 配置指令和相应的 ngx.ssl 模块本周会完成到开源仓库的合并。感谢 Kong Inc 公司的赞助！这些新特性会包含在下个月新的 OpenResty 开源发布版本中。  
微博位置: 无
发布时间: 2018-10-27 08:16
点赞数: 26   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

116:今年 Nginx 大会前几天快快地读了一下 Python 3.7 和 Perl 5.28 核心的 C 源码，然后快快地用 ylang 实现了它们的脚本语言层面的调用栈计算工具，从而快快地得到了它们的脚本语言层面的火焰图。在读这些开源软件的代码时，一方面文档很有用，但另一方面如果能通过 2D 或 3D 动画方式直观地展示真实的 Python 脚本或 Perl 脚本在运行过程中的核心数据结构和代码执行流的全过程的话，则会省心很多。开源软件中 90% 的代码一般都是跑不到或者很少跑到的。我们真正关心的其实就是那 10% 的核心代码路径和核心数据结构。近期我要开工弄一个可以生成 2D 动画和 2D 交互“游戏”的动态追踪系统出来，作为我们 OpenResty Trace 商业平台的一部分。                                 
微博位置: 无
发布时间: 2018-10-27 07:57
点赞数: 70   转发数: 31   评论数: 7
发布工具: 微博 weibo.com

117:新出的 Intel Core i9-9900K 这款 8 核 CPU 好火的样子，Amazon 和 Newegg 都卖断货了，标价也比 Intel 官方的建议零售价高了好多……回头等不这么疯狂了，我也用这款 CPU 加 GeForce GTX 1080 Ti 显卡攒一台 PC 来搞 3D Trace 系统的研发……  
微博位置: 无
发布时间: 2018-10-26 10:29
点赞数: 18   转发数: 7   评论数: 16
发布工具: 微博 weibo.com

118:在软件的二进制世界里游走，需要对大量的二进制数字保持敏感和很好的记忆，这跟眼外科手术一样，是绝对的精细活儿。调试和动态追踪世界如此，安全领域更是如此了。设计和识别一个有效的安全漏洞的 exploit 也更需要在二进制世界和机器代码层面进行各种精细的分析和计算了。后者难度更大，因为通常还没有任何调试符号可供参考。普通程序员一般对这个世界知之甚少了。                                 
微博位置: 无
发布时间: 2018-10-26 09:36
点赞数: 38   转发数: 21   评论数: 10
发布工具: 微博 weibo.com

119:昨晚上给 systemtap 快快打了一个小补丁，现在我们可以让它内置的 C stack unwinder 能自动跳过目标进程里面由 JIT 编译器生成的机器指令运行的 C stack frame，从而生成完整的 C 调用栈轨迹了，比如下图中的例子是 LuaJIT 的 JIT 编译器生成的机器码在运行时得到的调用栈轨迹。调用栈中的 0x7f33c76dfdeb 就指向 JIT 编译器生成的机器码地址。默认的 C stack unwinder 只能处理到 0x7f33c76dfdeb 就没法继续下去了，因为 JIT 出来的机器码肯定是没有 unwinder 需要的调试信息的（一般位于 ELF 文件 .eh_frame 段里面）。和 perf 的 JIT 接口不同，这里用的 systemtap unwinder 不需要目标进程的任何配合。                  原图                             
微博位置: 无
发布时间: 2018-10-26 09:23
点赞数: 23   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

120:Thibault Charbonnier 同学从近期开始会帮助我做开源 OpenResty 各个代码仓库的社区 PR review 和合并工作，也会帮我搞 OpenResty 开源发布的准备工作（测试失败的分诊和变更历史汇编等等）。这些工作有他帮忙，我们就可以集中力量于 OpenResty 下一代的新技术上面了。  
微博位置: 无
发布时间: 2018-10-25 03:07
点赞数: 31   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

121:在亚特兰大的 midtown 那几天快饿死了，实在没有什么好吃的。西餐的面包像石头，蔬菜像草…好不容易找了一家韩国餐厅，也无法下咽，完全被本地化改良了…悲剧。除此而外，在大街和公园里散步还是挺惬意的。和湾区真的很不一样。  [组图共6张] 原图 
微博位置: 无
发布时间: 2018-10-19 16:06
点赞数: 18   转发数: 2   评论数: 4
发布工具: iPhone SE

122:Linux 内核最初打的 Spectre/Meltdown 补丁的问题很大，比如 uprobes 和内核的 tracepoint 都被搞坏了。在 systemtap 3.3 的 release note 里就专门提到了这个问题： http://t.cn/Rs1mtUx 今天尝试在一台 CentOS 7 的阿里云虚机里运行 systemtap 时就发现目标进程总是立即崩溃（段错误或非法指令错误）。CentOS 7 官方仓库里的 kernel-3.10.0-862.2.3.el7.x86_64 这个版本的包里的内核就有这个问题。更老的内核包 ，比如 kernel-3.10.0-693.21.1.el7.x86_64，以及最新的内核包 kernel-3.10.0-862.14.4.el7.x86_64 都是正常的。                                 
微博位置: 无
发布时间: 2018-10-18 15:44
点赞数: 23   转发数: 9   评论数: 0
发布工具: 微博 weibo.com

123:在近三米的大屏幕上 review 其他哥们提的补丁，确实更容易发现微妙的小问题。  原图 
微博位置: 无
发布时间: 2018-10-15 15:28
点赞数: 44   转发数: 11   评论数: 13
发布工具: iPhone SE

124:使用 pyftrace 工具追踪最简单的 Python 3 脚本的运行过程时，有一个意外的发现，即会追踪到大量的到 importlib._bootstrap 这个 Python 模块的函数调用。这应该是 CPython 3 解释器在启动时为了完成环境自举，自动运行的 Python 代码。但这里的 Python 函数调用未免太多了点，有 2 千多次之多。我把完整的 trace 输出放到这里了：http://t.cn/EhJMJdT 难怪 CPython3 的启动时间那么久，远高于 Perl 5（18 ms 对 Perl 5 的 4ms）。使用 plftrace 工具追踪最简单的 Perl 脚本就没有观察到任何启动时自动发起的 Perl 函数调用。                                 
微博位置: 无
发布时间: 2018-10-04 11:43
点赞数: 14   转发数: 22   评论数: 1
发布工具: 微博 weibo.com

125:Python 3.7.0 官方源码包里面还专门提供了一个 gdb python 库脚本，在 Tools/gdb/libpython.py 这个文件里，专门为了方便用 gdb 来调试 CPython 解释器以及 Python 的 C 扩展模块的。也有一篇专门的 Python 官方文档介绍这里的官方 gdb 工具：http://t.cn/EhxlVc8 这些 gdb python 工具还是挺 hack 的，限制也非常多，支持也不完整，很多情况下明显也不能工作（比如获取 Python 调用栈轨迹过于依赖 C 调用栈，而当编译 CPython 时使用较高的 C 编译器优化级别时，C 调用栈经常是很不靠谱的）。Python 官方应该考虑使用我们的 ylang 编译器自动生成的 gdb python 代码，还可以少维护一份代码，只需要维护好核心的 C 源码树就足够了，毕竟我们的 ylang 是和 C 语言基本兼容的。                                 
微博位置: 无
发布时间: 2018-10-04 09:50
点赞数: 10   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

126:和 Perl 5 类似，Python 3.7 解释器里面也有内置有 UDST 静态探针。这一篇 Python 官方文档对此有专门的介绍：http://t.cn/EhxpMTr 同样和 Perl 5 类似，Python 3 的静态探针也很鸡肋，提供的信息更少，连类名信息都没有，同时也需要特殊的编译选项，即使在不用时也有额外的运行时开销。我用 ylang 写的 pyftrace 工具则完全没有这些问题和限制。                                 
微博位置: 无
发布时间: 2018-10-04 09:39
点赞数: 3   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

127:搞完针对 Perl 5 的 plftrace 工具之后，我又花了两三天时间很快搞定了针对 Python 3.7 的类似工具，叫做 pyftrace，只花了我 507 行 ylang 代码，比 plftrace 还简单。绝大部分代码还是拷自 CPython 3.7.0 的源码包。大部分时间还是花在熟悉 CPython 解释器的内部实现上面了。这个工具可以动态追踪 Python 函数的调用入口和出口的细节信息，包括入口处的 Python 调用栈轨迹信息。比如下图 2 中的 Python 小程序使用 pyftrace 追踪执行产生的结果输出见下图 1。Python 3 的函数调用协议可比 Perl 5 的复杂多了，有 *args、**kwargs、keyword only args、可选参数等各种特性，我都实现了。同时 Python 的标准数据类型也比 Perl 5 丰富多了。ylang 编译器从这个 14KB 源码的 pyftrace 工具，自动生成了 120KB 的 gdb python 脚本工具和 76KB 的 systemtap 脚本工具。             [组图共2张]      原图                             
微博位置: 无
发布时间: 2018-10-04 09:28
点赞数: 24   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

128:Perl 5 解释器自身其实也提供了 UDST 静态探针用于追踪 Perl 函数的调用事件，但缺很多关键信息，比如没有函数的实际参数值，也没有函数返回值信息，同时即使不在追踪，也会有额外的运行时开销（虽然 UDST 本身在不用时没有损耗，但 Perl 解释器为 UDST 探针准备参数数据时，则需要做一些额外的计算）。另外 Perl 的静态探针支持需要特别的编译参数（默认并不开启，在 Ubuntu 上面提供的系统 perl 包也没有开）。所以是很鸡肋的东西。我刚才展示的用 ylang 编写的 plftrace 工具并不依赖于 Perl 的 UDST 静态探针，是纯粹的“动态追踪”。                                 
微博位置: 无
发布时间: 2018-10-04 09:01
点赞数: 5   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

129:前几天花了 688 行 ylang 代码写了一个 plftrace.y 动态追踪工具，可以追踪任意 perl 5 进程中执行过的所有 Perl 函数调用的入口和出口的细节信息，包括 Perl 函数名、包名、文件名、行号、实际参数值的列表、函数返回值，函数调用的上下文等等。工具本身只有 25KB 的源码，ylang 编译器自动生成了 198KB 的 gdb python 工具的代码和 152KB 的 systemtap 脚本代码。当然，这几百行 ylang 代码中几乎所有代码都是从 perl 5.28 的源码包里面拷出来的，毕竟 perl 最知道如何访问自己的这些核心数据结构了，不用我来想。比如下面图 2 中的 Perl 小程序使用 plftrace 工具追踪可以得到如下图 1 中的输出结果。             [组图共2张]      原图                             
微博位置: 无
发布时间: 2018-10-04 08:46
点赞数: 16   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

130:很喜欢使用下面这个我写的 systemtap 脚本（名为 ctrace.stp）来分析陌生的 C 程序的内部执行细节。这个脚本会打印出目标 C 程序执行过的所有 C 函数的入口细节，包括入口处的函数名、实际参数列表，以及当前的 C 调用栈轨迹。比如可以这么调用：trace-all.stp -c 'ls *.c' 可以追踪 ls *.c 这个 shell 命令跑过的所有 C 函数及相关调用细节，在我机器上的一个输出样本可以在这里看到：http://t.cn/EhxU4FJ 通过 addr2line 这样的工具这样的工具进行尾处理，可以进一步得到调用栈里的 C 源文件名和行号等信息。另外还可以用 -x PID 选项代替 -c CMD 选项。                  原图                             
微博位置: 无
发布时间: 2018-10-04 08:23
点赞数: 36   转发数: 29   评论数: 4
发布工具: 微博 weibo.com

131:最近用我们和 C 语言兼容的通用调试语言 ylang 写了多个针对 Perl 5 和 Python 3 的动态追踪工具，开发效率还是挺高的。ylang 工具里绝大部分的代码其实是直接从被分析的目标开源软件的源码树里拷过来的，顶多稍微编辑一下，去掉会产生副作用的语句，比如写内存的操作或者动态内存分配。其实目前只有 C 函数、C 全局变量和 C 静态变量需要手工复制过来，而工具里引用的 C 宏和 C 类型等信息可以直接从 DWARF 调试符号中提取出来。比如对于我们最复杂的那些工具，从 -g3 DWARF 自动生成实际使用到的 C 宏定义，仅此一项就能节约大约 30% 的手写 ylang 代码量，还是很可观的。未来使用到的 C 全局变量的声明也应该可以从调试符号自动生成，C 函数的定义结合 binary analysis/translation 技术也可以至少半自动化一下。最理想的情况是：即使编写复杂的 ylang 工具也只需手写或编辑寥寥几行代码而已。                                 
微博位置: 无
发布时间: 2018-10-04 06:37
点赞数: 8   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

132:CPython 3.7 的源码实现还有一个给我留下深刻印象的地方，即对 C 语言的逗号表达式的大量使用。CPython 里面定义的不少宏其实是通过逗号表达式来植入一些断言检查的。这些逗号表达式在 C 代码的各种上下文出现，倒是帮助我定位了 systemtap 的脚本语言里的逗号表达式实现的好几个有趣的 bug。这是因为我使用我们的 ylang 通用调试语言编译器直接编译 CPython 的一些 C 源码，而 ylang 会把 C 逗号表达式直译为 systemtap 脚本语言的逗号表达式，所以 CPython 也算是作为 systemtap 的压力测试用例了。systemtap 的逗号表达式实现是我前不久做的，通过 CPython 新发现的那些 bug 昨天都修好了。                                 
微博位置: 无
发布时间: 2018-10-04 06:21
点赞数: 5   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

133:CPython 3 里面对 UCS-2 等定长 Unicode 字符编码的使用，让我想起 Windows 操作系统内核里面大量使用 UTF-16 来存字符串数据。UTF-16 也是从 UCS-2 演化出来的变长编码。所以在调试和分析 Windows 内核时，也必须要处理这些 UTF-16 编码的数据，尤其是里面会有很多字节是 0，所使用的调试和动态追踪工具链必须得能很好地处理这样的二进制数据串（显然不能按 C 字符串的语义来处理了）。比如 vprobes 和 systemtap 的原生字符串类型都是 C 字符串的 NULL-terminated 语义，所以处理这种字符串会很纠结（vprobes 的一篇进行攻击检测的论文就专门提到了分析 Windows 内核数据结构里的 UTF-16 字符串数据时的尴尬）。我们正打算近期把 systemtap 的原生字符串换成二进制字符串的语义。貌似 Java、.NET、Qt 和很多 JavaScript 实现内部也用的 UTF-16 编码，所以还是挺常见的了，虽然在 Web 和 UNIX 世界里远不及 UTF-8 普及。                                 
微博位置: 无
发布时间: 2018-10-04 06:03
点赞数: 7   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

134:较新的 CPython 3 根据每个字符串里实际使用到的 Unicode 字符集范围来决定这个字符串对象（UnicodeObject）所使用的编码方式，比如“UCS-1”、UCS-2 和 UCS-4 这些定长的 Unicode 编码方式。CPython 使用定长编码方式主要是为了在字符串里按字符数索引时可以实现 O(1)，但无疑让其他操作必须总是分情况来讨论了，同时调试 CPython 内部时也必须分情况进行编码转换，否则没法看 Unicode 对象里面的字符串内容。像 Perl 5 解释器，内部直接用一种编码，即 UTF-8，来表示所有宽字符串，缺点是按字符数索引必须是 O(n) 操作，优点是设计上非常简单，只有一种编码方式，另外存储空间也比较紧凑，同时也方便调试，毕竟大部分调试工具链和显示终端都是使用 UTF-8 的。                                 
微博位置: 无
发布时间: 2018-10-04 05:51
点赞数: 5   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

135:CPython 3.7 核心的 C 源码在一些 C 类型和 C 宏的命名上有些地方不够严谨，比如在 asdl.h 头文件里面有一个 typedef 的名字叫 bytes，而 bytes 这个名字又大量用于 CPython 自己的一些函数的局部变量的名字（比如 Unicode 部分的代码）。再比如 arraymodule.c 等编译单元里定义了 b 这种短名字的宏，却没在用完 #undef 掉，而 CPython 自己有很多函数的参数名就是用的名字 b，这也算是 CPython 在给自己挖坑了。                                 
微博位置: 无
发布时间: 2018-10-04 05:20
点赞数: 7   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

136:最近几天一直在看 CPython 3.7.0 核心的源码。总的来说，CPython 的 C 代码写得还是比较中规中矩的，风格和 Python 语言本身的风格类似。比如既有 DOM 又有 AST，很多重复的代码也没有通过宏来抽象掉（当然，值得注意的是，CPython 通过 ASDL 来生成 AST 的类型定义等东西）。其优点是比较容易看懂，缺点是运行时效率应该不会高到哪儿去。从“书法”风格上讲，Perl 5 解释器的实现有些像狂草，而 CPython 则算是正楷了。                                 
微博位置: 无
发布时间: 2018-10-04 05:14
点赞数: 16   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

137:glibc 这个 C 库和 Linux 内核一样，不能使用 gcc -O0 来编译，即不能禁掉 C 编译器的优化。当然，使用 -Og 选项是很好的折衷，但也不能通过 -fno-inline 选项禁掉内联函数的优化，要不然 glibc 里的 librt 库会在 ld 链接时报错，会报“undefined reference to `__aio_create_helper_thread'”这个错误（使用 glibc 2.26）。                                 
微博位置: 无
发布时间: 2018-10-02 01:19
点赞数: 12   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

138:gcc 编译器的优化级别越高，所做的代码分析就越深越狠，所以 -Wall 模式下也越可能发现代码中潜在的问题并打印出警告。比如我跑在 AWS EC2 上面的 OpenResty 测试集群，有一种测试模式是使用 gcc -O3 来编译的，时不时就会得到一些有趣的 gcc 警告，指示出代码中一些潜在的问题，而使用 -O2 则看不到。最近我们团队的泽轩给 systemtap 添加的脚本语言级别的调用栈打印补丁，其生成的内核模块在用 gcc -O2 时发现了一个代码分支上的问题，而使用 -O1 则看不到。所以开发时时不时换用 -O3 来编译还是挺有意义的。                                 
微博位置: 无
发布时间: 2018-09-29 13:21
点赞数: 19   转发数: 22   评论数: 6
发布工具: 微博 weibo.com

139:源自 Solaris 的 dtrace 世界其实一直热衷于 Sun 公司当年开发的 CTF 调试符号格式，而不是 DWARF。CTF 的卖点是比 DWARF 紧凑和简单很多。关于 CTF 格式的更多细节可以参见这一篇文章：http://t.cn/EP5HDcA 相比之下，DWARF 格式确实包罗万象，非常复杂，生成的数据也比较庞大，虽然较新的版本支持压缩，但还是挺大的。所以我也在考虑在我们的 OpenResty Trace 平台里面引入更紧凑的调试符号格式，既小巧，查询起来又高效。可以从 gcc 和 rpm 等工具链生成的 DWARF 自动转换到我们的格式。                                 
微博位置: 无
发布时间: 2018-09-24 13:32
点赞数: 11   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

140:学习 DWARF 标准调试格式最好的方式就是阅读 DWARF 官方的标准白皮书了，可以从官网上面下载 PDF：http://t.cn/EP5jTCj 各个 DWARF 版本的白皮书都有。除此而外，网上能找到的文字材料非常有限。当然，同时还得把玩 gcc、clang 这些 C 编译器实际生成的 DWARF 数据格式（可以用 objdump 这样的工具直接 dump 出来，二进制的不方便看）。比如 clang 生成的 DWARF 结构和 gcc 就有不少重要的区别，而不同版本的 gcc 生成的 DWARF 数据结构也是有出入的，好在 gcc 生成的调试信息质量是越来越好的。GNU 有定义自己的 DWARF 扩展，gcc 和 RedHat 的工具链有大量使用，一般都是以 DW_GNU_  开头的东西，这些扩展就更没有文档了，主要靠翻代码了。                                 
微博位置: 无
发布时间: 2018-09-24 13:22
点赞数: 10   转发数: 11   评论数: 1
发布工具: 微博 weibo.com

141:刚发现一个有趣的细节，用 gcc -g3 编译 C 程序，默认生成的 debuginfo 里面的宏信息所使用的 dwarf 指令是 DWARF v5 格式里才有的，而此时 gcc 7.3.1 生成的 debuginfo 里面仍自称是 DWARF v4 这个格式版本。DWARF v4 白皮书里面并没有提到那些宏相关的指令，比如 DW_MACRO_define_strp 和 DW_MACRO_start_file 这些指令。它们首次出现是在 v5 的白皮书里。                                 
微博位置: 无
发布时间: 2018-09-24 13:16
点赞数: 8   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

142:Python 在设计上比较多地考虑了人类手写时的体验，但对于机器自动生成场景的考虑应当是 0。自动生成 Python 代码还是非常痛苦的（除非是最傻最简单的基于模版的代码生成）。尤其是把 C 语言这样的语法非常灵活的语言（这里说的不是抽象力和表达力）直译到 Python 语言的时候。比如 Python 的变量作用域很古怪（没有语句块级别的作用域，全局变量也需要每次用之前显式声明）、没有变量引用的概念（输出参数需要通过数组或字典这样的容器来摸拟）、赋值也不能放到表达式级别、字典查找时 key 如果不存在会直接抛异常、没有 #line 这样的宏指令动态修改当前的源码行号和源码文件，还有缩进敏感之类的问题。所以我们的 ylang 编译器在生成针对 gdb 的 Python 代码时，还是下了很大的功夫的。缩进敏感其实倒也还好，毕竟我之前搞其他的小语言编译器时，也尽量让生成的 C/Lua/SQL/JS/CLIPS/Verilog 等各种语言的代码，保持缩进优美。只不过现在缩进对齐变成必须完全搞对的东西了，哪怕是错一点都会导致 CPython 报错了。                                 
微博位置: 无
发布时间: 2018-09-24 09:32
点赞数: 16   转发数: 19   评论数: 6
发布工具: 微博 weibo.com

143:由于我们的 ylang 编译器让我们用 ylang 编写的调试工具实现“一次编写，到处运行”，所以像 gdb 和 systemtap 这样的不同的调试框架和平台的平行比较变得非常容易。既可以比较功能，也可以比较性能。比方说 gdb 可以分析 core dump 文件，而 systemtap 则不行，而 systemtap 可以不借助任何虚拟化，直接分析当前操作系统的内核，而 gdb 则不行。还是挺有趣的。机器编程和编译技术就是好呀，可以超越现有开源技术的各种局限，实现大一统。                                 
微博位置: 无
发布时间: 2018-09-24 09:16
点赞数: 9   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

144:gdb python 的另一个显著的缺点是性能不好。虽然使用 gdb 的场合多是离线的，比如离线分析 core dump 文件之类的，或者用于离线开发时的调试，但对于一些比较复杂的工具，离线等待也有点吃不消。比如我今天跑的一个追踪 perl 5 的 Perl 函数调用的入口和出口事件的工具，用 gdb py 运行需要长达 1 小时 20 多分钟，而用 systemtap kernel 模式跑只需要 30 秒。当然，主要开销不在 python 而在 gdb 核心。gdb 核心把 longjmp 当常规的错误处理用，性能肯定非常感人了，这一个瓶颈在 CPU 火焰图上还是很明显的。当然了，CPython 的效率也很一般了，PyPy 这个带 JIT 的 python 实现在性能上要好很多，但可惜 gdb 并不兼容 PyPy（PyPy 的 C 扩展 API 和 CPython 并不兼容）。                                 
微博位置: 无
发布时间: 2018-09-24 09:11
点赞数: 7   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

145:systemtap 自己的脚本语言在语法上比较接近 C 语言（我们最近提给官方的补丁让它更加接近 C 语言了，比如支持逗号表达式，同时让三元操作符的优先级符合 C 标准，这简化了我们的 ylang 编译器的 stap 代码生成器的实现），但是它却没有真正意义上的 C 类型系统。本质上讲，它只有 long（64 位有符号整数）、string 和 aggregate 这三种变量类型（systemtap 的 @cast 和 @var 运算符可以提供有限度的目标 C 类型信息，但却局限于当前的表达式）。所以从这个意义上讲，stap 语言还不如汇编语言灵活。汇编语言至少还支持无符号整数运算，同时也还支持各种大小的整数类型（比如 8 位、16 位、32 位之类）呢。所以 ylang 在自动生成 stap 脚本时，所自动完成的转换工作的复杂度还是相当高的，因为 stap 这个虚拟机提供的东西很多时候还不及一个真实的 CPU 硬件。我们最近还给 stap 添加了纯软件的 FPU 支持，要不然连浮点计算都没有，那就更没的搞了。                                 
微博位置: 无
发布时间: 2018-09-24 08:44
点赞数: 6   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

146:gdb python 里的 gdb.Value 对象在运行时会有类型信息，也会进行一些自动的类型转换，不过 gdb python 的类型转换并没有遵照 C 语言标准的隐式类型转换规则，比如 integer promotion 之类的，所以直接手写 python 时坑还是很多的（当然，直接手写 Python 来摸拟 C 代码本身也是非常反人类，写多了会做噩梦。手写过比较复杂的 gdb python 工具的人都懂的）。当然，gdb 的这个设计本身也是有道理的了，毕竟 gdb 也不是专门为调试 C 语言设计的。所以我们的 ylang 编译器会自动处理这些细节，生成对应的 gdb python 代码，确保和 C 语言和 gcc 编译器的行为完全一致。gdb.Value 类的官方文档在这里：http://t.cn/EPq47tO                                 
微博位置: 无
发布时间: 2018-09-24 08:36
点赞数: 4   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

147:我们的 ylang 语言编译器在实现和测试时尽量和 gcc 的行为完全一致，包括那些 C 标准里没有定义的一些边界情况，C 标准里要求的一些行为细节就更需要完全符合了（像 integer promotion 这样微妙的隐式类型转换规则，我猜大部分职业 C 程序员可能也没有完全搞清楚，我做 ylang 项目之前也搞不清楚）。在测试的过程中发现了 clang 编译器的一些 bug，有的 bug 是在 C 类型推导环节，有的则是在 clang 生成的 DWARF 调试信息中，后面也计划报告给 clang/llvm 官方。在成熟度上，clang 确实还不及 gcc 呀。gcc -O0 时生成的调试符号个别地方也有 bug 就是了。                                 
微博位置: 无
发布时间: 2018-09-24 08:27
点赞数: 6   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

148:在做 ylang 的过程中，发现 gdb python 在成熟度上还是很不错的，到目前为止只发现了 gdb 的一两个 bug，即在同时追踪多个目标进程时，gdb 在 detach 的时候只会清理其中一个进程里的断点，而其他进程坡没有清理，从而导致其他目标进程在 detach 之后经过原先的断点位置时会崩掉。gdb 的这个 bug 已经报给了官方：http://t.cn/EPqZyWn 另一个 gdb bug 是存在明显的内存泄漏。而至于 systemtap 则发现缺少了不少必要的功能，同时也遇到了不少小 bug，于是我们自己给 systemtap 打了十几个大大小小的补丁，其中很多补丁已经提给 systemtap 官方，这其中又有不少已经合进官方主线了。咱们 OpenResty 公司也对开源世界做了不少贡献了。从成熟度上讲，bcc/ebpf 相比 systemtap 就更差远了，还处于“石器时代”呢，估计我们得自己搞一个 rbpf VM 作为一个我们自己的 out-of-tree kernel 模块了。ebpf 设计上的限制还是太多了点。                                 
微博位置: 无
发布时间: 2018-09-24 08:15
点赞数: 9   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

149:今年我花了两三个月时间开发了一个新的小语言编译器，叫做 ylang，作为一种 universal debug language（下图是一个小例子）。当年还在 Cloudflare 的时候就一直想搞这么个东西。ylang 语言兼容 C 语言的一个很大的常用子集（90% 以上吧），包括一些 C11 标准的新类型和新语法。同时添加了一些动态追踪特有的语言特性（像内建字符串类型、数组类型、哈希表类型、聚合统计类型等等）。这个 ylang 编译器已经可以从同一份 .y 输入文件自动生成对应的 gdb python 工具和 systemtap 工具了。后面 ylang 还可以支持 lldb、bcc/ebpf、dtrace 和 vprobes 等其他后端。ylang 同时还内建了一个比较完整的 C 类型检查器，会自动根据 DWARF 调试信息来进行和 gcc/clang 等 C 编译器完全一致的类型检查。被追踪系统里的类型信息，比如 struct/enum/union/typedef 之类的东西，也会自动从 DWARF 导入，而不必 ylang 程序里面自己声明或定义。我们编写动态追踪工具的成本有了极大的降低，工具本身的正确性也有了极大的提高（因为通常我们只需要把被追踪软件里现成的 C 代码拷过来就能用了）。这个 ylang 编译器近期将成为我们公司 OpenResty Trace 商业平台的一大功能（同时也是基础）。                  原图                             
微博位置: 无
发布时间: 2018-09-24 08:04
点赞数: 44   转发数: 14   评论数: 6
发布工具: 微博 weibo.com

150:昨天在用 systemtap 的 dyninst 模式来运行我的一个针对  Perl 5 解释器的动态追踪工具时，遇到了一个 bug。dyninst 让 perl 进程陷入死循环了，于是只好用 systemtap 的 kernel 模式跑了一下火焰图采样工具，快速定位了 perl 进程里插入的 dyninst 死循环代码的调用栈轨迹，然后报告给了 systemtap 官方：http://t.cn/EPGweGv 还是挺有趣的。不同的动态追踪工具之间可以相互调试自己的 bug……                                 
微博位置: 无
发布时间: 2018-09-24 02:54
点赞数: 12   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

151:阅读把 C 宏用得很夸张的软件项目的源码时，gcc -g3 + gdb 的 info macro 命令是非常方便的，可以准确而快速地确定任意一个 C 宏的定义位置和定义内容。虽然 ctags 这样的工具也能做类似的事情，但是由于 ctags 并不知道任何具体的项目 bulid 参数，所以当一个宏有多份不同定义的时候，无法确定究竟生效的是哪一个，容易失准。我看过的开源项目中，Perl 5 解释器和 LuaJIT 都是把 C 宏用到极致的。                                 
微博位置: 无
发布时间: 2018-09-24 02:40
点赞数: 16   转发数: 23   评论数: 3
发布工具: 微博 weibo.com

152:前一阵子在看 Linux 内核源码树里和 gdb 调试相关的文档时，看到了 User Mode Linux 这个有趣的东西。它的首字母缩写是 UML，但显然不是面向对象世界里的 UML。后来在精读 qemu 官方用户手册时又一次看到了。于是稍微多了解了一下，发现 UML 的作者还出过一本书，便找来看了一遍。UML 的做法和 VMware/Vbox/Qemu 等主流的虚拟化技术不同，摸拟的是操作系统内核所需硬件的软件接口，而不是摸拟硬件本身。于是它可以把 guest OS 的内核及其之上的 guest 用户进程直接映射为 host OS 上的普通进程。这样一来，可以直接用 gdb 或 valgrind 等用户态调试工具去分析 guest OS 了，而无需借助于 gdb stub server 和 gdb remote 模式这样的 workaround。真是非常另类和有趣的玩法。                                 
微博位置: 无
发布时间: 2018-09-24 02:31
点赞数: 15   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

153:好吧，昨儿给 systemtap 官方 git 仓库提交的 *register() 函数的大修补丁把原先可以工作的读取 64 位 x86_64 寄存器的 API 给不小心搞坏了，于是今天赶紧修了一下。这个 bug 是在运行我们自己的 ylang 编译器的测试集时捕捉到的，一个 LuaJIT 分析工具的测试用例死活跑不过去，只有一句 Assertion failed 的错误消息，不好调试。幸好我们团队的泽轩同学最近给 systemtap 添加的 backtrace 打印支持，一试这个补丁，立马可以打印出如下图所示的 stap 脚本语言级别的调用栈轨迹，导致断言失败的代码位置立即一目了然了。                  原图                             
微博位置: 无
发布时间: 2018-09-18 04:47
点赞数: 22   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

154:刚给 systemtap 官方仓库提交了一个补丁：http://t.cn/EvaZsN8 大修了一下 x86 寄存器读取函数 register() 和 u_register()。现在像 ax 和 bx 这样的 16 位寄存器终于是按 16 位而非 32 位整数来读取了。同时也添加了对 ah 和 dl 这样的 8 位寄存器的支持。读小于字长的寄存器的有符号值时的 sign extension 也修了一下。这个补丁里所有的 Tcl 测试用例都是我的 Perl 脚本从我们自己的声明性的测试用例自动生成出来的，省了很多麻烦。                                 
微博位置: 无
发布时间: 2018-09-17 07:07
点赞数: 37   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

155:CPython 解释器还有一个很不爽的地方是运行时异常的错误消息通常比较模糊和晦涩，比如表达式中有 NoneType 值时，也不提到底是表达式中具体哪个变量是未定义值，只有一句“TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'”。在这方面 Perl 5 解释器做得要好得多了，错误消息既人性化又具体，比如这个例子：“Use of uninitialized value $a in addition (+)”，而 LuaJIT 的错误消息也不赖，比如：“attempt to perform arithmetic on local 'a' (a nil value)”。当运行时异常发生时，是最需要解释器提供具体信息的时候了。                                 
微博位置: 无
发布时间: 2018-09-12 02:50
点赞数: 22   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

156:CPython 解释器很古怪的一个行为是默认打印出来的 Python 调用栈轨迹是倒过来的，先打印栈底，最后打印栈顶。我在其他地方还真从没见过这种顺序，一直都不太适应。好在我使用的大部分最复杂的 Python 代码都是我教机器自动生成的，所以运行时异常时反正会打印更上层语言的“正”过来的调用栈，所以问题倒也不大了（这里利用了 JavaScript 世界的 source map 的思想）。                                 
微博位置: 无
发布时间: 2018-09-12 02:37
点赞数: 18   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

157:前一阵子花了点时间快快地看了一下 D 编程语言。当我看到它的编译器能自动生成类似 C 头文件一样的东西，即所谓的"interface file"时，突然大受启发。我立刻意识到可以把这种思想应用于我们自己的 Perl 6 方言编译器 fan，即让 fan 自动生成每一个 fan 模块的接口文件，然后利用这些接口文件大大提升那些有依赖关系的 fan 模块的增量编译速度。我请我们公司团队的院生实现了一下这个想法，果然我们的一个大型的 fan 项目的增量编译速度提升了一个数量级以上，太爽了。                                 
微博位置: 无
发布时间: 2018-09-12 02:14
点赞数: 27   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

158:RedHat 的 systemtap 这个 C++ 开源项目原先就不支持使用 g++ -O0 来编译，因为其构建系统中写死了 -D_FORTIFY_SOURCE=2 这个编译器选项，而这个特性是依赖于打开优化选项的。我于是给官方提了一个小补丁（http://t.cn/Rsgdo5q )，允许用户在 ./configure 命令行上自己覆盖掉这个选项（通过 -U_FORTIFY_SOURCE 选项，并可以同时指定 -O0），于是一个比较大的 C++ 文件的编译速度在 -O0 下相比 -O1 提高了 42% 以上，相比默认的 -O2 提速就更多了。这个补丁最近已经合并到 systemtap 主线了。                                 
微博位置: 无
发布时间: 2018-09-12 01:43
点赞数: 8   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

159:使用 -O0 选项来加速大型 C/C++ 项目的构建，有时也不适用于一些比较特殊的项目。比如 Linux 内核就无法使用 gcc -O0 来编译，会直接报编译错误。这是因为 Linux 内核里一些内联的手写汇编代码假设相关部分的  C 代码所生成的机器代码是特定的形式（即优化后的形式），这算是比较极端的例子了。在这样的情况下，即使非开优化不可，则可以尽量降低优化级别，比如 -O1 通常会比 -O2 快很多，而 -Og 有时又会比 -O1 要更快一些。                                 
微博位置: 无
发布时间: 2018-09-12 01:34
点赞数: 5   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

160:对于大型的 C/C++ 项目，编译时间可能成为开发工作流中很恼人的问题。而对于同等规模的代码，C++ 尤甚。针对开发效率优化的办法主要是：1) 改用 -O0 来编译，即禁掉任何 C/C++ 编译器的优化（很多项目默认使用 -O2 来编译的），毕竟这些优化需要很多的 CPU 时间来进行分析。2) 使用 ccache 来避免不得不从零编译时的重新编译时间。3) 使用 make -jN 这样的命令充分利用多 CPU 核来并行构建（如果项目的 Makefile 写得足够靠谱的话）。禁掉编译器优化一般也会让调试更容易，因为通常没有优化的时候，C/C++ 编译器生成的调试符号更完整也更准确。                                 
微博位置: 无
发布时间: 2018-09-12 01:28
点赞数: 19   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

161:Linux 内核多年来的一大问题是物理内存空间的碎片化问题。一个 Linux 系统跑得越久，一般就越难找到大的连续的物理内存块。虽然大部分时候只要求虚拟内存地址连续，但有些时候还真的需要足够大块的连续的物理内存地址。幸好较新的 Linux 提供了 /proc/sys/vm/compact_memory 这种折衷方案可以手动集中地进行全系统的物理内存块的碎片整理（有些像老 Windows 里的“磁盘碎片整理程序”，但却是作用于物理内存的）。听说 *BSD 系统在这一块做得比 Linux 要好得多。                                 
微博位置: 无
发布时间: 2018-09-11 15:24
点赞数: 12   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

162:Linux 内核里的 ebpf 字节码虚拟机（带 AOT JIT 编译）只适用于非常简单的场景，限制非常多。systemtap 的老大也对此表达了忧虑和不满。所以 systemtap 的 bpf 后端可能永远也达不到其 kernel 模块后端的完整和强大程度。我有想法我们后面自己搞一个增强版的 ebpf VM，作为一个外部的内核模块，以取消那些过分的限制，但仍保证其安全性和可靠性。这个内核模块还可以移植到其他操作系统，比如 Mac, Windows, *BSD 之类的。 我们可以称之为 rbpf 了（即 resty bpf）。                                 
微博位置: 无
发布时间: 2018-09-11 15:08
点赞数: 16   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

163:鲜为人知的是，RedHat 的动态追踪框架 systemtap 其实有多个后端或者说运行时。大家所熟知的是默认的内核运行时（即现生成一个内核模块的C 源码，然后编译并加载进内核）。但其实近些年还添加一个纯用态的基于 ptrace 系统调用的 dyninst 后端（使用 dyninst 这个 C++ 库）。dyninst 运行时类似 gdb 的工作原理，但性能高很多。不幸的是，stap 的 dyninst 运行时在绑定到某个用户态进程时会有一个 3 秒左右的密集的 CPU 计算，这个很伤。后面得空了我们帮忙优化掉就比较完美了。另外，还有一个 bpf 后端，可以针对 Linux 的 ebpf VM 直接生成 ebpf 字节码。                                 
微博位置: 无
发布时间: 2018-09-11 14:59
点赞数: 17   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

164:用 Mozilla rr 是无法录制 qemu 的 KVM 硬件虚拟化加速模式的，我特意请教了 rr 的老大（他回复总是超快的，和 systemtap 老大一样，我喜欢！），他说 rr 本身以及内核空间都需要做不小的修改。确实从原理上讲，应该需要 Linux 的 kvm 内核模块的配合，毕竟 VT-x 和 AMD-V 这些硬件机制都比较特殊，不是简单地 mock 系统调用就能摆平的。这块如果能够搞定，就完美了，我们打算后面好好研究一下，看看怎么搞。                                 
微博位置: 无
发布时间: 2018-09-11 14:49
点赞数: 2   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

165:我那天成功地使用 Mozilla rr 录制并回放了 qemu 的纯软件摸拟模式下（即 默认的 TCG 模式）启动 Ubuntu 并关机的全过程，非常完美。rr record 生成的数据文件不过 23MB，很小。这样很多最难调试的诡异的 Linux 内核的 bug 只要能被录下来一遍，就可以用 rr 快速定位了，可以顺着回放，也可以倒着回放（利用硬件 data watchpoint），对于最难调试的内存和一些 race 问题是最有效的。qemu 现在也支持 SMP 模式，至少 vCPU 是可以配置为多核的（host OS 上面使用多 OS 线程跑 SMP 的话，虽然 qemu 也支持，但这一块貌似有 bug，后面得空了帮着调一下）。                                 
微博位置: 无
发布时间: 2018-09-11 14:45
点赞数: 14   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

166:Linus Torvalds 最近说会认真考虑从 Intel CPU 换到 AMD 的 Threadripper: http://t.cn/Rs1n6We Intel CPU 为了补 Spectre 和 Meltdown 强迫 Linux 内核打的那些补丁有多恶心，Linus 应该最清楚。不过 AMD 的 CPU 虽然核多，但单核性能貌似和 Intel 相比还是有些差距。我还是等 Intel 新一代的 CPU 能在 silicon 级别上把这些安全问题给修好了，否则真挺伤的……                                 
微博位置: 无
发布时间: 2018-09-11 14:26
点赞数: 9   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

167:VirtualBox 的官方用户手册中有一章专门介绍了其内部实现的主要方面，最有趣的是关于其软件虚拟化的做法（与基于 Intel VT-x 和 AMD-V 的硬件虚拟化相对）。VBox 强迫 guest OS 的 ring 0 代码跑在 Intel CPU 的 ring 1 权限级别上，还是非常有趣的，同时使用了 qemu 的一些代码做垫底，处理一些 ring 1 实在跑不了的那些指令，同时还讨论了 Intel CPU 在这里的一些 bug。值得一读。当然，VBox 的软件虚拟化本身相比 qemu 的 TCG 纯软件模式还是挺鸡肋的，比如不支持 64 位 guest OS，也不支持 SMP，已经跟不上当前时代了。                                 
微博位置: 无
发布时间: 2018-09-11 14:14
点赞数: 5   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

168:Java 的口号是“一切皆对象”，而 Tcl 的口号则“一切皆字符串”。Tcl 的一切皆字符串真的是非常彻底的，不仅数值是字符串，列表也是字符串，语言关键字也是字符串，控制语句和语句块也是字符串，变量还是字符串。非常奇葩的语言。  
微博位置: 无
发布时间: 2018-09-11 14:00
点赞数: 15   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

169:今年的 Nginx 大会将于 10 月上旬在美国亚特兰大举行。我将作一个主题为“Tracing and Troubleshooting NGINX, OpenResty, and Their Backends”的英语分享：http://t.cn/Rs1X5PX 欢迎在美国的朋友们去捧场哈。  原图 
微博位置: 无
发布时间: 2018-09-11 13:28
点赞数: 80   转发数: 28   评论数: 6
发布工具: 微博 weibo.com

170:我前一阵子花了两天时间集中学习了一下 Tcl 语言，学得非常认真。最显著的感觉就是：Tcl 是一个更高级的 shell。当然主要目的并不是为了以后真的拿 Tcl 来写自己的程序，而是为了教机器自动生成很多 Tcl 代码。比如我写了一个工具自动从我们声明性的 systemtap 测试用例生成 systemtap 官方测试集所接受的基于 Tcl/Expect 的测试文件。当然，学习 Tcl 也方便学习 Expect 这种非常有趣的东西。同时我也从 Tcl 语言的设计中汲取了一些好的元素，可以用于我们于运维自动化的 DSL 小语言。我的 Tcl 后来已经熟练到可以对 systemtap 的测试台模块做比较复杂的改进了，挺好。语言就是一层皮。                                 
微博位置: 无
发布时间: 2018-09-11 11:42
点赞数: 26   转发数: 10   评论数: 4
发布工具: 微博 weibo.com

171:systemtap 有一个很庞大的官方测试集，在我的高配 MBP 机器上用多核并行跑也要跑两个小时左右。比较郁闷的是 systemtap 的官方测试台是基于古老的 DejaGnu 的，而 DejaGnu 又是基于古老的 Tcl/Expect 语言和工具链的，那叫一个原始和难用啊。所以我们自己的测试驱动使用的是我基于 Perl 的 Test::Base 模块的测试台，编写和运行测试的效率都提高了好多倍，终于让工作流流畅起来了。                                 
微博位置: 无
发布时间: 2018-09-11 11:34
点赞数: 5   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

172:systemtap 的源码主要是 C++ 的（虽然运行时主要是用 C 写的）。很经典的基于抽象语法树（AST）的 source-to-source translator。难得的是它还自己实现了很多 AST 级别上的语义分析器和优化器（不同于传统优化编译器里面基于 SSA 和其他更低级 IR 的优化器的实现）。不过这些优化器让添加新功能变化难了不少，因为需要经常需要修改和调整所有的 pass 以支持新的 AST 节点。systemtap 是把 C++ 当作脚本语言来使的，比较容易理解（当然，一些 OO 设计模式需要首先熟悉才方便看），我花了两天就看明白了，就可以动手大改了。                                 
微博位置: 无
发布时间: 2018-09-11 11:29
点赞数: 4   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

173:泡 IRC 聊天频道最好的工具我觉得是 irssi，纯终端模式，可以挂着 screen 或 tmux 来跑，非常方便。还支持用 Perl 写插件……还记得多年前上大学时用的蹩脚的 Windows 上的 IRC 客户端软件，难用得想起来都是泪（当年在大学里我没有自己的机器，都是蹭别人的机器用，所以都是清一色 Windows 的）。  
微博位置: 无
发布时间: 2018-09-11 11:20
点赞数: 10   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

174:当我第一时间在 IRC 里向 systemtap 的老大 Frank 同学报喜说我们的 systemtap 浮点数支持搞定了，他只回了一句“crazy man”……我们后面还有一堆的新功能等着他 review 了。他已经“抱怨”说我们这么多补丁，太“overwhelming”了。之前和他聊过很多让 stap 更上一层楼的新奇想法，他当时总觉得我们异想天开（老大的原话用的是“quixotic”和“wild“这两个词），但我们都很快实现了。                                 
微博位置: 无
发布时间: 2018-09-11 11:15
点赞数: 31   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

175:我已经请我们公司团队的工程师给 systemtap 运行时和语言添加了 64 位浮点数类型的支持，我们内部已经用上了，后面再提给 systemtap 官方。在内核空间里面直接用 FPU 是很麻烦的事情，开销很大，Linus 同学虽然亲自讲解过如何在 Linux 内核里使用 FPU，但强调只有在 RAID 驱动里才应该用。所以我们的做法是使用了纯软件方式的浮点数实现。原本也考虑过 glibc 里的 softfoat 实现，但发现不够纯净，不适合跑在内核空间里。                                 
微博位置: 无
发布时间: 2018-09-11 10:59
点赞数: 17   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

176:VProbe 的小语言比 dtrace 的 D 语言更强大的地方在于支持一般的循环控制语句（systemtap 也支持就是了），同时还支持类似 GNU C 语言里的 ({...}) 这种把任意语句提升到表达式级别的语言功能（这个连 systemtap 都没有，不过我和 systemtap 的老大最近商量着也可以加一下支持）。缺点是用户态追踪能力貌似很弱，同时数值类型只有整型（这一点上，systemtap 也只有整型，但 dtrace 的 D 语言是有浮点类型的，我记得）。                                 
微博位置: 无
发布时间: 2018-09-11 10:55
点赞数: 4   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

177:VMware 的动态追踪框架 VProbe 提供了两种语言进行追踪工具的编程，一是类似 Lisp 语法的较低级的语言（有些像 VM 的汇编语言），二是类似 C 语法的 Emmett 语言。后者的编译器实现开源在了 GitHub 上面：http://t.cn/Rs3irZe Emmett 编译器会把类 C 的高级语言的代码翻译成类 Lisp 的虚拟机汇编码。这个 Emmett 编译器还是用 OCaml 语言实现的。VMware 的工程师们玩得真花哨呀。                                 
微博位置: 无
发布时间: 2018-09-11 10:49
点赞数: 4   转发数: 9   评论数: 0
发布工具: 微博 weibo.com

178:VMware 官方文档里面虽然没提到 gdb stub server 这个隐藏的 VMware 特性，但却提到了另一个超牛的调试和分析特性，叫做  VProbe。不仅是提到，还有好几篇 paper 描述这个东西。VProbe 在设计上大量参考了 Solaris 的 dtrace，也是一个常驻内核的小语言虚拟机，解释执行追踪小语言编译器生成的字节码（或其他中间表示）。有所不同的是，VMware 的这个 trace 虚拟机分散在多个不同的软件组件中，比如他们私有的 ESXi 内核、还有 VMM 和 VMX 这些私有组件。这个 VProbe 牛在可以追踪整个虚拟软件栈，包括 guest OS。而我就想赋予 systemtap 等平台这种能力，同时功能更丰富，更强大。                                 
微博位置: 无
发布时间: 2018-09-11 10:43
点赞数: 6   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

179:读官方用户手册时发现 Virtualbox（Vbox）内部还有一个调试器，可以用于调试 guest OS 系统。有些奇怪他们为啥不直接像 qemu 和 VMware 那样暴露一个 gdb stub server，这样方便复用整个 gdb 前端。当然，VMware 的 gdb stub 是一个隐藏特性，用户手册里面并没有提及。Vbox 的内建调试器也可以作为我后面做 systemtap 对 Vbox 的 guest OS 追踪支持的参考。                                 
微博位置: 无
发布时间: 2018-09-11 10:37
点赞数: 7   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

180:为了踱步时不挡到光，我自己 DYI 了一个 2 米高的投影仪支架，买了音箱支架和有机玻离。我用电钻在玻璃上打了 4 个孔，然后用螺母和螺钉把有机玻璃和支架固定在一起，最后用 Velcro 把投影仪固定在有机玻璃之上，这就大功告成了。Amazon 上的投影仪支架一方面太矮，一方面太贵。我家天花板也不能打孔做 ceiling mount。                  原图                             
微博位置: 无
发布时间: 2018-09-11 09:52
点赞数: 17   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

181:4K 投影仪还是挺给力的，我终于可以在墙前一边仰头读书一边踱步了，有古人看壁画之风。抄书和看 Sony Digital Paper 设备都容易保持一个姿势，不够健康。比如我花了两天，就把最新版 380 页的 VirtualBox User Manual 从第一章到最后一章精读了一遍，几乎逐句看了，身体上一点都不觉得累。后面我应该可以读更多更厚的书了。                                 
微博位置: 无
发布时间: 2018-09-11 08:56
点赞数: 35   转发数: 26   评论数: 10
发布工具: 微博 weibo.com

182:与 qemu/vbox/vmware 虚机相对，用 systemtap 分析 docker 等基于 Linux namespace 等技术的虚机容器从来就不是问题，毕竟用的是同一个内核。只需要处理好名字空间上的问题就好了（比如文件系统和 pid 等东西的名字空间）。当然，也因为同样的原因，docker 虚拟化技术不适用于调试 Linux 内核本身，自己调自己是不靠谱的。                                 
微博位置: 无
发布时间: 2018-09-11 08:42
点赞数: 7   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

183:偶尔我会需要调试一些比较极端的 Linux 内核 bug，此时没有虚拟化技术肯定是不行的。想达到的一种效果是在 host 操作系统里面，使用 systemtap 等动态追踪技术直接以非侵入的方式，穿透 qemu 或 virtualbox 的 VMM 层（即 Virtual Machine Monitor 层），直接活体分析和追踪 guest 操作系统的内核（当然，也可以分析 guest OS 的用户态了）。                                 
微博位置: 无
发布时间: 2018-09-11 08:25
点赞数: 11   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

184:最近研究了一下 qemu 的源码，感觉真是我的菜呀，挺干净的纯 C 实现，在我的 MBP 上从零编译只需 30 秒多一点，很小巧。就像很多年前看到 nginx 源码的感觉。整个源码树只有 VirtualBox 源码树的不足 1/7（不算 .git/ 这样的版本控制数据）。利用 debootstrap 工具很方便地弄了一个 200 多 MB 的最小化的 Ubuntu 境像，直接用 qemu -enable-kvm 引导，跑得很好。                                 
微博位置: 无
发布时间: 2018-09-11 08:14
点赞数: 59   转发数: 50   评论数: 5
发布工具: 微博 weibo.com

185:我的前东家 Cloudflare 公司最近赞助了我们 OpenResty 公司完成了 OpenResty 对 arm64（或 aarch64）体系结构的支持。这个项目对 OpenResty 核心的改动很大。好消息是，新的结构在原先支持的所有的体系结构上都会更加高效，比如在 x86_64 上面最简单的 Lua 实现的 http 接口，用 wrk 压测时的吞吐量有了 10% 的提升。相关补丁会在近期提交到开源仓库，并会包含在下一个 OpenResty 发布中。                                 
微博位置: 无
发布时间: 2018-09-11 07:43
点赞数: 69   转发数: 19   评论数: 4
发布工具: 微博 weibo.com

186:最近给 systemtap 官方贡献了十几个补丁：http://t.cn/RFSLncr 比较重要的新功能是：1. 用户自定义的 stap 函数现在支持用不返回任何值的 return 语句了；2. 新增了内建函数 abort()，可以立即终止当前探针处理程序和里面所有函数的执行。这两个功能已经合并进主线了。一般的流程是：先通过 git send-email 命令发邮件到 systemtap 邮件列表，然后在 #systemtap IRC 频道上找 systemtap 项目的老大 fche 同学 review。改了几遍之后，老大点头了，我再自己提交到官方仓库的 master 分支。                                 
微博位置: 无
发布时间: 2018-09-01 07:59
点赞数: 61   转发数: 16   评论数: 6
发布工具: 微博 weibo.com

187:由于 gcc 4.9 的一个版本的 variable tracking at assignment (VAT) 实现里有 bug，于是 Linus 裁定主线 Linux 内核默认直接禁掉了 VAT，这个让 gcc 在优化时生成的调试符号质量急剧下降。这真是因噎废食啊……  
微博位置: 无
发布时间: 2018-08-11 05:49
点赞数: 16   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

188:OpenResty 的 resty 命令行工具现在支持 --gdb-opts=OPTS 命令行选项，方便用 gdb 来批处理 resty 工具底层调用的 nginx 进程。比如这个例子：resty --gdb-opts="-batch -ex 'b main' -ex run -ex bt -ex 'b lj_cf_io_method_write' -ex c -ex bt" -e 'io.stderr:write("hello")‘  原图 
微博位置: 无
发布时间: 2018-07-19 09:48
点赞数: 25   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

189:在南传上座部的经藏中，有一部较古老的小经叙述佛陀对阿难说，如果有人说如来是全知全能的，则是诽谤他。同时阿难也嘲讽同时代其他一些哲学宗教派别的领袖，一方面自称自己全知全能，另一方面平时游走还要问路，去村乞食时还会被狗咬。这其实应证了原始佛教其实是一门哲学，而并非一门宗教。有哪一门宗教会否定灵魂的存在？会否定教主的全知全能？当然，后世发展后的上座部和其他佛教宗派都认为佛陀是全知全能的，那当然是后话了，不太可能是原始佛教的内容了。                                 
微博位置: 无
发布时间: 2018-06-26 09:15
点赞数: 10   转发数: 13   评论数: 13
发布工具: 微博 weibo.com

190:亲身体验到识的绝对停止之后，就真正回答了哲学的一个基本问题“我是谁”，即"我“这个东西其实并不存在，只是思想意识念念相续的错觉。而识停止之后，按原始佛教的说法，可以回忆前世生活（当然，佛教的”轮回概念“比较特殊，不在此展开），从而解决了另一个哲学的基本问题“我从哪儿来”。由于识可以绝对停止，则自身的意识在身体死亡之后不会再以其他形式继续相续，从而解决了“我到哪儿去”的最后一个基本问题。这是原始佛教作为一门哲学对三大哲学基本问题的回答。但真正要验证，必须亲身体认认所有这些。别人是无法代替的。尤其是佛教的“轮回”必须证果才能验证。                                 
微博位置: 无
发布时间: 2018-06-26 09:08
点赞数: 9   转发数: 5   评论数: 9
发布工具: 微博 weibo.com

191:当然，印度的禅法历史比佛教更悠久了，应当早于佛陀时代。佛陀本人成道前也拜过两位禅师为师，分别达到了空无边处和非想非非想处这两层境界（这两层都要高于四禅境界了）。佛陀的贡献在于超出禅定境界，实现识的真正的停止（按佛经上的术语则是“涅磐”、“漏尽”或“寂灭”）。在实现温饱和小康之后，我们大家与真正的幸福其实很近，套中国古代的一句俗话就是“天下本无事，庸人自扰之”，远离了欲望，自如控制了心念，自然非常幸福，而且随时随地。心定之后，日常工作自然也更有效率，更有创造力，当然这是世俗层面的好处了。                                 
微博位置: 无
发布时间: 2018-06-26 09:01
点赞数: 9   转发数: 7   评论数: 6
发布工具: 微博 weibo.com

192:初禅的特点就是强烈的喜悦，持续不断，贯通全身经脉，每一个毛孔，乃至深入骨髓的喜悦。与感官刺激和事功成就都完全无关的喜悦。通过如实观察自己的呼吸就可以达到。而且即使外界环境比较嘈杂也无所谓。二禅又很不一样，就像最古老的经典上所说“二禅之心，清净一性，无寻思伺察，有喜与乐”。二禅时的内心就像平静的湖面，可以映照一切，但自身不起波澜。喜悦开始为轻松安宁（轻安）所代替。只有亲身体验过才能知道那些境界的美妙。                                 
微博位置: 无
发布时间: 2018-06-26 08:39
点赞数: 5   转发数: 9   评论数: 9
发布工具: 微博 weibo.com

193:佛教修行的终极目标是能自如控制自己的思维意识活动，当然，是在极细微的程度上。当识完全停止时，应当就是佛陀所说的“涅磐”。佛教从没有否认过客观世界的真实性（包括那些只能通过禅定才能进入的意识境界），它否认的是那些形而上的虚假的概念，包括“灵魂”的概念。太多哲学和宗教（包括佛陀时代的那些以及后世的）都容易陷入那些陷阱中去。而佛教对形而上和概念的否认又容易让外行人批评它是“唯心主义”和“空无主义”。                                 
微博位置: 无
发布时间: 2018-06-26 08:22
点赞数: 13   转发数: 10   评论数: 3
发布工具: 微博 weibo.com

194:原始佛教的核心是修行，是追求真正的幸福（“离苦得乐”），通过系统的认真的修行，发现真理，获得快乐。所以佛教作为一门哲学，不会研究那些与幸福无关的形而上的主题，比如宇宙是有限的还是无限的，宇宙是有始有终的还是无始无终的（这些问题就让康德极为苦恼，最后认为理性本身出了问题）。在最古老的经典中，佛陀被问及这样的问题时，总是回答是“这是不确定的”或者“如来没有这个意见”。                                 
微博位置: 无
发布时间: 2018-06-26 08:07
点赞数: 14   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

195:前不久有机会结识了斯坦福大学做佛教史的学术研究的一位博士生，他是一位地地道道的英国人，但普通话说得好到听不出口音，同时也熟悉古印度的巴利语、健陀罗（印度古国）语、蒙古语等很多语言。他 4 岁时就开始编程了。他说他对佛教的兴趣，也是基于早前对康德等西方古典哲学家的研究，发现佛教作为一门哲学的高度是让西方古典哲学黯然失色的。对此我不能同意更多。                                 
微博位置: 无
发布时间: 2018-06-26 07:59
点赞数: 20   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

196:我对佛教的兴趣源于中学，初中时也自己涉猎了西方古典哲学和西方心理学的很多东西。当年受在中国大陆的环境影响，接触到的都是中国本土的大乘佛教的各个宗派和它们信奉的大乘经典。由于学习过很多西方科学和哲学的东西，对大乘经典中大量的高度玄幻和超经验的东西还是很难接受的。工作后在雅虎那两年，有幸通过同学拜得民间学者寒蝉退士为师，这才得以接触到印度的早期部派佛教和原始佛教。当我看到那些朴素亲切的最古老的佛教经典，才发现最本初的佛教并不是宗教，而是我一直追寻的那种伟大的哲学。                                 
微博位置: 无
发布时间: 2018-06-26 07:51
点赞数: 26   转发数: 12   评论数: 10
发布工具: 微博 weibo.com

197:Sony DPT-RP1 终于发新的软件更新了，但 Sony 憋了这么久还是没有实现老版 DPT-S1 反而有的 Table of Contents 功能，倒是加了按输入页码来跳转的功能。Sony 这一块的硬件确实是越做越好，但软件却是越做越差啊……新版功能仍然比不上老版 S1 ……  
微博位置: 无
发布时间: 2018-06-18 11:27
点赞数: 6   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

198:最近我果断从 Chrome 切回到 Firefox 了。新版 Firefox 的性能真是好，而Chrome 则是越跑越慢。  
微博位置: 无
发布时间: 2018-06-14 14:09
点赞数: 30   转发数: 7   评论数: 22
发布工具: 微博 weibo.com

199:最近抽空读了不少 LuaJIT 核心的代码，有 C 也有汇编，感觉慢慢有些开窍了，顺手给 LuaJIT 的 JIT 编译器和解释器分别加了一些 OpenResty 商业产品所需要的优化原语，比如能被 JIT 的 table.isarray() 和 thread.exdata() 等 Lua API 函数，都成功通过测试了，后面可以尝试加一些更复杂的原语，比如 string.buffer API，甚至可以自己动手实现一下 Mike Pall 为 LuaJIT 3.0 全新设计的垃圾回收器（GC）。许多这些新特性后面也计划陆续合并到开源 OpenResty 中来。                                 
微博位置: 无
发布时间: 2018-06-14 13:34
点赞数: 60   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

200:刚刚给 OpenResty 官方的 LuaJIT 分支加了文档，介绍了我们自己所引入的所有修改：http://t.cn/RB6QetU 我们并没有真正 fork  LuaJIT，而只是建了一个分支包含那些官方尚未合并或不愿合并的新特性和新优化。我们仍然始终从 LuaJIT 官方主线同步所有更新。OpenResty 的 LuaJIT 会针对 OpenResty 以及 Web 编程进行特殊的改进和优化。                                 
微博位置: 无
发布时间: 2018-06-14 05:12
点赞数: 48   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

201:OpenResty 1.13.6.2 正式版刚刚发布。下载地址是：http://t.cn/R5UsoS4 完整的更动列表在这里：http://t.cn/R3NIHCM 发布公告在这里：http://t.cn/R3NIHCx 从这个版本开始我们提供 OpenResty 官方的 64 位 Windows 二进制包，以及针对 Ubuntu 18.04 Bionic 的 APT 官方仓库。同时我们正式支持 OpenSSL 1.1.0，所有官方的二进制包都升级到 OpenSSL 1.1.0h。                                 
微博位置: 无
发布时间: 2018-05-17 06:55
点赞数: 36   转发数: 29   评论数: 5
发布工具: 微博 weibo.com

202:OpenResty 1.13.6.2 RC1 刚刚放出来给社区测试。包含了最近 5 个月所有的新特性、优化和 bug 修复。源码包下载地址：http://t.cn/RuLTAT1 Win64 包：http://t.cn/RuZgFXB Win32 包：http://t.cn/RuwvuxZ 发布公告在这里：http://t.cn/RuLTATu 欢迎大家试用反馈。多谢！  
微博位置: 无
发布时间: 2018-04-23 06:01
点赞数: 23   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

203:在 Windows 10 上编译 OpenResty 和 OpenSSL 这样较大的 C 项目的时候，编译时间明显比在 Linux 上面慢了好多，看到的现象是 IO 是瓶颈。当把我的 build 目录添加进 Windows Defender Antivirus 的例外列表里之后，从零编译 32 位 OpenResty 的总用时从 9 分多降到了 5 分 20 秒左右，而编译 64 位的时间从 12 分 27 秒下降到了 6 分多一点。这个反病毒实时查杀确实好耗资源。                                 
微博位置: 无
发布时间: 2018-04-23 02:04
点赞数: 40   转发数: 35   评论数: 5
发布工具: 微博 weibo.com

204:开源社区的一些哥们基于 OpenResty 搞的第三方的开源 Lua WAF 可能存在的一个安全上的缺陷是，OpenResty 的一些核心 API 出于自身安全的考虑，会限制单个请求解析到 Lua 空间里的 URL 请求参数、POST 请求参数和请求头的个数（默认有 100 个的数目上限）。所以为避免攻击者绕过防护，这些 WAF 产品应该检查请求是否读取过多的（比如刚好 100 个）参数或头。当然，为了避免这些 WAF 产品自己去数数的开销，最新的 ngx_lua 模块主线已经让这些 Lua API 函数在发生截断时返回 "truncated" 这个 error string 返回值，方便检测这种情况，然后自己选择不同的处理方式（比如返回验证码页面，或者直接断连接之类的）。                                 
微博位置: 无
发布时间: 2018-04-22 12:23
点赞数: 27   转发数: 15   评论数: 3
发布工具: 微博 weibo.com

205:我们的开源 ngx_stream_lua 模块的主线已经合并了 UDP 下游 cosocket API 的支持。感谢我们团队的大同同学的工作。下一个版本的 OpenResty（1.13.6.2）将官方支持用 Lua 来写基于 NGINX 的高性能 UDP 服务器应用了，比如自制的 DNS 服务器之类的。  
微博位置: 无
发布时间: 2018-04-22 12:17
点赞数: 29   转发数: 8   评论数: 6
发布工具: 微博 weibo.com

206:最近在 Windows 10 上面试了一下 MSYS2 工具链，实在太爽了，相比 MSYS 真是一个天上，一个地下。MSYS2 使用 pacman 进行包管理，同时里面的 gcc 和 perl 也非常新（gcc 7.3 和 perl 5.24.4）。刚为 OpenResty 打了一个 64 位 Windows 的二进制包（含 OpenResty 1.13.6.2 RC1, PCRE 8.42, 和 OpenSSL 1.1.0h），使用 Win64 的朋友可以试一下：http://t.cn/RuZgFXB 使用方法请见这篇文档： http://t.cn/RuZgFXr                                 
微博位置: 无
发布时间: 2018-04-22 11:15
点赞数: 20   转发数: 33   评论数: 8
发布工具: 微博 weibo.com

207:锤子科技在 2015 年底捐给我们 OpenResty 开源项目的门票钱最近终于到账了。终于可以把锤子的 logo 加进 openresty.org 官网的捐款人页面了：http://t.cn/RmL8rHe 整个过程历时两年多。我们为收这笔钱，专门在香港注册了 OpenResty 软件基金会，然后花了好久才拿到了香港税局给非盈利组织的免税资质，后来又花了好久才得以开通基金会的银行账户（很长一段时间都没有任何银行接受我们的开户申请）。这年头，搞非盈利比搞盈利要难太多了。再一次感谢锤子科技的捐助和支持！                                 
微博位置: 无
发布时间: 2018-04-06 07:50
点赞数: 692   转发数: 447   评论数: 200
发布工具: 微博 weibo.com

208:有些期待 Digital Storm 的这台水冷的 mini PC，叫做 Project Spark。当然，比 NUC 这样的 mini PC 还是要大多了。Core i7-8700K +  Nvidia GTX 1080：好爽的配置。我邮件问了他们公司的人，说是这个季度末或下个季度初正式发布   原图 
微博位置: 无
发布时间: 2018-04-04 03:53
点赞数: 52   转发数: 21   评论数: 13
发布工具: 微博 weibo.com

209:我们 OpenResty Inc 公司最近赞助了书鑫老师给 OpenResty 的 LuaJIT 分支添加了一个 table.clone() 原语函数，可以高效地复制任意的 Lua table（浅拷贝）。这个原语比手写 Lua 循环去复制 table 要高效很多，而且可以 100% 被 JIT 编译。这个原语让我们的 Perl 6 方言编译器 fanlang 编译我们的小语言 edgelang 所生成的 Lua 代码，整体快了 7% 左右。很爽。                                 
微博位置: 无
发布时间: 2018-03-28 08:37
点赞数: 32   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

210:我自己的切身体会是，当开发效率提高一定程度以后，就会对编译工具链和测试工具链的延时非常敏感。有哥们要说慢就慢点了，可以中间思考，其实思考速度也可以是非常快的，如果强迫你花时间“思考”，这无疑是自我欺骗了。如果真需要大段时间想清楚的话，我宁可在家旁边的公园里好好思想了，哈哈！极限开发的核心是宁可机器等人，也绝不能让人等机器。                                 
微博位置: 无
发布时间: 2018-03-28 07:49
点赞数: 48   转发数: 40   评论数: 8
发布工具: 微博 weibo.com

211:我们团队的泽轩同学最近给 OpenResty 新增了 ngx.resp 这个 Lua FFI 模块的 add_header() 函数，可以像标准的 nginx 配置指令 add_header 那样只追加新的响应头，而不会覆盖已有的响应头。文档在这里：http://t.cn/RnTeuoI  
微博位置: 无
发布时间: 2018-03-28 04:38
点赞数: 9   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

212:我们的一家付费客户之前反映用 wrk 压测时发现有延时较高的长尾请求，我们仔细使用 systemtap 和抓包工具分析之后，发现 wrk 报告的延时结果错得离谱（比实际延时可能高出一个数量级的水平），同时发现 wrk 输出的报告里不同的数字之间甚至都相互矛盾，最后发现 wrk 内部有一个 stats_correct 函数会故意向实际统计的结果里加入噪音数据，按其作者的说法，是为了摸拟真实互联网环境下的延时，我就大汗了……我们自己去掉 wrk 那个 C 函数调用结果就对了。                                 
微博位置: 无
发布时间: 2018-03-27 02:21
点赞数: 52   转发数: 79   评论数: 16
发布工具: 微博 weibo.com

213:前一阵子我把我们团队一哥们之前写的从类似 JSON schema 的描述自动生成 Lua 数据 validator 的编译器给重写了，生成的 Lua validator 在处理很大的 JSON 数据结构时的性能提升了 80 倍以上。同样是生成 Lua 代码，明白如何安排更高效的 Lua 代码 layout 和 shape，性能差别会是非常巨大的。这也是为什么我们希望通过机器编程来自动编写高度优化的 Lua 代码，而不是人类去学习如何书写。当然，这也适用于其他计算机编程语言了。                                 
微博位置: 无
发布时间: 2018-03-27 02:09
点赞数: 35   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

214:有些纠结是直接买 Core i7-8700K 还是耐心等待未来 10nm 工艺的 Ice Lake 体系结构的新款 CPU。不过后者估计还得等一年以上了……  
微博位置: 无
发布时间: 2018-03-27 02:04
点赞数: 2   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

215:测量整条命令的运行时间，还是用 perf stat -r N -d 命令比较靠谱和精确。用 bash 的 time 命令一来系统误差较大（可能高达 2 毫秒），二来精度不足，只到毫秒精度。当然，perf stat 还能输出很多其他有用的信息，比如 dcache 命中率还有 branch misprediction 比例等很多方面的 CPU 统计信息。  
微博位置: 无
发布时间: 2018-03-27 02:00
点赞数: 72   转发数: 147   评论数: 13
发布工具: 微博 weibo.com

216:这个月我们 OpenResty Inc 美国公司在湾区的 Burlingame 开了一间小办公室。就在海湾边上。风景很优美。有了专门的办公室之后，也方便给我们在美国的留学生员工办理 H1B 或 L1 工作签证了。之前我是以员工身份申请的 H1B 签证，没想到现在是以雇主身份赞助 H1B 申请了。希望能再次申请成功啊。  
微博位置: 无
发布时间: 2018-03-19 14:47
点赞数: 89   转发数: 9   评论数: 9
发布工具: 微博 weibo.com

217:华盛顿州感觉比加州还左啊，我们在那个州解雇了一个全职员工，还要继续给他付数额不低的失业金（unemployment benefit），如果他一直找不到工作，就要最多付 6 个月。坑爹啊。难怪有些雇主宁可用一些恶心的手法倒逼员工自己辞职。当然，我们肯定不会那么恶心了。幸好咱们还没有工会这些组织……连 Elon Musk 都痛恨工会啊，哈哈！                                 
微博位置: 无
发布时间: 2018-03-19 14:36
点赞数: 15   转发数: 9   评论数: 10
发布工具: 微博 weibo.com

218:当然，充分利用 CPU 多核并发跑同一个测试集也是基本的了。这也经常是成倍的提升。一台机器的 CPU 核都跑满了，才去调动更多的机器。比如我们有一个涉及数据库的项目在 N 并发跑的时候，仍能共享本地的同一个 DB 服务实例，因为测试台会给不同的并发任务自动分配不同的数据库名和数据库用户，而不必搞像  Linux namespace 和 container 那么高级的环境隔离。越轻量越简单，就越可能跑得更快，也越不容易出问题。                                 
微博位置: 无
发布时间: 2018-03-19 14:04
点赞数: 8   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

219:测试集的运行效率直接关系到测试驱动式开发的效率。当舍不得银子去买更好的机器时，只好努力优化程序的效率了，运气好的话，提升比例会远超换当下最贵的机器。当然，还有一条路是通过自己写的 map-reduce 的小脚本把测试任务均摊到同一个网络上的多台机器，我们就有这样的脚本，叫做 maptest，可以自己通过参数添加多台机器到测试集群中，同时可以按每台机器的计算能力的差别指定权重。测试效率的提升效果也是极好的。                                 
微博位置: 无
发布时间: 2018-03-19 13:59
点赞数: 9   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

220:nginx 在 build 时如果启用 --with-file-aio 的话，启动和卸载时间经实测，在我的 mid-2015 MBP 机器上面会增加 20ms（Linux 系统）。如果不带这个的话，则只需要 4ms 左右。差距明显。使用 strace 没看到什么用时特别长的系统调用，而使用 ltrace 工具则发现有损耗很高的 _Unwind_RaiseException 这样的用户态调用。貌似开启 eventfd 会时不时地抛异常……所以我已经把 --with-file-aio 选项从 OpenResty 官方的打包脚本中移除了。                                 
微博位置: 无
发布时间: 2018-03-19 13:53
点赞数: 4   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

221:有些奇怪为啥 nodejs 的启动时间非常慢，node -e 'console.log(1)' 命令居然需要近 50ms，甚至比 ruby 的近 40ms 的用时还要慢。通过 ltrace 和 strace 工具简单分析了一下 node，貌似初始化时有很多代价高昂的 memcmp, memcpy 还有 mmap 这些操作。也许它初始化时要加载很多的 JS 代码？这些操作最热，很像是在运行动态脚本代码时的特征之一。                                 
微博位置: 无
发布时间: 2018-03-19 13:45
点赞数: 10   转发数: 9   评论数: 21
发布工具: 微博 weibo.com

222:使用新版的 resty 命令行工具，我们自己的 fanlang 这个 Perl 6 方言编译器的测试集的整体运行速度提升 44% 以上。通过 prove -j8 命令 8 并发运行时的总用时从 39 秒下降到了 27 秒。之所以提升这么显著是因为 fanlang 的测试台对于每个测试用例都会调用一下 resty 命令来运行 fanlang 编译器生成的 Lua 程序。                                 
微博位置: 无
发布时间: 2018-03-19 13:36
点赞数: 6   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

223:UNIX 文化鼓励把各种不同的命令行工具各种排列组合，各种串并联。shell 编程更是图灵完全，所有的命令行工具都成了 shell 程序里的原语。此时工具的启动时间就显得尤为重要。而通过 Makefile 和 make -jN 来进行并发命令执行时，每条命令的启动时间也特别重要，否则还不如单条命令串行跑。按这个标准，启动时间慢的那些 VM 和工具链其实是水土不服的。这也是为什么我要优化 resty 工具的启动时间。                                 
微博位置: 无
发布时间: 2018-03-19 13:31
点赞数: 18   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

224:最近抽空把 OpenResty 的 resty 命令行工具好好优化了一下启动时间。原来在我的 mid-2015 MBP 上面跑 resty -e 'print(1)' 命令需要 36ms，现在只需要 10ms 了。这个工具仍然是 perl 写的，多亏了 perl 自身的启动时间极快，只要 1ms 多一些。我做的优化主要是避免使用任何的 perl 标准模块，100% 自己手写的 perl 代码。有兴趣的同学可以看看我的补丁：http://t.cn/RntfLHO                                 
微博位置: 无
发布时间: 2018-03-19 13:19
点赞数: 15   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

225:Onyx 新出的 BOOX MAX 2 这款大屏幕 e-ink 电子阅读器看得我好心动。感觉可以全面碾压 Sony 新出的 DPT-RP1 设备了…… http://t.cn/hb3Bdw 貌似 Oynx 是中国广东的公司？赞啊。等我手上现有的 Sony DPT-S1 设备老得实在不能用的时候，一定要入一台，哈哈！  
微博位置: 无
发布时间: 2018-02-11 15:22
点赞数: 18   转发数: 18   评论数: 14
发布工具: 微博 weibo.com

226:我们 OpenResty Inc 的一家付费客户所使用的少数几台阿里云的机器的 Xeon E5 的 CPU 存在 bug。进程崩溃在了不可能崩溃的地方，即当 CPU 的执行流跳转到实际有执行权限的内存页时，会抛内存页没能执行权限的异常。我们使用自己的随机请求压测工具，在有问题的阿里云主机上，每天可以复现好几个这样的 core dump。在网上看最早在 luajit 列表列表有用户报告：http://t.cn/R8KtiFo 然后前不久 Cloudflare 也遇到了完全相同的 CPU bug: http://t.cn/R8KtiFa Cloudflare 确认了更新 Intel CPU 的微码之后可以解决这个问题。                                 
微博位置: 无
发布时间: 2018-02-03 08:30
点赞数: 57   转发数: 113   评论数: 26
发布工具: 微博 weibo.com

227:最新的 ngx_stream_lua 模块支持新的 lua_add_variable 配置指令，可以在 nginx TCP/UDP server 里引入新的 nginx 变量，然后用户可以照常在自己的 Lua 代码里通过 ngx.var API 来读写：http://t.cn/R82gRdx 感谢大同提供的补丁。  
微博位置: 无
发布时间: 2018-01-29 10:24
点赞数: 23   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

228:我们在香港的 OpenResty 软件基金会的银行账户终于开下来了。在香港开个非盈利组织的银行账户真是太不容易了，主要香港的银行同时受到中国大陆和美国的监管机构的严格监管，所以几乎所有的银行都觉得无利可图而拒绝受理我们的开户申请。真要好好感谢一下美国的华美银行（EastWest Bank）的大力帮助。  
微博位置: 无
发布时间: 2018-01-26 05:08
点赞数: 74   转发数: 3   评论数: 8
发布工具: 微博 weibo.com

229:发现加州政府部门好喜欢寄信啊，在税务网站上注册一个账户，还非得要平信邮寄一个 PIN number 给我。相比之下，Delaware 州和 Washington 州的互联网化程度要高得多。  
微博位置: 无
发布时间: 2018-01-26 05:02
点赞数: 8   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

230:前几天花了小几百行 Perl 代码从零写了一个 TT2 模版语言的子集实现，叫做 mini-tt2.pl 工具。它可以自动检查 ngx_meta_lua 模块里的 C 源码模版是否符合 nginx 代码风格，同时也会自动确保生成的 ngx_http_lua 模块和 ngx_stream_lua 模块的 C 源码都符合 nginx 代码风格里的各种有趣的对齐要求。这个工具开源在了 ngx_meta_lua 的 GitHub 仓库里面：http://t.cn/RQYozBp                                 
微博位置: 无
发布时间: 2018-01-22 09:12
点赞数: 27   转发数: 18   评论数: 5
发布工具: 微博 weibo.com

231:今天我的 MBP 风扇一直狂响，我还奇怪，仔细看了一眼是 Google Chrome 里面的新浪微博的北美主页占了 100% ~ 122% 的 CPU，我猜也许是那个页面里的 JS 跑飞了，死循环了……强关掉那个页面就立马消停了。  
微博位置: 无
发布时间: 2018-01-14 13:58
点赞数: 20   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

232:OpenSSL 1.1.0 的官方测试集终于改成使用 Perl 的测试工具链来驱动了，看起来比原来好太多了。原来 OpenSSL 1.0.2 的测试集跑起来根本没法看。  [组图共2张] 原图 
微博位置: 无
发布时间: 2018-01-08 03:28
点赞数: 20   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

233:OpenResty 大部分核心组件的 OpenSSL 1.1.0 支持已经合并到主干。下一个 OpenResty 发布应该将全面支持 OpenSSL 1.1.0。感谢 Alessandro、spacewander 和德江等同学的努力！  
微博位置: 无
发布时间: 2018-01-06 10:05
点赞数: 38   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

234:OpenResty 官方现在提供了 Fedora 27 的 OpenResty 二进制安装包的 yum 源：http://t.cn/RVhMIIJ 我们同时淘汰掉了已经 EOF 的 Fedora 25 的 yum 源。  
微博位置: 无
发布时间: 2018-01-06 06:07
点赞数: 12   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

235:发现 Mac OS X 自带的 md5 命令行工具不支持流式处理大文件，几百 GB 的大文件喂给它，直接触发 OOM killer 把它杀掉了……Linux 上面的 md5sum 就没有这个问题。最好只好在 OS X 上面改用 openssl md5 FILE 命令来搞定。  
微博位置: 无
发布时间: 2018-01-04 12:39
点赞数: 35   转发数: 15   评论数: 12
发布工具: 微博 weibo.com

236:reptyr -T PID 这个命令真是好用，可以把已经在运行的进程及其子进程都迁移到一个新的终端会话里去，比如迁到一个新创建的 screen 会话里面去。  
微博位置: 无
发布时间: 2018-01-03 11:44
点赞数: 32   转发数: 15   评论数: 5
发布工具: 微博 weibo.com

237:OpenResty 的 ngx.get_phase() API 函数现在可以通过最新的 lua-resty-core 库被完全地 JIT 编译了。感谢 Robert 同学贡献的补丁！这个函数貌似在 OpenResty 应用中使用得还是挺多的。  
微博位置: 无
发布时间: 2018-01-02 11:17
点赞数: 25   转发数: 4   评论数: 0
发布工具: 微博 weibo.com

238:Test::Nginx::Socket 测试台现在支持 --- access_log 节了，类似 error_log 那样可以对 nginx 访问日志进行模式匹配检查了：http://t.cn/RHWZBFK 多谢 spacewander 同学的贡献。spacewander 现在也是我们 OpenResty Inc. 公司的全职后端工程师了，耶！他最近帮忙开发的很多 OpenResty 新特性都有待后面陆续开源出来                                  
微博位置: 无
发布时间: 2018-01-02 07:52
点赞数: 36   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

239:刚刚在 Amazon 日本网站上买了一本日本人写的英文书，叫做 Mathematical Theory of Programs：http://t.cn/RHy04FB 我得重新注册一个新的亚马逊账号。幸好 amazon.co.jp 站本身就支持英文界面文字，省得我自己去翻译了。同时他们也支持用美元付款和邮寄到美国。原来日元的货币符号也是 ￥。我一开始看到这本书的标价是 ￥2700 ，误以为是人民币，还真吓了一跳……日元真便宜……                                 
微博位置: 无
发布时间: 2017-12-25 16:40
点赞数: 14   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

240:我们今年开始维护两套 AWS EC2 测试集群系统，一套专门用于回归 OpenResty 的开源组件，另一套专门用于回归我们公司私有的 OpenResty+ 的闭源组件以及基于 OpenResty+ 的上层商业产品的组件。由于 OpenResty+ 其实也是基于开源 OpenResty 的，因此我们的私有版 EC2 测试集群也有助于更充分更深入地回归我们的开源 OpenResty 的代码。                                 
微博位置: 无
发布时间: 2017-11-19 03:00
点赞数: 11   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

241:最近把我的 EC2 测试集群的 AMI 镜像换用最新的 c5.large 类型的实例来运行了，原先一直用的 c3.large。以 lua-resty-core 项目的测试集为例，标准测试模式的运行速度提高了 13% 以上，而 valgrind 测试模式的测试运行速度则提升了 42% 以上，效果明显。而费用则减少了 19%。不过，我原先的 AMI 是 PV 类型的，需要先转成 HVM 类型，幸好找到了这一个 ServerFault 上的答案：http://t.cn/RjRSJeQ                                 
微博位置: 无
发布时间: 2017-11-19 02:48
点赞数: 7   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

242:OpenResty 1.13.6.1 正式版刚刚发布。下载位置在这里：http://t.cn/R5qq7aA 完整的更动列表在这里：http://t.cn/RjqrZqk 发布公告在这里：http://t.cn/RjqrZqD 基于最新的 Nginx 主线版 1.13.6，包含了新的 ngx_stream_lua 模块，可以在 OpenResty 里面用 Lua 玩 TCP 服务器编程了  UDP 支持未来也会加入进来。                  原图                             
微博位置: 无
发布时间: 2017-11-14 04:32
点赞数: 66   转发数: 65   评论数: 9
发布工具: 微博 weibo.com

243:Shopify 分享了他们基于 OpenResty 的高性能技术架构。他们的分享视频在 Youtube 上面：http://t.cn/Rjq30Zp Shopify 是加拿大的一家很大的电商。记得几年前，他们还发电邮给我，说 OpenResty 在他们那里用得越来越多，问我是否愿意去加拿大工作……哈哈！  原图 
微博位置: 无
发布时间: 2017-11-14 04:03
点赞数: 49   转发数: 25   评论数: 4
发布工具: 微博 weibo.com

244:我在今年的 OpenResty Con 2017 大会上作了主题为“OpenResty 商业化及小语言时代”的远程分享。幻灯片文件在这里：http://t.cn/RlIxO1A 视频录像在这里：http://t.cn/RlIxO12  原图 
微博位置: 无
发布时间: 2017-11-05 05:29
点赞数: 54   转发数: 42   评论数: 6
发布工具: 微博 weibo.com

245:今年在北京举办的 OpenResty Con 2017 大会非常成功。来了很多的朋友和演讲嘉宾。感谢本次大会所有的组织者、演讲嘉宾和赞助商！所有分享的幻灯片可以从大会官网上下载：http://t.cn/R00gWzF 所有分享的视频录像可以在这里观看：http://t.cn/R08kdcv 明年再见！  [组图共4张] 原图 
微博位置: 无
发布时间: 2017-11-05 03:30
点赞数: 34   转发数: 19   评论数: 2
发布工具: 微博 weibo.com

246:刚发布了 OpenResty 1.13.6.1 RC1 供社区测试。源码的下载位置在这里：http://t.cn/RlcLWFu Win32 二进制包在这里：http://t.cn/RlcLWF1 发布公告在这里：http://t.cn/RlcLWFB 亮点是最新的 Nginx 主线版本 1.13.6、全新的 ngx_stream_lua 模块、共享内存字典的 ttl/expire/free_space/expire 等方法。  
微博位置: 无
发布时间: 2017-11-04 14:36
点赞数: 17   转发数: 4   评论数: 0
发布工具: 微博 weibo.com

247:昨天刚把 OpenResty 官方 Linux 二进制包仓库（Apt 仓库和 Yum 仓库）里的 openresty-pcre* 包升级到了主线最新的 PCRE 8.41 版本。这个新版 PCRE 通过了我们手上所有的测试。  
微博位置: 无
发布时间: 2017-11-04 03:34
点赞数: 16   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

248:OpenResty 从 2007 年 Q4 诞生以来，已经整整 10 年了，哈哈！最早的 OpenResty 是用 Perl 和 Haskell 还有一些 C 来实现的，挂在 Lighttpd 或 Apache httpd 的后面。直到 2009 年我才基于 nginx 用 C 重写了。  
微博位置: 无
发布时间: 2017-11-03 11:35
点赞数: 128   转发数: 33   评论数: 14
发布工具: 微博 weibo.com

249:Google G Suite 每个月发给我的 invoice 邮件，很坏的一点是不直接在邮件里面告诉我上个月花了多少钱……只是给了一个需要登录才能查看的链接，于是结果是我每次都懒得去查看了，哈哈！  
微博位置: 无
发布时间: 2017-11-02 13:24
点赞数: 7   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

250:前一阵子我发现 Amazon Polly 文本到语音服务在有的时候会把 concentrated 念成 “consolated”，但又不会总是读错，估计是训练样本的问题……好在我可以通过 SSML 标签，通过指定音标来强行纠正读音，写成 concentrated 这样就好了。  
微博位置: 无
发布时间: 2017-11-01 12:42
点赞数: 13   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

251:最近给 ngx_stream_lua_module 合并了 balancer_by_lua* 和 preread_by_lua* 这两个新的配置指令。感谢 Mashape 公司对 OpenResty Inc. 开发团队的赞助。lua-resty-core 库的 ngx.balancer 这个 Lua 模块也支持在 ngx_stream_lua_module 的 balancer_by_lua* 里面使用了。这个 preread_by_lua* 有些类似于 ngx_http_lua_module 的 rewrite_by_lua*。细节见 ngx_stream_lua_module 的 master 分支：http://t.cn/R4QuqSA                                 
微博位置: 无
发布时间: 2017-10-12 13:56
点赞数: 13   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

252:最近在我的 Amazon EC2 测试集群捕捉到 OpenSSL 1.0.2l 的 regression，会导致 valgrind 报告大量的内存泄漏错误，同时也会让我们基于 ticket 的 TLS session resumption 测试失败。降级回 1.0.2k 之后立马正常了。这些基础软件库的看似无害的小版本升级也必须特别谨慎呀。看 1.0.2l 官方的发布公告，真看不出会有这么大的影响……                                 
微博位置: 无
发布时间: 2017-10-05 08:38
点赞数: 14   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

253:前不久尝试用 GC64 模式的 LuaJIT 运行 OpenResty 的测试集时，捕捉到段错误。早上花了俩小时弄了个不依赖 OpenResty 的最小化用例，报告到了 luajit 邮件列表：http://t.cn/R0d6bwQ 邮件里我在一句话里同时并列提到了 Mike Pall 和 Peter Cawley，然后 Peter 在 twitter 上打趣说“achievement unlocked”，哈哈！                  原图                             
微博位置: 无
发布时间: 2017-10-03 06:30
点赞数: 13   转发数: 16   评论数: 3
发布工具: 微博 weibo.com

254:openresty.org 官网最近半年来都运行在我们 OpenResty Inc. 自己的 mini CDN 网络上。最近又加了 Frankfurt、Singapore、New York、London 这几个点。目前在中国有 4 个点，一共 9 个点了。后面再继续加。我们公司主要是卖流量管理软件的，而不是 CDN 公司。我们希望我们的产品能方便企业自己搭建流量入口或自建 CDN 网络。                                 
微博位置: 无
发布时间: 2017-10-03 05:13
点赞数: 11   转发数: 12   评论数: 6
发布工具: 微博 weibo.com

255:OpenResty Con 2017 大会将于 10 月 21 日在北京新浪总部大厦举行。大会主页在这里：http://t.cn/R00gWzF 欢迎大家报名参加！我也会远程做一个视频分享，打算讲一讲 OpenResty 的商业化和业务小语言的最新进展。我们还在募集更多的演讲嘉宾。有兴趣分享的同学可以把个人简介和演讲摘要发送到 talk@openresty.org 多谢！                  原图                             
微博位置: 无
发布时间: 2017-09-29 14:41
点赞数: 42   转发数: 51   评论数: 13
发布工具: 微博 weibo.com

256:OpenResty 的共享内存字典现在支持 expire() 和 ttl() 这两个新的对象方法了。前者可以设置现有的 key 的过期时间，而后者可以获取某个 key 当前距离过期还剩多少时间。我们新的 resty.limit.count 请求计数限制模块正是用了这里的 expire() 方法。感谢 Mashape 公司的 Thibault Charbonnier 同学贡献的补丁！文档在这里：http://t.cn/R04K9Q3 还有这里：http://t.cn/R04K9Q1                                 
微博位置: 无
发布时间: 2017-09-23 08:01
点赞数: 26   转发数: 13   评论数: 4
发布工具: 微博 weibo.com

257:OpenResty 标准组件 lua-resty-limit-traffic 库现在新增了一个 resty.limit.count 模块，可以完成 GitHub API 风格的指定时间区间内的请求总数计数式的访问控制策略：http://t.cn/R0LuBdY 感谢 IBM 美国的 Ke Zhu 和我们团队的温铭的努力！  
微博位置: 无
发布时间: 2017-09-22 13:41
点赞数: 17   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

258:刚给我们的 Test::Nginx::Socket 测试台添加了 HTTP/2 测试模式的支持，欢迎大家评审和尝试我这个 pull request 里的补丁：http://t.cn/R0zShUI 细节请见补丁里对应的文档。目前的实现是直接在底层调用 curl 来发送请求和解析响应。现在 curl 也支持 http2 了，所以可以直接借用一下，哈哈。  
微博位置: 无
发布时间: 2017-09-21 07:41
点赞数: 8   转发数: 9   评论数: 9
发布工具: 微博 weibo.com

259:刚给 OpenResty 的 resty 命令行工具实现了 -j dump 和 -j v 命令行选项，类似 luajit 命令行工具的同名选项，可以打印出 LuaJIT 的 JIT 编译器编译出来的 trace 对象的细节。  原图 
微博位置: 无
发布时间: 2017-09-20 13:27
点赞数: 12   转发数: 11   评论数: 1
发布工具: 微博 weibo.com

260:刚刚在 GitHub 借回复一个社区哥们的机会，较为详细地介绍了一下如何自己运行 OpenResty 规模宏大的测试集，并且可以分别使用各种不同的测试模式来运行同一个测试集：http://t.cn/R0vJW9m  
微博位置: 无
发布时间: 2017-09-20 03:30
点赞数: 26   转发数: 13   评论数: 1
发布工具: 微博 weibo.com

261:刚刚推送了 openresty_1.11.2.5-2 这个 deb 包到 OpenResty 官方的 APT 仓库，修复了原先会在升级时覆盖或卸载时删除 nginx 的那些个配置文件的问题。原先 deb 打包脚本里的 conffiles 文件没有生效，所以 nginx 的配置文件没有被 deb 包标记为配置文件。Debian 和 Ubuntu 的 OpenResty 官方 APT 仓库都更新了，已经。建议我们的用户升级之。                                 
微博位置: 无
发布时间: 2017-09-17 14:10
点赞数: 15   转发数: 4   评论数: 0
发布工具: 微博 weibo.com

262:前两天抽空快速写了一组命令行小工具，可以调用 Amazon Polly 的文本到语音服务，自动生成较大篇幅的英文电子书的语音朗读 MP3 文件。我把工具开源在了这个 amazon-polly-batch 的 GitHub 仓库里面：http://t.cn/Rp3gPlT 我原来都是自己朗读和录音的，但发现还是有些太累，不如让机器来读的好   
微博位置: 无
发布时间: 2017-09-17 13:15
点赞数: 34   转发数: 51   评论数: 6
发布工具: 微博 weibo.com

263:LuaJIT 最新的 GC64 模式支持（每进程的）GC 管理的内存可以使用 128TB 地址空间（47 位地址），刚在 Linux x86_64 上面使用 GC64 模式下的 LuaJIT 运行 ngx_lua 模块庞大的测试集，都通过了。大家可以本地试试。使用 ./configure --with-luajit-xcflags='-DLUAJIT_ENABLE_GC64' 命令编译最新的 OpenResty 1.11.2.5 正式版发布。                                 
微博位置: 无
发布时间: 2017-09-12 10:05
点赞数: 8   转发数: 7   评论数: 3
发布工具: 微博 weibo.com

264:新浪微博网页版在我这边经常登录失败，报证书错了，太搞了。  原图 
微博位置: 无
发布时间: 2017-09-12 09:39
点赞数: 8   转发数: 5   评论数: 20
发布工具: 微博 weibo.com

265:我们现有的软件工程的实践其实是建立在人类编写和维护软件的假设基础之上。人类容易粗心大意，人类容易顾此失彼。所以很多工程上的投入都是为了解决这些问题，经常为之付出很高的代价，包括软件复杂度上的，还有运行时开销上的。但如果是机器编程，则根本不存在这些问题。机器不会粗心大意，机器不会顾此失彼。同时机器生成的代码更加直截了当，简单易懂，因为没有一堆的函数和类的封装，不用迎合任何人类的编码习惯，可以根据当前业务的上下文极大地简化工程问题。                                 
微博位置: 无
发布时间: 2017-08-30 01:37
点赞数: 30   转发数: 44   评论数: 22
发布工具: 微博 weibo.com

266:今天坐大同的小飞机在金门大桥上空转了一圈   [组图共2张] 原图 
微博位置: 无
发布时间: 2017-08-28 10:00
点赞数: 53   转发数: 12   评论数: 5
发布工具: iPhone SE

267:Mashape 公司最近赞助了我们 OpenResty Inc 公司把 ngx_stream_lua 模块重写了一遍。现在我们迁移到了 nginx 1.13.3 核心的新的 stream 子系统上面，现在 Lua 驱动的 nginx TCP 服务器也支持 nginx 变量等更多特性了。GitHub 仓库地址是：http://t.cn/RC19hYA  
微博位置: 无
发布时间: 2017-08-27 04:56
点赞数: 13   转发数: 29   评论数: 4
发布工具: 微博 weibo.com

268:借一个哥们提问的机会，我刚刚在 luajit 官方邮件列表里简单分享了一下我们是如何提高 LuaJIT fuzz test 的随机性和有效性的：http://t.cn/RCjdTmQ 最后力荐了一下 Mozilla rr 这个神器  捉虫也是一门学问，是大学问。  
微博位置: 无
发布时间: 2017-08-25 06:36
点赞数: 24   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

269:NGINX 公司把我去年在 nginx.conf 2016 大会上的关于 OpenResty DSL 的演讲听写成了两篇博客文章，还用我当时的幻灯片作为配图，很给力啊。第一部分：http://t.cn/RCo7qfL 第二部分：http://t.cn/RCo7qfb 我帮他们简单看了一眼，找了几个明显的错别字   原图 
微博位置: 无
发布时间: 2017-08-23 09:09
点赞数: 43   转发数: 25   评论数: 4
发布工具: 微博 weibo.com

270:我们有一家客户在试用我们的 OpenResty Edge 2 商业网关产品时，直接自己写了一个脚本把他们现有的网关配置自动转换成了我们的 Edge 语言表达的规则。得到的 Edge 语言规则集相当的完整和优雅。我们的客户也会搞写程序的程序，真赞，哈哈！  
微博位置: 无
发布时间: 2017-08-21 03:49
点赞数: 26   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

271:我们美国团队的工程师 Ingy dot Net 老师在向外人介绍他在 OpenResty Inc. 的工作时如是说：“I write new programming languages for a company that only uses their own new programming language :D” Ingy 最近一直在使用我们自主实现的 Perl 6 方言，fanlang，来编写各种其他语言的优化编译器。  
微博位置: 无
发布时间: 2017-08-20 09:12
点赞数: 21   转发数: 10   评论数: 10
发布工具: 微博 weibo.com

272:OpenResty 1.11.2.5 正式版刚刚发布。发布公告在这里：http://t.cn/RC48kJN 下载位置在这里：http://t.cn/R5UsoS4 完整的更动列表在这里（带超链）：http://t.cn/RC48kJC 这个版本包含了过去几个月累积的大量新特性和新 bug 修复。建议所有的 OpenResty 生产用户升级之。感谢我们所有的开发者和贡献者！                  原图                             
微博位置: 无
发布时间: 2017-08-19 07:45
点赞数: 22   转发数: 15   评论数: 4
发布工具: 微博 weibo.com

273:OpenResty 1.11.2.5 RC1 刚刚发出来供社区测试。发布公告在这里：http://t.cn/R9RUluU 源码包下载地址在这里： http://t.cn/R9RUlu4 这个版本包含了大量的新特性和 bug 修复。细节见上面给的发布公告。欢迎大家试用和反馈！  
微博位置: 无
发布时间: 2017-08-10 11:19
点赞数: 7   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

274:我们计划下周或下下周先发一个 OpenResty 1.11.2.5 的新版本，我们已经累积了大量的新特性和新修复了。这个正式版发了之后，再着手升级 OpenResty 的 nginx 核心到最新的 1.13.3。我们已经停在 nginx 1.11.2 核心上太久了。届时我们的 ngx_stream_lua 模块也将兼容最新的 1.13.3 核心。欢迎关注！  
微博位置: 无
发布时间: 2017-08-06 08:34
点赞数: 54   转发数: 14   评论数: 16
发布工具: 微博 weibo.com

275:我们最近对 OpenResty 的核心组件，ngx_lua 模块和 LuaJIT 核心都进行了一系列比较深入的优化。现在 Lua 写的 hello world http 接口用 wrk 压测，整体性能提升了约 28%。在 2015 年款的 MBP 上，单 worker 进程（也就是只使用单个逻辑 CPU 核）跑出了 14 万 qps，原来只有 11 万。这个优化会首先出现在 OpenResty Inc 的商业网关产品中。                                 
微博位置: 无
发布时间: 2017-07-28 15:24
点赞数: 58   转发数: 23   评论数: 9
发布工具: iPhone SE

276:「诚邀前端牛人加入」我们公司叫做 OpenResty Inc.，是一家总部设在美国湾区的初创公司，在中国大陆和香港都设有全资子公司。我们是一家国际化的公司，同时拥有中国和美国两个团队。我们的客户面向全球。我们基于开源 Web 平台 OpenResty 和 Linux 内核构建分布式 Web 网关类产品，兼顾高动态性、高性能和高伸缩性。我们的 Web 应用具有极高的交互复杂度，属于富客户端类型的单页应用。需要涉及 Web IDE 类型的前端组件开发。我们目前的前端技术栈主要是 Vue + ES6。我们诚邀对前端技术有热情、有想法、有研究的牛人，加入我们的中国团队，一起实现优美而高效的 Web 产品，同时也能和我们一起致力于前端编程和前端测试的自动化。我们公司的使命是 Machine Coding，即让机器多写程序，人类少写程序。我们非常擅长实现各种小语言和它们的优化编译器，以及实现各种写程序的程序。我们有实力强大的后端团队，专注于高性能 Web 应用系统、高级优化和和分析技术、基于 OS 内核的调试技术和流量控制方面的技术。我们信奉特种作战，只选精兵强将。我们是一家工程师文化主导的公司，鼓励技术上的革新与进步。我们的工程师可以远程办公，工作时间没有时差。可以全职也可以兼职。全职员工会与我们的中国子公司订立劳动合同，会在当地代缴五险一金。由于我们是初创公司，加入我们的初创团队也会有较多的期权或股票。当然，我们希望能和我们一起成长，一起做真正了不起的技术产品，引领新的技术革新。                                 
微博位置: 无
发布时间: 2017-07-23 02:21
点赞数: 143   转发数: 245   评论数: 38
发布工具: 微博 weibo.com

277:这两天修了 OpenResty 官方 yum/apt 仓库里的 openresty-zlib-debuginfo 包的一个小问题。原先的打包脚本并没有为 zlib.so 生成调试符号，因为 zlib 的 build system 居然还为动态链接库单独设置了一个叫做 SFLAGS 的 makefile 变量。我原先只配置了 CFLAGS 变量，并不能影响到 zlib.so 的编译。这个比较坑爹。大家记得从 OR 官方仓库更新一下。                                 
微博位置: 无
发布时间: 2017-07-16 11:25
点赞数: 6   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

278:我在用 clang ASAN 编译 OpenSSL 1.0.2 的源码时，曾遇到一个诡异的错误，即 clang 总是尝试立即解决 ASAN 的某些符号，类似这样的错误：“clang: symbol lookup error: /usr/local/openresty-asan/zlib/lib/libz.so.1: undefined symbol: __asan_option_detect_stack_use_after_return” 后来在书鑫老师的指点下，才发现原来 OpenSSL 的构造系统会自己设置 LD_LIBRARY_PATH，这个东西会干扰链接器立即去解决动态链接库里的符号。                                 
微博位置: 无
发布时间: 2017-07-16 07:27
点赞数: 11   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

279:这两天我给 OpenResty 官方的 yum 仓库添加了 openresty-asan 包，这是使用 clang AddressSanitizer (ASAN) 工具编译出来的 openresty 二进制 rpm 包，和原有的 openresty-valgrind 包一样，都是用于检测和调试内存问题的。openresty-asan 包的文档在这里：http://t.cn/RKOc2vz 与之配合的还有 openresty-openssl-asan、openresty-pcre-asan 和 openresty-zlib-asan 这几个依赖包，都在同一个 yum 仓库里。                                 
微博位置: 无
发布时间: 2017-07-16 07:20
点赞数: 4   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

280:这两天我在 openresty.org 官网上写了一小段文档，简单介绍了一下如何利用 Valgrind 或 AddressSanitizer 来调试 OpenResty 或 NGINX 内部的内存问题（比如段错误这样的）：http://t.cn/RKOttTO 对于大部分内存问题，崩溃位置上的调用栈信息经常不是那么有用（除了 NULL 指针取内容等少数情况）。  
微博位置: 无
发布时间: 2017-07-16 07:04
点赞数: 11   转发数: 17   评论数: 1
发布工具: 微博 weibo.com

281:OpenResty 1.11.2.4 刚刚发布，包含了 nginx 最新的安全问题修复（CVE-2017-7529）。建议所有的 OpenResty 用户升级之。下载地址在这里：http://t.cn/R5qq7aA 发布公告见这里：http://t.cn/RKx0Z9I OpenResty 官方提供的 Yum 和 Apt 仓库也都已经同步更新。还包括官方提供的 Win32 二进制包。  原图 
微博位置: 无
发布时间: 2017-07-12 06:49
点赞数: 30   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

282:刚从我一个哥们那儿得到消息，原来 Sony Digital Paper 最近出第二代了，型号叫做 DPT-RP1/B：http://t.cn/RKVFf6y CPU 强了很多，内部存储大了很多，分辨率也提高了不少。好爽的样子。目前貌似都卖断货了。这对于喜欢大量阅读专业图书和论文 PDF 的人来说，绝对是刚需啊……Kindle 啥的相比之下对咱根本没意义了。我就超爱第一代的 DPT-S1。                                 
微博位置: 无
发布时间: 2017-07-11 02:04
点赞数: 19   转发数: 5   评论数: 9
发布工具: 微博 weibo.com

283:OpenResty 开始维护自己的 LuaJIT 测试集，放在 GitHub 上面：http://t.cn/RKtGqyC 主要基于 Mike Pall 之前放出来的测试集，后面还会有选择地整合标准 Lua 5.1/5.2/5.3 解释器官方的测试集。一条命令可以跑完所有测试。  
微博位置: 无
发布时间: 2017-07-10 12:51
点赞数: 17   转发数: 14   评论数: 1
发布工具: 微博 weibo.com

284:Ingy dot Net 老师最近花了两周时间使用我们自己实现的 Perl 6 方言，fanlang，快速实现了他的数据结构描述小语言 SchemaType 的编译器。SchemaType 语言在官网在这里：http://t.cn/RKyYdY0 他的 schematype-fan 编译器已经能吐独立的用于 JSON 类的数据结构校验的 Lua 代码。后面可以再加上流式校验的能力。                                 
微博位置: 无
发布时间: 2017-07-08 12:28
点赞数: 10   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

285:好几个哥们让我推荐美国大学的教材。其实完全应该自己去淘啊。记得我上高中时，没事都是泡图书馆和新华书店的。淘书的乐趣真是妙不可言。后来互联网发达了，我也经常去网上书店里去淘。我喜欢的好教材有好几十本，显然没法一一列出了……  
微博位置: 无
发布时间: 2017-07-08 09:32
点赞数: 16   转发数: 0   评论数: 13
发布工具: 微博 weibo.com

286:Linux 内核官方新打的一个安全补丁把 Mozilla rr 给搞坏了：http://t.cn/RKLjPTm 由于是安全补丁，于是之前的系列也都 backport 了，郁闷……  
微博位置: 无
发布时间: 2017-07-08 03:00
点赞数: 8   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

287:看到有些年轻人不屑于学习和掌握计算机领域的基本原理和工程技术细节，总想着一步登天，立马开搞非常高大上的东西。殊不知这跟习武是一样的，必须先打好基本功。如果连马步都蹲不稳，还怎么修习上乘武功？只能修成花拳绣腿。我印象中看到过一个世界一流大学的计算机系贴出来的口号是：“We make things work”，给我感触很深，因为实在见过太多华而不实的东西了。                                 
微博位置: 无
发布时间: 2017-07-08 02:27
点赞数: 250   转发数: 416   评论数: 87
发布工具: 微博 weibo.com

288:我们团队的院生同学刚刚给 NGINX 错误日志的实时拦截 Lua API 添加了毫秒精度的 UNIX 时间戳支持：http://t.cn/RaCffYr 我们自己的 OpenResty Edge 商业网关产品正好需要用到这个特性。该特性将包含在下一个开源 OpenResty 发布中。我们很乐于看到自己的商业产品的开发需求可以同时带动着开源 OpenResty 平台的不断完善。                                 
微博位置: 无
发布时间: 2017-06-29 05:44
点赞数: 32   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

289:发现好多家新兴的 CDN 公司都在他们的 edge 网络中深度应用了 OpenResty，不仅有中国的，也有美国、巴西、以色列等其他国家的。咱们 OpenResty 也算是为 CDN 行业做出了不小的贡献。咱们 OpenResty Inc. 公司即将推出的 OpenResty Edge 产品将尝试把动态高性能 Web 网关技术推到一个新的高度，目标是既能适用于普通企业的单机网关服务器，也能适用于 CDN 级别的全球网络。                                 
微博位置: 无
发布时间: 2017-06-29 03:18
点赞数: 47   转发数: 7   评论数: 10
发布工具: 微博 weibo.com

290:像 Python、Haskell 和 YAML 这样的严格格式的缩进敏感语言，进行语法解析和自动代码生成都会比较费劲。比如解析时，经典的 BNF 是表达不了这种语法的，而生成这种语法的代码时，缩进不再只是为了好看，错一点都不行。这种缩进敏感语法比较偏向于方便人类读写，可以省掉类似花括号和分号这样的分隔符。  
微博位置: 无
发布时间: 2017-06-26 01:30
点赞数: 10   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

291:我们团队在两三个月前使用我们的 Perl 6 方言，fanlang，重写了我原先用 Perl 5 实现的 edgelang 小语言编译器。新得到的 fanlang 版的 edgelang 编译器，代码优美了许多，代码量上也减少了 1/3，同时编译真实业务的几百 KB 的 edgelang 源码的速度也明显比 Perl 5 版的 edgelang 编译器更快。当然，和 lemplate-fan 类似，edgelang-fan 编译也还有极大的性能提升空间。fanlang 编译器生成的还是非常浪费资源的未优化的 Lua 代码，相当于 -O0 的水平。                                 
微博位置: 无
发布时间: 2017-06-26 00:59
点赞数: 10   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

292:我们团队的 Ingy dot Net 最近很快速地使用我们的 Perl 6 方言，fanlang，从零实现了 Perl 世界的 TT2 模版语言，用以取代 OpenResty 现有的 Lemplate 模版引擎。目前开源的 Lemplate 是用 Perl 5 实现的。新的使用 fanlang 重写的实现可以完整地运行在 OpenResty 平台之上，同时代码也优美了许多，方便扩展和优化。                                 
微博位置: 无
发布时间: 2017-06-26 00:51
点赞数: 12   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

293:开源社区和商业领域是不一样的。前者不存在客户第一，而只有社区第一，而社区者，江湖也，既包含社区内的用户，也包含社区内的开发者。而在商业领域，客户是衣食父母，自然是客户第一，没啥可说的，就是服务客户。但如果把这个逻辑生搬硬套到开源界，那就完全没有意义了。所以之前看到有人把开源和商业模式直接划等号，显然是错误的。只能说，商业可以有条件地从开源中获益，反之亦然。但绝不能直接划等号。                                 
微博位置: 无
发布时间: 2017-06-25 06:15
点赞数: 17   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

294:我们 OpenResty Inc. 公司虽然成立才几个月，但已经算是一个国际化的公司，拥有中国和美国两个团队。我们每周末都会开一个全公司的周会，既有国人也有老美。每位弟兄都要发言，自然必须用英语。口语不够好的同学对着稿子念也成，哈哈！最近为照顾中国团队的同学，又在正会之后加了一个中文的下半场。  
微博位置: 无
发布时间: 2017-06-25 05:36
点赞数: 86   转发数: 54   评论数: 22
发布工具: 微博 weibo.com

295:创业真是太刺激了，能有机会和许多聪明的志同道合的牛人一起做很多了不起的事情，真是人生一大享受。🙏  
微博位置: 无
发布时间: 2017-06-24 14:27
点赞数: 66   转发数: 4   评论数: 6
发布工具: iPhone SE

296:有人的地方就有江湖。开源社区也不例外。不懂得尊重和遵守江湖规矩的话，就怪不得别人不跟你玩，甚至要骂你了，哈哈！这也就是我们通常说的“礼”吧。不同的社区是不同的江湖，也就有不同的文化，由之而来的“礼”的标准也不同。如果总是以自我为中心，那必然要处处碰壁了。因此反而埋怨别人，不仅是无知，更是可笑了。                                 
微博位置: 无
发布时间: 2017-06-24 06:35
点赞数: 21   转发数: 19   评论数: 10
发布工具: 微博 weibo.com

297:我一直觉得有些中国用户在纯英文的 GitHub 项目里面建中文的 issue 是很不礼貌的行为。为什么不考虑一下关注项目的那些不懂中文的开发者和用户呢？英语才是国际开源社区交流的标准语。  
微博位置: 无
发布时间: 2017-06-24 02:01
点赞数: 36   转发数: 44   评论数: 55
发布工具: 微博 weibo.com

298:由于有用户反映 Ubuntu 的 PPA 仓库从中国大陆访问速度很慢，我昨晚把 OpenResty 官方的 Ubuntu APT 仓库从 Launchpad PPA 服务器迁移到了我们自己的官网服务器，这样在中国大陆可以享受到当地的 CDN 网络的缓存加速。我已更新了官网上针对 Ubuntu 仓库的添加步骤，请原来使用 PPA 仓库的用户更新一下：http://t.cn/RSuC58t                                 
微博位置: 无
发布时间: 2017-06-12 01:11
点赞数: 15   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

299:我们团队已经把 OpenResty 官方 Linux 包在 openresty.org 官网上的相关页面都译成中文了：http://t.cn/RtAeV1X 还有 http://t.cn/RS845uZ  
微博位置: 无
发布时间: 2017-06-10 04:48
点赞数: 31   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

300:OpenResty 官方现在提供针对 Debian 操作系统的 OpenResty 二进制 deb 安装包和 APT 仓库了。目前支持 amd64 体系结构，版本方面支持 Debian 7.x wheezy 和 8.x jessie。细节请参见 OpenResty 官网上的这一段文档：http://t.cn/RSjzGzC 欢迎大家反馈意见！  
微博位置: 无
发布时间: 2017-06-08 10:58
点赞数: 10   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

301:前两天我的主要工作环境，一个 Fedora 24 的 VMware 虚机，居然文件系统坏得一踏糊涂。首先检查了一下宿主机器 Macbook Pro 的文件系统，没有发现问题，然后检查 VMware 的虚拟硬盘文件 *.vmdk，发现损坏，最后检查 Linux 虚机的 ext4 文件系统，更是损坏得一踏糊涂。幸好发现一周前我做了全机备份。虽然一周前的备份里的 .vmdk 和 ext4 也都有损坏，但很轻微，直接用 vmrun 和 fsck 自动修正了了事。                                 
微博位置: 无
发布时间: 2017-06-07 08:03
点赞数: 7   转发数: 6   评论数: 12
发布工具: 微博 weibo.com

302:OpenResty 现在正式提供官方的 Ubuntu 二进制包仓库了。细节请见这里：http://t.cn/RS0gXYr 覆盖 x86_64 和 i386 两种体结构；涵盖从 14.04 trusty 到 17.10 artful 所有这些还没有 end of life 的 Ubuntu 版本。希望 Ubuntu Launchpad PPA 网站从中国国内访问速度还可以……欢迎反馈！后面得空了再接着弄针对 Debian 的仓库。                  原图                             
微博位置: 无
发布时间: 2017-06-07 07:22
点赞数: 10   转发数: 24   评论数: 16
发布工具: 微博 weibo.com

303:昨天才注意到在 Amazon Linux 上面使用 rpmbuild 命令生成 rpm 的时候，并不会输出 .src.rpm 包。Google 了一圈之后才发现原来 Amazon Linux 默认没有安装 redhat-rpm-config 这个 rpm 包。装上之后，就会自动吐 .src.rpm 了。好吧……回头 OpenResty 的那些二进制 rpm 包看来还得在 Amazon Linux 上面重新打一遍。                                 
微博位置: 无
发布时间: 2017-06-03 02:51
点赞数: 12   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

304:Xianliang Li 同学最近修复了 ngx_lua_upstream 模块中一个由来已久的 bug。即一个原先因为达到 max_fails 上限而被标记为下线状态的后端节点，如果后面被重置为上线状态，则其 fails 计数器并没有被清零，这会导致这个节点很快又因为 fails 达到 max_fails 而被标记为下线。这个 bug 直接影响到 lua-resty-upstream-healthcheck 这个健康检查模块。                                 
微博位置: 无
发布时间: 2017-05-31 06:06
点赞数: 15   转发数: 12   评论数: 1
发布工具: 微博 weibo.com

305:Wilhelm Liao 同学最近给 OpenResty 官方的 lua-resty-mysql 库的 connect() 方法添加了 charset 选项，可以自己指定 utf8 和 gbk 这样的字符编码，可以不同于 MySQL 服务器默认的连接字符集。详细的文档在这里：http://t.cn/RSGOKAE 并没有发送 set names 这样额外的 SQL 查询，而是在连接握手包里指定的。                                 
微博位置: 无
发布时间: 2017-05-31 05:54
点赞数: 10   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

306:我觉得优秀的程序员应该能够严格区分开表达问题和实现问题。当把问题表达得足够清晰足够清确时，这种表达就是我们说的 DSL，可以是任何形式，但绝对和具体实现无关，和具体的编程语言无关。而一旦把问题向机器描述清楚了，机器通常可以自动完成实现，至少是很大的一部分。甚至可以自动完成测试和调试。  
微博位置: 无
发布时间: 2017-05-30 04:54
点赞数: 37   转发数: 26   评论数: 4
发布工具: 微博 weibo.com

307:前不久把我们的 edgelang 2.0 语言也引入到了我们自己的基于 OpenResty 实现的高性能 DNS 服务器中。现在可以通过自定义 edgelang 规则来动态操纵大规模的 DNS 服务了。我们的 edgelang 1.0 已经驱动着一家初具规模的 CDN 厂商的 DNS 服务了，他们的 DNS 服务也是运行在 edge 上的 OpenResty 里的。  
微博位置: 无
发布时间: 2017-05-30 04:42
点赞数: 21   转发数: 6   评论数: 6
发布工具: 微博 weibo.com

308:我们准备引入一个叫做 wirelang 的领域小语言专门用来描述各种线路协议，包括 MySQL、Memcached、Redis、WebSocket、DNS 等东西的线路协议，然后由 wirelang 编译器自动生成针对 OpenResty 的非阻塞客户端的 Lua  库实现，同时自动进行优化，甚至把计算较密集的协议编解码部分自动转为优化过的 C 实现。                                 
微博位置: 无
发布时间: 2017-05-30 03:42
点赞数: 24   转发数: 7   评论数: 9
发布工具: 微博 weibo.com

309:Wilhelm Liao 同学最近给 OpenResty 官方的 lua-resty-mysql 库贡献了一个小补丁，让 connect() 方法支持指定 charset 选项，例如 charset = "utf8" 或者 charset = "gbk" 这样的。细节请参见最新的文档：http://t.cn/RSGOKAE 该更动将包含在下一个 OpenResty 发布中。  
微博位置: 无
发布时间: 2017-05-30 03:29
点赞数: 9   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

310:下面几天我要努力把 Aron 老师和 Shell 老师贡献的 OpenResty deb 打包脚本给整理出来，希望能早日发布 OpenResty 官方针对各个常见版本的 Ubuntu 和 Debian 系统的二进制 deb 包仓库  已经等了很久了，真是不好意思。  
微博位置: 无
发布时间: 2017-05-28 07:57
点赞数: 25   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

311:最近基于 Intel NUC + VMWare Workstation，搞了一个包含十几个不同操作系统的虚机集合，作为 OpenResty 官方二进制包的“打包农场”。我已把 OpenResty 官方的 Linux 包仓库都迁移到 openresty.org 官网上来了，而不再使用 Fedora 的 COPR 云打包服务和包仓库服务。细节请见：http://t.cn/RVhMIIJ  
微博位置: 无
发布时间: 2017-05-28 07:23
点赞数: 7   转发数: 14   评论数: 11
发布工具: 微博 weibo.com

312:OpenResty 官方现在正式提供针对最新版本的 Amazon Linux x86_64 系统的 OpenResty 二进制包仓库。细节请见 http://t.cn/RS28uLT  
微博位置: 无
发布时间: 2017-05-28 07:16
点赞数: 5   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

313:最近终于有机会实战使用了一把 Mozilla rr。我们的 edgelang 编译器是用 fanlang 编写的，然后用 fanlang 编译器生成最终可执行的 Lua 程序。生成的这个 Lua 脚本源码有 1.8MB。然后观察到这个大 Lua 脚本在压力下会让 LuaJIT 的 JIT 栈发生随机溢出。然后我用 rr record 来运行我们的压力测试，很快就成功录制到了一次 JIT 栈溢 出的完整执行过程。然后通过 rr replay 来回放，结合 gdb 里面的数据断点、反向执行等功能、配合我们用 python 写的高级 gdb 工具，还有 LuaJIT 的作者 Mike Pall 的指点和提示，很快就定位并修复了这个隐藏很深的诡异 bug。                                 
微博位置: 无
发布时间: 2017-05-18 09:28
点赞数: 20   转发数: 27   评论数: 5
发布工具: 微博 weibo.com

314:今天合并了大同贡献的补丁，现在 OpenResty 中的 ngx.sleep(0) 调用会主动放弃当前的 CPU 执行权，而把执行权交还给 nginx 事件循环和其他并发请求。当前 yield 了的 Lua 协程会在下一个 nginx 事件处理周期里接着继续运行。这两个相邻的事件周期之间的超时设置为 0，所以并不会引入额外的 I/O 延时。据此可以实现基于自愿弃权的 CPU 时间片管理。                                 
微博位置: 无
发布时间: 2017-05-15 14:46
点赞数: 12   转发数: 12   评论数: 6
发布工具: 微博 weibo.com

315:今天我顺手给 OpenResty 添加了一个新的 Lua API 函数，可以主动触发当前的 nginx 进程优雅退出。放在了 ngx.process 模块里面，作为 signal_graceful_exit：http://t.cn/RaOTwcX 实现上非常简单高效，只是设置了一个叫做 ngx_quit 的 C 全局变量，并不涉及任何 UNIX 信号操作或 IPC。resty 命令行工具已经用上这个特性了。                                 
微博位置: 无
发布时间: 2017-05-15 14:34
点赞数: 4   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

316:今天合并了德江贡献的 ngx.timer.every() 这个 Lua API 函数。现在可以在 OpenResty 里面方便地创建周期触发的定时器了，这比通过原来的 ngx.timer.at() 手动来创建这种定时器要更方便，也更健壮。对应的文档在这里：http://t.cn/RaOWvde  
微博位置: 无
发布时间: 2017-05-15 14:20
点赞数: 11   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

317:Andreas Lubbe 同学给 OpenResty 贡献的设置 PCRE JIT 栈大小的 Lua API 最近刚合并了：http://t.cn/RaCalAS PCRE 默认的 JIT 栈只有 32KB，确实小了点。该功能已包含在最近发的 OR 预览版中。欢迎尝鲜。我们的 fanlang 编译器编译 edgelang 编译器所生成的 Lua 程序，就让 PCRE JIT 栈溢出了。  
微博位置: 无
发布时间: 2017-05-14 12:57
点赞数: 11   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

318:这两天合并了院生同学贡献给 OpenResty 的实时捕获 nginx 错误日志消息的 Lua API：http://t.cn/RaCffYr 同时支持在 Lua 里面动态设置过滤 log level。捕获直接发生在内存中，不涉及任何文件操作。错误日志也成为可以直接操纵的内存数据了。方便做 OpenResty 内部的实时错误日志采集和在线反馈了。  
微博位置: 无
发布时间: 2017-05-14 12:10
点赞数: 13   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

319:刚刚给我们的 resty 命令行工具添加了 --gdb 和 --rr 这两个新的命令行选项，可以分别通过 gdb 和 rr record 来运行底层的 nginx 进程。结合原来就有的 --valgrind 选项，可以方便我们直接通过 resty 工具来调试底层的 openresty/nginx/luajit 问题。官方文档在这里：http://t.cn/RaCV4fi  
微博位置: 无
发布时间: 2017-05-14 12:04
点赞数: 11   转发数: 7   评论数: 0
发布工具: 微博 weibo.com

320:这两天我配合了一下 Mozilla rr 项目的 Robert 老大，现在 rr 终于能在 VMWare Fusion 里面运行的 Linux guest OS 上面完全通过其官方测试集了。我试了一下 OpenResty 的一个例子，reverse execution 啥的也都能正确工作了。好开心。今天以前问题还是很大的。细节见这里的讨论：http://t.cn/RaX4l9q  
微博位置: 无
发布时间: 2017-05-12 10:40
点赞数: 18   转发数: 4   评论数: 14
发布工具: 微博 weibo.com

321:前两天发布了 Lemplate 0.11 到 CPAN：http://t.cn/RtPJcbn 完整的更动列表在这里：http://t.cn/RaIHWtz 感谢 Ingy dot Net 同学实现了不少新的标准 vmethod 和 filter 功能，还有自定义 filter 的功能。Lemplate 是一个 perl TT2 模版到 OpenResty Lua 源码的编译器。我同时更新了 OpenResty 官方 yum 仓库里的 perl-Lemplate 包。                                 
微博位置: 无
发布时间: 2017-05-10 12:26
点赞数: 6   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

322:院生同学最近给 OpenResty 贡献了 ngx.process 模块，可以开启一个特殊的特权 nginx agent 进程，类似 worker 进程，但不监听虚拟主机的那些端口，同时也继承和 nginx master 进程一样的系统帐号。文档在这里：http://t.cn/RaISyo9 通过该特权 agent 进程，可以实现对 nginx 服务的自我控制，比如发信号啥的。                                 
微博位置: 无
发布时间: 2017-05-10 11:02
点赞数: 15   转发数: 34   评论数: 10
发布工具: 微博 weibo.com

323:优秀的程序员不仅能自己写得一手好代码，而且还得能快速阅读和领会别人写的代码。当然，逻辑混乱和文理不通的垃圾代码自然不算。我们生活在编程大分工大协作的时代。这个世上应该已经不存在只使用自己编写的软件的人了。  
微博位置: 无
发布时间: 2017-05-06 07:15
点赞数: 60   转发数: 119   评论数: 26
发布工具: 微博 weibo.com

324:刚看到 VMWare 还有一个类似 DTrace 的 VProbes 动态追踪框架：http://t.cn/RX1CFJU 这个可以直接跨多种不同的 guest OS，实在是很帅。但和 DTrace 一样很遗憾的一点是，追踪脚本里面不支持循环。在这方面，systemtap 确实领先很多呀。  
微博位置: 无
发布时间: 2017-04-29 01:42
点赞数: 11   转发数: 23   评论数: 4
发布工具: 微博 weibo.com

325:刚刚发布了 OpenResty 新的正式版 1.11.2.3。感谢所有的开发者和贡献者！下载位置在这里：http://t.cn/R5qq7aA 完整的更动列表在这里：http://t.cn/RteHuqy 发布公告在这里：http://t.cn/RXChoYw 建议所有的 OpenResty 生产用户都升级到此版本。下一次 OR 发布准备升级 NGINX 核心到最新版了。  原图 
微博位置: 无
发布时间: 2017-04-22 09:41
点赞数: 41   转发数: 12   评论数: 6
发布工具: 微博 weibo.com

326:Procreate 软件的 multi-layer 区域选取和变换功能确实太强大了，手绘原型设计图也可以方便地按区域做修改和调整了。今天一口气画了七八张图。唯一美中不足的是 procreate 还不支持把 multi-layer 的选定区域复制到剪切版，所以不方便跨画板复用绘图区域，需要按层分别复制粘贴，略繁琐。层不多时，倒也还能接受。                                 
微博位置: 无
发布时间: 2017-04-16 14:56
点赞数: 6   转发数: 0   评论数: 0
发布工具: iPhone SE

327:刚刚发布了 Test::Nginx 0.26 新版到 CPAN。发布公告在这里：http://t.cn/RXvNyqh 亮点是多进程并行跑测试的模式，以及 response_body_filters 段，还有新的对 datagram nginx server 的测试框架支持。  
微博位置: 无
发布时间: 2017-04-10 11:14
点赞数: 9   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

328:OpenResty 1.11.2.3 RC1 刚刚发布供社区测试。发布公告在这里：http://t.cn/R6FhCjH 源码包下载地址在这里：http://t.cn/R6FhCj8 Win32 二进制包在这里：http://t.cn/R6FhCjQ 包含了过去 4 个多月中积累的所有新特性和 bug 修复。欢迎测试反馈！  原图 
微博位置: 无
发布时间: 2017-04-09 12:05
点赞数: 26   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

329:刚注意到 LuaJIT 2.1 今年初新实现了 Lua 5.3 语言中的标准函数 table.move()，可以在当前 table 里或两个 table 之间批量复制数组元素。而且这个原语还能被 JIT 编译。至少在咱们的 fanlang 编译器里面有大用。嘿嘿。文档见 http://t.cn/R6kJmI3  
微博位置: 无
发布时间: 2017-04-09 05:58
点赞数: 13   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

330:美国的家庭互联网服务一直是 sorry story，好不容易，我家的宽带用 speakeasy 测速终于可以达到 280Mbps/30Mbps 的水平了。可惜 Google Fiber 还没覆盖到我们小镇。好期待啊。  原图 
微博位置: 无
发布时间: 2017-04-08 08:59
点赞数: 12   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

331:最近德江同学给咱们的 Perl 6 方言编译器 fanlang 添加了对 use:lua 语句的支持，现在可以从 fanlang 源码里面直接加载外部任意的 Lua 库模块了，然后直接当作 fanlang 模块来使用。这样，我们可以更多地使用 fanlang 来代替 lua 来写针对 OpenResty 平台的代码了，特别是那些性能要求不太高的场景。  
微博位置: 无
发布时间: 2017-04-08 08:41
点赞数: 7   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

332:Ubuntu 自带的 VNC 服务器软件 vino-server 好吃 CPU 啊，客户端活跃时，vino-server 进程的 CPU 使用率就保持在 80% 以上，有时还达到 100%。相比之下，Mac OS X 上的 ScreenSharing 进程的 CPU 最高时也不过 4% 左右。后面得空时给 vino-server 进程拍照火焰图看看到底什么情况……  
微博位置: 无
发布时间: 2017-04-08 08:37
点赞数: 8   转发数: 14   评论数: 4
发布工具: 微博 weibo.com

333:原来家里的宽带网络一直不稳定，查看 modem 的 log，发现一堆的 T3 timeout 错误，还有不少 T4 timeout，于是果断换了一个 32 channel 的 modem，把我的 ISP 提供的 24 个 channel 都用上，于是立马消停了，一天下来也只有一次 T3 timeout 错误，而且我的每分钟 ping 网络的脚本也几乎没有发现丢包了。  
微博位置: 无
发布时间: 2017-04-08 08:03
点赞数: 10   转发数: 8   评论数: 7
发布工具: 微博 weibo.com

334:几天前在家附近散步的时候，没注意踩到了一条一米多长的蛇，结果只看到一条长长的东西在我身旁飞起来乱舞，像鞭子一样抽在我身上。定睛一下，发现是一条好长的漂亮的蛇，径直游进草丛里去了，于是赶紧用手机拍照（见附图）。把它吓一跳，把我也吓一跳。哈哈！幸好没被它咬到。看来下回走路要特别小心……             [组图共2张]      原图                             
微博位置: 无
发布时间: 2017-04-08 06:38
点赞数: 17   转发数: 10   评论数: 17
发布工具: 微博 weibo.com

335:对于 Mac 系统上的 OpenResty 用户，现在推荐直接使用 homebrew 安装 OpenResty。使用命令 brew install homebrew/nginx/openresty 就可以了。感谢温铭同学的辛勤工作。这个包和我们官方的 Linux 包是高度同步的。OpenResty 官方团队会一直持续更新和维护这个 brew 的，所以也算是咱官方的 Mac 包了。  
微博位置: 无
发布时间: 2017-03-26 13:04
点赞数: 60   转发数: 26   评论数: 6
发布工具: 微博 weibo.com

336:我们的 Perl 6 方言，fanlang 的编译器已经足够强大了。我们已经使用 fanlang 重写了原先用 Perl 5 编写的 edgelang 编译器。事实上，我之前先写了一个 5to6.pl 脚本，把 edgelang-p5 的 Perl 5 源转换成 Perl 6 源，最近我的兄弟们再把 edgelang-p6 的 Perl 6 源再调整为合法的 fanlang 源   原图 
微博位置: 无
发布时间: 2017-03-26 11:38
点赞数: 6   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

337:用 iPad Pro + Apple Pencil + Procreate 的组合画图，确实要比 Wacom Cintiq 13HD + Sketchbook Pro 的组合爽多了。  
微博位置: 无
发布时间: 2017-03-26 10:18
点赞数: 19   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

338:前几天我更新了一下 OpenResty 官方的 Linux 包仓库（http://t.cn/RtvZ26X），把 OpenSSL、zlib 和 PCRE 都升级到了各自最新的官方发布版本。我们正在准备 OpenResty 1.11.2.3 这个新版本。  
微博位置: 无
发布时间: 2017-03-25 07:04
点赞数: 10   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

339:受 JavaScript 世界的 source map 的启发，我最近请 Ingy 老师为我们的 Perl 6 方言编译器 fanlang 添加了 source map 支持，可以在 LuaJIT 运行时把 Lua 符号（例如 Lua 调用栈轨迹）自动转换成 fanlang 符号。比如下面是一个典型的 LuaJIT 运行时异常生成的 fanlang 调用轨迹。这样调试就省心太多了。                  原图                             
微博位置: 无
发布时间: 2017-03-25 06:56
点赞数: 16   转发数: 16   评论数: 4
发布工具: 微博 weibo.com

340:花了两百多行 Perl 代码，为 fanlang 项目编写了一个跨机分布式测试运行脚本，叫做 maptest，使用贪心算法根据不同机器的计算能力自动调度，确保测试任务的均衡分布，按 .t 测试文件的粒度进行分布。这样在测试驱动开发过程中，可以同时动用多台本地网络中的机器，运行当前项目的测试集，从而大大缩短回归时间。                                 
微博位置: 无
发布时间: 2017-03-24 09:47
点赞数: 20   转发数: 25   评论数: 7
发布工具: 微博 weibo.com

341:Ingy 老师一入职就很快给咱们的 fanlang 编译器添加了 Perl 6 语言的 heredoc 语法。Perl 的这种 heredoc 语法是上下文有关的，实现起来比较 tricky，和 Python 这样的缩进敏感语言类似。  原图 
微博位置: 无
发布时间: 2017-03-13 09:13
点赞数: 24   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

342:记得十几年前还在上大学时，就在我几乎所有的个人项目里面大量使用了 Ingy 老师的 Test::Base 来驱动测试集，后来在雅虎和淘宝时，依然大量使用了 Test::Base 来作测试。在淘宝时，更是应用了他的 Jemplate 客户端模版引擎来驱动淘宝量子统计这个数据产品的 Web 前端。OpenResty 的测试框架 Test::Nginx 也是基于 Test::Base。我这些年来编写的各种业务小语言编译器也是基于他的解析框架 Pegex。我每天作 GitHub 上的代码评审，也离不开他的 git-hub 命令行工具。                                 
微博位置: 无
发布时间: 2017-03-13 08:13
点赞数: 16   转发数: 9   评论数: 0
发布工具: 微博 weibo.com

343:Ingy dot Net 老师是 YAML 数据格式的设计者之一和目前的主要维护者，Jemplate、Test::Base、git-hub、SchemaType 及 Pegex 的作者。上周 Ingy 老师刚刚全职加入了我们总部设在加州的 OpenResty Inc. 公司。他是我多年来的偶象之一。十几年来我每天都会用到不止一款他贡献的开源软件，虽然 YAML 的使用我目前只限于 Travis CI。                  原图                             
微博位置: 无
发布时间: 2017-03-13 08:07
点赞数: 93   转发数: 36   评论数: 13
发布工具: 微博 weibo.com

344:Cloudflare 公司最近这次影响甚广的 Cloud bleeding 事件是他们自己编写的一个 C 模块中的内存问题所导致的，与 OpenResty 没有任何关系。OpenResty 用户并不会受到此问题的任何影响。OpenResty 官方团队会继续坚持多年以来高标准的代码 review 流程和非常严格的代码测试流程，继续保持对软件质量的敬畏之心。                                 
微博位置: 无
发布时间: 2017-02-28 05:36
点赞数: 68   转发数: 12   评论数: 4
发布工具: 微博 weibo.com

345:我过去一年在 GitHub 上面的提交活动可以通过这个 heroku 应用转成一支曲子：http://t.cn/zYNl2Q7 挺好听，哈哈！很明显的一点是，从我离开 Cloudflare 的时间点开始，曲峰一转，节奏大大加快。  原图 
微博位置: 无
发布时间: 2017-02-21 02:25
点赞数: 25   转发数: 17   评论数: 5
发布工具: 微博 weibo.com

346:我很快就把 Edgelang 编译器的文法定义从 Perl 5 的 Pegex 给移植到了我们自己的 Fanlang 语言的 grammar 描述语言（记法上类似 Perl 5 的 Parse::RecDescent 模块，但吸收了 Pegex 的 +和 - 记法）。然后 Fanlang 编译器立即生成了一个纯 Lua 的 Edgelang 解析器实现。  
微博位置: 无
发布时间: 2017-02-16 12:17
点赞数: 8   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

347:最近在忙着创建 OpenResty Inc 公司，希望能聚集最优秀的 OpenResty 开发者，一起全力打造基于 OpenResty、Linux 内核等基础平台的企业级产品和解决方案，以提供给咱广大的 OpenResty 企业用户。希望能创造出优美、高效、小巧、灵活和智能的 Web 软件，同时让机器为人类编写尽可能多的高质量的实现代码。                                 
微博位置: 无
发布时间: 2017-02-13 10:02
点赞数: 150   转发数: 82   评论数: 30
发布工具: 微博 weibo.com

348:这两天开始用我们的 fanlang 来改写我们的 edgelang 编译器。我们最近几个月全力研发的这两种“小语言”在这个项目里交汇。当然，fanlang 是一种 Perl 6 方言，在功能上其实已经不算“小语言”了，而是全功能的脚本语言了  
微博位置: 无
发布时间: 2017-02-12 15:05
点赞数: 17   转发数: 9   评论数: 7
发布工具: iPhone SE

349:刚在我们的 fanlang 编译器中实现了 Perl 6 的编译单元和模块机制。Perl 6 的 use 语句、module 语句、unit class/grammar/module 语句等等，都实现了。我自己实现了类似 C/C++ 的编译 /链接机制，这使得大型 fanlang 项目的开发也可以很方便地享受增量构造的好处，同时也能通过 make -jN 实现并行化。  原图 
微博位置: 无
发布时间: 2017-02-11 08:54
点赞数: 15   转发数: 8   评论数: 9
发布工具: 微博 weibo.com

350:现代优化编译器和现代正则引擎，都属于最复杂最精巧的软件之一。写这种东西往往容易乐此不疲，因为其中经常会浓缩很多有趣的算法和理论。我接触过的现代操作系统内核、现代数据库管理系统、以及现代 Web 浏览器也都属于这种类型。玩转这些最复杂最精密的软件的工程师绝对称得上是 hard core 了。而很多其他的软件，即使称得上复杂，却也称不上精巧。                                 
微博位置: 无
发布时间: 2017-02-02 11:45
点赞数: 64   转发数: 58   评论数: 11
发布工具: 微博 weibo.com

351:昨天用 fanlang 编写了一个四则算术表达式的计算器脚本，支持加减乘除和乘方运算（见下）。和标准 Perl 6 语言唯一区别的是 fanlang 的文法引擎使用的是自己的 EBNF 记法，主要参考了 Parse::RecDescent 解析模块的记法。这个 fanlang 计算器解析和计算一个 556 KB 的随机算术表达式只需 0.131 秒。  原图 
微博位置: 无
发布时间: 2017-02-02 09:50
点赞数: 15   转发数: 14   评论数: 3
发布工具: 微博 weibo.com

352:我觉得人类战胜机器时代日益增长的复杂性，还是得依赖机器。人类的理解力、记忆力和体力终究是有限的。我们最终只要做好造物主的角色就好了，不必执着于亲自作劳作者。每当我们发现某件任务索然无味，没有智力挑战的时候，就该问问自己是否应该交给机器做。把无趣的活儿交给其他的人类伙伴做，其实是不够善良的…                                 
微博位置: 无
发布时间: 2017-01-29 15:41
点赞数: 35   转发数: 22   评论数: 5
发布工具: iPhone SE

353:在认真动手码了几千行 Perl 6 代码之后，发现 Perl 6 确实是一门很优美的通用目的编程语言。这让我又体会到了少年时代最本初的编程乐趣。可惜这么多年来一直缺一个靠谱的编译器实现。现在就看我们的 fanlang 实现了！开心。  
微博位置: 无
发布时间: 2017-01-29 15:23
点赞数: 32   转发数: 11   评论数: 1
发布工具: iPhone SE

354:现在很多软件工程的实践原则其实是针对人类编码过程的。未来的机器自动编程的时代，其实是很不一样的另一番图景。我们不能忘了那些原则背后的真实原因和动机，以避免在新时代里为之束缚。  
微博位置: 无
发布时间: 2017-01-29 15:00
点赞数: 20   转发数: 52   评论数: 10
发布工具: iPhone SE

355:对于 hard core 开发者来说，可编辑的代码确实比可复用的代码更可贵。易于编辑的代码，出了问题可以自己修，性能不好可以自己优化。而完美的软件是不存在的，所以可编辑性非常重要。  
微博位置: 无
发布时间: 2017-01-29 14:30
点赞数: 21   转发数: 32   评论数: 23
发布工具: iPhone SE

356:最近几天我用 Perl 5 快速写了一个 609 行的小脚本（除去空行和注释行），可以自动把我写的 EdgeLang 编译器的 Perl 5 代码转换为合法的 Perl 6 代码。于是很快就把 EdgeLang 编译器的近 7000 行 Perl 5 代码给转换成了可以为 Rakudo 所成功编译和加载的近 6000 行 Perl 6 代码。写程序的程序无处不在呀。                                 
微博位置: 无
发布时间: 2017-01-29 14:08
点赞数: 18   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

357:Trump 总统登基，我唯一希望他兑现的竞选承诺是把美国公司的商业税给降下来……  
微博位置: 无
发布时间: 2017-01-22 03:26
点赞数: 22   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

358:今天把我们的 edgelang 小语言编译器的解析器部分移植到了标准 Perl 6 grammars。用这个解析器比较了一下 Perl 6 官方参考实现 Rakudo 和 Perl 5 Pegex 的性能，分析真实世界的几十 KB 到几百 KB 的 .edge 源文件，基于 Perl 5 Pegex 实现的 edgelang parser，要比 Rakduo 快 1 倍左右。Rakudo 的解析性能已经比我预想的要好了                                  
微博位置: 无
发布时间: 2017-01-18 11:00
点赞数: 19   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

359:这几天在 fanlang 编译器中实现了常用的 Perl 6 面向对象语言特性，包括类定义、类继承、类方法定义、公有类属性、私有类属性、只读类属性、可读写类属性，自动 new 构造函数生成、submethod TWEAK，在及在 class 定义体中插入任意可执行语句等等。下图中的 Perl 6 OO 代码示例取自 fanlang 自己的测试集，自然是已经通过了的。                  原图                             
微博位置: 无
发布时间: 2017-01-17 09:48
点赞数: 11   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

360:我最近在 fanlang 编译器中已经实现了很多常用的 Perl 6 语言特性，比如标量/数组/哈希变量定义、赋值和作用域、方法调用、自定义函数（sub）和调用、if/elsif 语句、while/for 循环语句、闭包创建、很多关系比较、代数、位运算和逻辑运算符，不少 Perl 6 标准函数、简单的 junction。还加了简单的自动类型推导和检查。                                 
微博位置: 无
发布时间: 2017-01-11 10:02
点赞数: 15   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

361:我们准备把 OpenResty 核心组件 ngx_http_lua 模块的 Lua API 统一迁到 lua-resty-core 里基于 FFI 的实现，淘汰原先基于标准 Lua 5.1 的 CFunction 接口的实现。这样我们就不必再维护两套平行的 Lua API 实现，只需要专注于做基于 FFI 的更高效更干净的实现了。更多细节请见这里：http://t.cn/RM6CrPY 也欢迎大家参与那里的讨论。                                 
微博位置: 无
发布时间: 2017-01-11 09:44
点赞数: 15   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

362:Fanlang 编译器后面还计划再添加一个 JavaScript 后端，这样所有使用 Fanlang 实现的 DSL 或通用脚本语言的编译器，也可以同时运行在 Web 浏览器中。这于对这些语言的 Web IDE 或桌面 IDE 很有现实意义。当然，另一条更难但一劳永逸的路径是把 LuaJIT 的字节码直接编译成 asm.js 或者 WebAssembly 汇编。可以玩的很花。嘿嘿。                                 
微博位置: 无
发布时间: 2017-01-09 09:25
点赞数: 10   转发数: 13   评论数: 7
发布工具: 微博 weibo.com

363:Fanlang 这个 Perl 6 核心子集的编译器目前还没有做任何优化，输出的 Lua 代码也极为浪费。即便如此，我写的一个递归版的 fib(35) 程序使用 fanlang 编译器生成的 Lua 代码的运行效率也要比 Perl 6 官方的参考实现 Rakudo 快出整整一个数量级，同时比成熟的 Perl 5 解释器也要快一倍。这就是 LuaJIT 的力量！对于这个例子，Fanlang 最终应当可以优化到比 Perl 5 还快 10 倍。                                 
微博位置: 无
发布时间: 2017-01-09 09:14
点赞数: 8   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

364:实现 Perl 6 核心子集的过程是如此轻松有趣，我觉得咱们后面可以接着做 PHP、Python、Ruby、JavaScript 等其他语言的核心子集的编译器，同时输出可以运行在 OpenResty/LuaJIT 平台上的 Lua 代码。把 Lua 当作虚机汇编，把 LuaJIT 当作“公共语言运行时”。所以这些语言之间可以相互调用，乃至相互内嵌。所以说，语言之争是浮云。                                 
微博位置: 无
发布时间: 2017-01-09 09:11
点赞数: 16   转发数: 14   评论数: 10
发布工具: 微博 weibo.com

365:好吧，我把 fanlang 做成 Perl 6 语言的一个很大的核心子集了。目前除了没有采纳 Perl 6 正则语法以外，其他 fanlang 的语言特性都是直接照搬的 Perl 6 的设计，无论是语法还是语义，还是核心库函数。目前正则部分仍是用的 Perl 5 正则，同时文法引擎部分采用的是 EBNF 和 Perl 5 正则的混合物。EBNF 部分主要基于 Parse::RecDescent 模块的方言，同时吸取了 Pegex 模块的一些元素。                                 
微博位置: 无
发布时间: 2017-01-09 09:03
点赞数: 5   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

366:今天听一个日本姑娘说英语，我还真以为她在说日语……比如 image 这个词能念成 ieee mee gaaa 这种日本味，太有意思了……  
微博位置: 无
发布时间: 2017-01-06 09:30
点赞数: 20   转发数: 12   评论数: 20
发布工具: 微博 weibo.com

367:貌似带 touch bar 的 MacBook Pro 的电池续航时间确实会不稳定。幸好我们最近买的是不带 touch bar 的 13 英寸入门款   
微博位置: 无
发布时间: 2016-12-28 14:20
点赞数: 6   转发数: 6   评论数: 14
发布工具: iPhone SE

368:前不久刚弄了台 AT&T 的 wifi hotspot 小设备，发现在 Oakland 的一个儿童公园里面，使用 4G LTE 下载 openresty 官方的 rpm 包可以达到 6、7 MB/s 的下载速度，太猛了。之前在 Pacifica 的山林中，信号和下载速度也非常不错。  
微博位置: 无
发布时间: 2016-12-28 13:58
点赞数: 9   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

369:fanlang 编译器的测试台是直接调用的 resty 命令行工具，所以测试集可以享受到 prove 工具的多进程并行运行测试的功能，即通过 -jN 选项，很像 Gnu make 的 -jN 选项。比如在我的最高配的 mid-2015 15 英寸 Macbook Pro 上面跑的 Linux 虚机里，fanlang 目前的测试集用 -j8 运行只需 4 秒，而单线跑需要 17 秒。                  原图                             
微博位置: 无
发布时间: 2016-12-28 13:44
点赞数: 5   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

370:刚使用我前不久新写的开源工具 pgx2dot.pl，从 edgelang 编译器的语法描述文件，自动生成了 edgelang 的语法结构示意图（见下）。原始的 SVG 格式的矢量图在这里：http://t.cn/RIEqeRo 这个有向图中，节点表示语法元素（终结符和非终结符），边表示语法元素之间的包含关系，箭头指向被包含的元素。  原图 
微博位置: 无
发布时间: 2016-12-28 13:06
点赞数: 10   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

371:刚使用我大学时写的开源工具 umlclass.pl，从 edgelang 编译器的源码自动绘制出了一幅 UML 类图。其中大部分的类是 edgelang 的抽象语法树（AST）的节点类。这是一幅规模较大的图。原始的 SVG 格式的矢量图在这里：http://t.cn/RIEG63Z 最后的图布局和渲染自然是使用的万能的 Graphviz 工具   原图 
微博位置: 无
发布时间: 2016-12-28 12:54
点赞数: 20   转发数: 4   评论数: 12
发布工具: 微博 weibo.com

372:我在今年的 nginx.conf 2016 大会上的分享视频，等了半年，终于放出来了，题为《Building Business Systems with DSLs atop OpenResty》，在 YouTube 上面：http://t.cn/RIEyvOI 当时使用的幻灯片在这里：http://t.cn/RIEyvOM  原图 
微博位置: 无
发布时间: 2016-12-28 12:16
点赞数: 40   转发数: 54   评论数: 4
发布工具: 微博 weibo.com

373:圣诞前夕手贱安装了 CleanMyMac 3 的最新更新，结果在我的 OS X El Capitan 系统上扫描 System Junk 会无限挂起，悲剧。幸好我有先前版本的 Time Machine 备份，直接恢复前一次备份里的 CleanMyMac 应用程序目录就搞定了。看来较老的系统支持得不好了，亲测最新版 CleanMyMac 3 在 macOS 系统上面没有问题。                                 
微博位置: 无
发布时间: 2016-12-27 15:00
点赞数: 5   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

374:在我的最高配的 mid-2015 15-inch Macbook Pro 上跑 fanlang 编译器的测试集，以 8 线程并行跑，大约需要 4 ~ 5 秒钟（挂钟时间），而在我的 early-2016 12-inch Retina Macbook 上面跑，5 线程并行，则需要 8 ~ 10 秒钟，差不多正好慢一倍。这完全可以接受啦，后者要轻太多了，很方便带出门。  
微博位置: 无
发布时间: 2016-12-27 06:38
点赞数: 15   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

375:fanlang 是我最近设计的专门用于实现 DSL 的 DSL。我们或许可以称之为 “meta DSL”。fanlang 在设计上主要吸收了 Perl 5、Perl 6、Parse::RecDescent 和 Pegex 文法描述语言中的许多元素。它是比较偏向于通用目的语言的 DSL，只是在文本处理和编译器构造方面有特别增强。fanlang 编译器可以生成独立的 OpenResty Lua 代码。未来也会考虑生成独立的 Perl 5 代码或者可以运行在 Web 浏览器中的 JavaScript 代码。                                 
微博位置: 无
发布时间: 2016-12-24 14:29
点赞数: 18   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

376:edgelang 是我为控制流密集型的网关类 Web 应用设计的 DSL 小语言。这是一种基于规则的语言，在设计上主要吸收了 Prolog 和 CLIPS 语言的许多思想和元素。我最近实现了这种小语言的编译器，可以生成独立的 OpenResty Lua 代码，并高效地运行在 OpenResty/LuaJIT 平台上。目前第一版的编译器是用 Perl 编写的，一共是 6999 行代码（除去空行和注释）。                                 
微博位置: 无
发布时间: 2016-12-24 14:18
点赞数: 21   转发数: 35   评论数: 11
发布工具: 微博 weibo.com

377:昨天意外地发现 perl 的 Pegex 语法解析框架会在 alternations 处回溯。于是我仔细检查了一下 edgelang 编译器的 Pegex 文法定义中存在回溯的地方，并改成不需要回溯的形式，然后 edgelang 编译器的整体编译速度有了很大的提升。使用几个真实业务的 Edge 语言源文件进行测试，编译速度有了近 54% 的提升。这种因为回溯引入的开销，不太容易从“火焰图”上面看出来。                                 
微博位置: 无
发布时间: 2016-12-24 14:05
点赞数: 12   转发数: 9   评论数: 1
发布工具: 微博 weibo.com

378:我昨天用上大学时（10 年前）编写的 UML::Class::Simple 模块自带的 umlclass.pl 命令行工具从 fanlang 编译器的文法引擎部分的 AST 节点类库自动生成了对应的 UML 类图（如下图）。原始的 SVG 格式的 UML 类图文件在这里：http://t.cn/RIxKlOg 我昨儿刚发布了 UML::Class:Simple 0.21 新版，包含了对 SVG 输出格式的支持。                  原图                             
微博位置: 无
发布时间: 2016-12-19 07:59
点赞数: 30   转发数: 19   评论数: 1
发布工具: 微博 weibo.com

379:昨天花了一百来行 Perl 代码写了一个小工具，叫 pgx2dot.pl，可以从类 BNF 文法定义生成 dot 图源码。dot 源可以进一步喂给 GraphViz 工具 dot 渲染出漂亮的语法结构示意图。箭头指向是语法元素之间的从属包含关系。比如下图中是 fanlang 语言的文法引擎部分的语法结构示意图。SVG 格式的原图在这里：http://t.cn/RIxoH65 那个 pgx2dot.pl 脚本的源码在这里：http://t.cn/RIxoH6t                  原图                             
微博位置: 无
发布时间: 2016-12-19 07:39
点赞数: 33   转发数: 47   评论数: 2
发布工具: 微博 weibo.com

380:在工程实践活动中，有两大魔障，一是浮躁而缺少耐心，二是名利熏心。我自己就非常害怕和具此魔障的工程师一起共事。这两样东西会像瘟疫一样快速地在团队乃至整个公司里面传播。我自己也需要保持时刻警醒   
微博位置: 无
发布时间: 2016-12-17 06:53
点赞数: 114   转发数: 66   评论数: 20
发布工具: 微博 weibo.com

381:opm 包安装工具刚刚支持 curl 的 http_proxy 和 https_proxy 环境变量了，方便那些需要 http 代理才能访问外网的场景。该特性会包含在下一个 OpenResty 发布中。感兴趣的同学可以直接使用 git 仓库里面的最新版本。更多细节请见官方文档：http://t.cn/RIc3NTU  
微博位置: 无
发布时间: 2016-12-17 04:54
点赞数: 12   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

382:昨天我发布了新的 openresty* 二进制 rpm 包，修复了 openresty-opm 包的依赖项列表（我们其实还依赖 curl, tar, gzip 这三个系统包），同时启用了标准的 ngx_http_geoip 模块。关于 OpenResty 官方 Linux 二进制安装包的更多细节，请见 http://t.cn/RtvZ26X 以及 http://t.cn/RtvZ26a 老用户记得用 yum update 命令或 dnf update 命令升级之。                                 
微博位置: 无
发布时间: 2016-12-16 09:01
点赞数: 20   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

383:Thibault Charbonnier 同学最近给 resty 命令行工具添加了 --shdict "NAME SIZE" 选项。这样 resty 工具可以方便地用于那些用到共享内存字典的 OpenResty 应用和库的单元测试啦！更多细节见 http://t.cn/RI50CJ0  
微博位置: 无
发布时间: 2016-12-16 03:32
点赞数: 10   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

384:IT 大咖说刚刚帮咱们整理好了 OpenResty Con 2016 大会的所有演讲视频。感兴趣的同学可以用手机扫描下图中的二维码查看。感谢 IT 大咖说的大力支持！  原图 
微博位置: 无
发布时间: 2016-12-14 11:56
点赞数: 37   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

385:我今天用 screenflow 软件对我昨天在 OpenResty Con 2016 大会上的分享视频编辑了一下，修正了头像经常挡住部分幻灯片内容的问题，同时提高了视频分辨率到 1080p。同时更新了官网上的 MP4 文件（http://t.cn/RIzD8Pa）和 YouTube 上发布的版本：http://t.cn/RIwMEmS 这是对 OpenResty 世界在 2016 年新进展的全面回顾和对 2017 年的展望。                                 
微博位置: 无
发布时间: 2016-12-11 08:40
点赞数: 46   转发数: 46   评论数: 3
发布工具: 微博 weibo.com

386:在我的 iMac 5K 的屏幕上面通过 vim 分出 6 个编辑窗口来 hack 代码，确实超爽。使用 gh, gj, gk, 和 gl 这四个我自定义的 vim 命令在不同窗口间飞速切换，非常方便。原先我习惯了本上的小屏幕，一般只分出 4 个 vim 窗口出来。需要命令行了，直接在 vim 里面 ! 一下。这就是我的日常 IDE   原图 
微博位置: 无
发布时间: 2016-12-09 09:33
点赞数: 86   转发数: 79   评论数: 43
发布工具: 微博 weibo.com

387:最近几天拿 Perl 写了一个递归下降的 parser generator，可以从 EBNF 文法定义，自动生成独立的纯 Lua 实现的 parser。生成的 Lua parser 只调用 OpenResty 提供的 ngx.re API。我刚刚用一个四则运算表达式语言作为例子（使用中缀运算符），我的文法引擎生成的 Lua 解析器处理一个 428K 的随机四则运算表达式，相比基于 Perl Pegex 的等价 parser 快了 57 倍。而我的生成器还没真正开始优化呢。                                 
微博位置: 无
发布时间: 2016-12-06 15:07
点赞数: 20   转发数: 26   评论数: 9
发布工具: 微博 weibo.com

388:我几个月前在 Lua Workshop 2016 聚会上的演讲视频终于出来了，主办方放在了 YouTube 上面：http://t.cn/RfeuDC9 当时使用的幻灯片 PDF 在这里：http://t.cn/RVXUaJb 我那次演讲的主题是“Optimizing Lua Applications forLuaJIT and OpenResty”  
微博位置: 无
发布时间: 2016-12-06 12:35
点赞数: 43   转发数: 36   评论数: 7
发布工具: 微博 weibo.com

389:刚刚给我老婆弄了一台最新款的不带 touch bar 的 13 英寸 Macbook Pro。感觉是一款很不错的本子。应该可以用个六、七年的，只要坚持不升级到大的 macOS 版本   
微博位置: 无
发布时间: 2016-12-06 08:46
点赞数: 31   转发数: 4   评论数: 16
发布工具: 微博 weibo.com

390:经常有朋友写信问我程序员的修炼之道。我一般会根据我自己的经验，提供两大建议：一是多读书，特别是好的英文原版图书，打好基础，建立起像样的知识体系；二是多参与开源项目的开发工作（参加开源社区的技术聚会其实并不重要），多结识良师益友，一起协同工作。这两样也适用于在校学生，包括中学生  在比较像样的公司的重要岗位上的工作经历，更多地是为了让自己能够清醒认识到工业级别上的技术挑战，避免变得像一些学院派的哥们那样天天飘在天上，还自我感觉超好。                                 
微博位置: 无
发布时间: 2016-12-02 09:55
点赞数: 95   转发数: 135   评论数: 25
发布工具: 微博 weibo.com

391:这两天给 OpenResty 的官方 yum 仓库添加了对 Fedora 25 和 Fedora rawhide 的支持，取消了对 Fedora 22 的支持。同时开启了一个带有中国大陆 CDN 加速的 yum 仓库源的镜像，即 openresty.org/yum/openresty/openresty/...，从中国大陆访问会快很多。更多细节请参见官方 yum 源的文档：http://t.cn/RtvZ26X                                 
微博位置: 无
发布时间: 2016-11-26 10:58
点赞数: 38   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

392:今天是我在 Cloudflare 公司工作的最后一天。感谢 Cloudflare 在过去 4 年半的时间里对我在 OpenResty 等开源项目上的工作的大力支持和赞助！我将继续不遗余力地领导和推进 OpenResty 事业向前发展！早日实现我们对 OpenResty 规划的宏伟蓝图！下面的几个月里我将继续生活在美国的旧金山湾区，以自由职业者的身份工作。                                 
微博位置: 无
发布时间: 2016-11-23 16:10
点赞数: 232   转发数: 84   评论数: 50
发布工具: 微博 weibo.com

393:OpenResty 1.11.2.2 正式版刚刚发布。源码包下载地址是：http://t.cn/R5qq7aA 完整的更动列表在这里：http://t.cn/RteHuqy 发布公告在这里：http://t.cn/RfIqTs4 这是第一个包含 opm 包管理工具和 lua-resty-limit-traffic 库的 OpenResty 正式版。我们官方的 Yum 二进制包的安装源也已经同步更新。感谢所有的贡献者和用户！                  原图                             
微博位置: 无
发布时间: 2016-11-18 09:25
点赞数: 21   转发数: 7   评论数: 6
发布工具: 微博 weibo.com

394:今年的 OpenResty Con 2016 大会的官网今天上线啦！新加了一个专门的大会域名 con.openresty.org，网址是：http://t.cn/RfVYoPo 欢迎大家报名参会！感谢 monkindey、王院生、温铭和朱德江等同学在大会官网搭建和布署上的努力和贡献！  原图 
微博位置: 无
发布时间: 2016-11-17 13:51
点赞数: 36   转发数: 36   评论数: 14
发布工具: 微博 weibo.com

395:程序语义的形式化证明是一个很深的主题，属于理论计算机科学的研究范畴。大学本科时，我自己实现过一个命令式编程语言的程序归一化系统，可以自动通过数学方法证明两个看似完全不同的程序，其语义在数学上是完全等价的。当时我的这个系统证明了大学课本上的所有相关例题。但我这个系统不能处理循环结构，因为自动推导“循环不定式”超出了我的能力范围。其实我至今很奇怪为什么我们学校的计算机专业本科教育为什么要开这么艰深的课，当时用的清华大学出版社的教材是错误百出，以至于我怀疑那本教材的作者自己都没有搞明白。当时的授课老师其实也是不清不楚的。                                 
微博位置: 无
发布时间: 2016-11-17 10:26
点赞数: 31   转发数: 39   评论数: 6
发布工具: iPhone SE

396:在微信朋友圈里看到有人拿 Java 的庞杂和繁复为例来批评面向对象编程，其实面向对象在合适的场景用起来会非常舒服，而很多人鼓吹的函数式编程在不合适的地方用起来也会很笨拙，甚至很恶心。不同的抽象方法都有其自己的适用场景，当没有现成的好的抽象时，我们就自己根据实际情况发明新的抽象。期望用一种抽象方法统一宇宙，注定是要失败的，在不适用的场景使用必然都会有一堆的缺点。过犹不及啊。                                 
微博位置: 无
发布时间: 2016-11-17 10:06
点赞数: 43   转发数: 47   评论数: 7
发布工具: iPhone SE

397:OpenResty 1.11.2.2 RC2 刚刚发布供社区公测。源码包下载地址是：http://t.cn/RfGC1M6 主要包含了对 RC1 发布中的 restydoc 文档的修复，对 opm 工具链的一些 bug 修复，以及默认开启了 LuaJIT 中的 Lua 5.2 扩展特性。更多细节请见发布公告：http://t.cn/RfGC1MX  原图 
微博位置: 无
发布时间: 2016-11-14 04:25
点赞数: 15   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

398:新入了一台 12 英寸的 Retina Macbook，感觉很爽。但发现预装了全新的 macOS 操作系统，很郁闷，包括 Squirrel 输入法在内的一些软件都不兼容，于是果断通过 Time Machine + Samsung T1 把我原来 iMac 上的 OS X El Capitan 系统，给完整克隆到了我的新本上   
微博位置: 无
发布时间: 2016-11-10 13:16
点赞数: 15   转发数: 22   评论数: 20
发布工具: 微博 weibo.com

399:NGINX 1.11.5 开始会自动根据系统情况开启 IPv6 支持，而不再需要用户显式地在 ./configure 命令里面指定 --with-ipv6 选项。这个好！  
微博位置: 无
发布时间: 2016-11-07 02:51
点赞数: 22   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

400:下一个版本的 OpenResty 源码包默认会开启 LuaJIT 的 Lua 5.2 兼容模式，这样可以享受完整的 goto 支持和其他一些新特性。但有些小地方不再向后兼容。细节见这里：http://t.cn/Rfh4M03 如果想自己禁用这个模式，可以在 ./configure 时指定选项 --without-luajit-lua52。大家对此有什么意见吗？  
微博位置: 无
发布时间: 2016-11-07 02:42
点赞数: 17   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

401:OpenResty 1.11.2.2 rc1 刚刚发布，欢迎大家试用和反馈。相关细节请见 OpenResty 邮件列表里的公告。这个版本在流量高峰之后的 nginx 进程的内存占用会有显著下降。同时包含了 opm 包管理工具和 lua-resty-limit-traffic 库，还有 ngx.re 模块里的 split() 函数。源码包在这里：http://t.cn/RVFEsrW  
微博位置: 无
发布时间: 2016-11-05 10:13
点赞数: 20   转发数: 9   评论数: 1
发布工具: iPhone SE

402:由于咱们的微信群“OpenResty技术交流”几周前就已经满员，我新开辟了“OpenResty 2 群”，欢迎大家在微信上加入这个 2 群（如果还没有加入 1 群的话）。未来如果 2 群再满了，我再建 3 群、4 群   原图 
微博位置: 无
发布时间: 2016-11-04 08:21
点赞数: 6   转发数: 11   评论数: 10
发布工具: iPhone SE

403:opm 现在支持 opm clean dist 命令了，可以清理 opm build 命令生成的临时文件和临时文件夹。感谢 zhuanyenan 贡献的补丁！  
微博位置: 无
发布时间: 2016-11-01 11:33
点赞数: 11   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

404:ngx_http_lua 模块中的 ssl_session_fetch_by_lua* 和 ssl_session_store_by_lua* 指令现在只允许在 nginx.conf 的 http {} 作用域中使用了。原先允许在 server {} 中使用是设计失误。这是因为 server name 分发这个操作其实发生在 SSL session resumption 之后。感谢德江同学贡献的补丁！  
微博位置: 无
发布时间: 2016-11-01 07:35
点赞数: 12   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

405:今天合并了 Mahsape 的工程师 Thibault Charbonnier 的补丁，现在 OpenResty 终于有原生的 ngx.re.split() 函数啦：http://t.cn/RVB2wm9 这个函数可以为 LuaJIT 所 JIT 编译。  
微博位置: 无
发布时间: 2016-11-01 07:30
点赞数: 20   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

406:刚刚发布的 15 英寸 MacBook Pro 看着有些馋。可惜去年新买的 mid-2015 的最高配的 Pro，只好再过几年再说了…  
微博位置: 无
发布时间: 2016-10-29 11:44
点赞数: 5   转发数: 17   评论数: 21
发布工具: iPhone SE

407:ngx_http_lua 模块刚合并了 helloyi 同学的补丁，现在暴露了一个公共的 C API，支持第三方 NGINX C 模块定义自己的基于共享内存的数据结构，供 Lua 代码调用。类似 lua_shared_dict，但接口和实现可以完全不同，比如可以搞 bloom filter、堆、skiplist、哈希表，甚至可以搞 lock free，随便玩。  
微博位置: 无
发布时间: 2016-10-29 07:38
点赞数: 12   转发数: 26   评论数: 5
发布工具: 微博 weibo.com

408:ngx_http_lua 模块的 TCP cosocket 对象现在有了新的 settimeouts() 方法，可以同时分别设置不同的连接超时、发送超时和接收超时的阈值。文档在这里：http://t.cn/RVR4Kq6 感谢德江同学贡献的补丁。  
微博位置: 无
发布时间: 2016-10-28 07:51
点赞数: 19   转发数: 7   评论数: 0
发布工具: 微博 weibo.com

409:今天我开源了 Cloudflare 在线上使用的 TLS session ticket key 自动全网轮转的代码，作为 ngx_http_lua_ssl 模块公开到了 GitHub 上面：http://t.cn/RVH0mLv 有兴趣的同学可以参考一下。目前文档和测试都比较缺失，后面得空了再慢慢补吧……欢迎提 pull request 和报告问题哈！  
微博位置: 无
发布时间: 2016-10-27 08:13
点赞数: 38   转发数: 16   评论数: 2
发布工具: 微博 weibo.com

410:今天在 GitHub 上面开源了 lua-resty-shdict-simple 库（http://t.cn/RVY3hQb ）和 lua-resty-memcached-shdict 库（http://t.cn/RVY3hQ4 ）。这两个针对 OpenResty 的 Lua 库都是两年前我为 Cloudflare 的 Lua CDN 业务系统开发的。欢迎大家帮忙 review 代码和反馈试用结果（为了开源作了些清理）。  
微博位置: 无
发布时间: 2016-10-26 08:29
点赞数: 23   转发数: 14   评论数: 3
发布工具: 微博 weibo.com

411:OpenResty 或许可以考虑未来发展自己的容器技术。就叫做 OpenResty Containers 好了   
微博位置: 无
发布时间: 2016-10-23 09:29
点赞数: 47   转发数: 5   评论数: 9
发布工具: 微博 weibo.com

412:Siftery 这家网站统计出有 2439 家客户公司正在使用 OpenResty: http://t.cn/RV0mmKB 还说是经过验证的。这个好厉害，不知道他们是如何统计和验证的……  原图 
微博位置: 无
发布时间: 2016-10-23 08:41
点赞数: 22   转发数: 25   评论数: 13
发布工具: 微博 weibo.com

413:今天刚刚开源了 lua-resty-multipart-parser 库到 GitHub: http://t.cn/RV0mWNZ 先前是为 Cloudflare 的 Lua WAF 实现的小东西。与现有的 lua-resty-upload 库的区别，它可以用于非流式处理的场景，比如可以用来解析通过 ngx.req.read_body() 读取的请求体数据。  原图 
微博位置: 无
发布时间: 2016-10-23 08:37
点赞数: 16   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

414:今天翻 GDB 的文档才注意到 GDB 现在除了支持通过 Python 来编写 GDB 扩展，还支持 Gile 这个 Scheme 语言的实现。回头比较一下 Gile 和 Python 两种方式，看看哪种更有优势一些。这种比较在我的 Y 语言编译器实现了之后，就比较容易做了。手写 GDB 扩展，不管是用 Python 还是 Scheme 都想吐血……  
微博位置: 无
发布时间: 2016-10-23 08:25
点赞数: 12   转发数: 15   评论数: 4
发布工具: 微博 weibo.com

415:刚在 Mozilla rr 的官方邮件列表里面看到 DigitalOcean 云服务支持 PMU 虚拟化：http://t.cn/zlloKc5 所以可以跑 rr。好厉害的样子。  
微博位置: 无
发布时间: 2016-10-22 08:36
点赞数: 4   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

416:今天在 GitHub 上面开源了 lua-tablepool 库：http://t.cn/RV9F6cD 实现了一个简单的 Lua table 池，可以循环使用大小和用法相尽的临时 Lua table，节约动态内存分配和 GC 的损耗。先前我在优化 Cloudflare 的 Lua WAF 时开发的 Lua 库。简单而有效。  原图 
微博位置: 无
发布时间: 2016-10-21 12:49
点赞数: 33   转发数: 35   评论数: 5
发布工具: 微博 weibo.com

417:美国有的政府网站做得实在太业余了，注册之后，直接把我注册的帐户密码明文放在发给我的电子邮件中。幸好我有先见之明，从不用敏感密码   
微博位置: 无
发布时间: 2016-10-19 08:01
点赞数: 14   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

418:最近受邀去 Pinterest 公司给他们的工程团队作了一场 OpenResty 的分享，讲得很尽兴。不受幻灯片的束缚，就可以天马行空地喷了。给我一块白板就够了，而且越大越好。记得先前我去 Apigee 公司给他们的工程师分享时，也是一整面墙的白板供我画，太爽了，那次我一口气喷了两个小时。一定要讲得尽兴才好。  
微博位置: 无
发布时间: 2016-10-19 04:39
点赞数: 40   转发数: 10   评论数: 3
发布工具: 微博 weibo.com

419:刚刚终于在 Lua Workshop 2016 聚会上讲完我的 talk 了。一讲到优化主题，我就超兴奋，毕竟把东西做花哨总是想对容易的，而既要花哨又要高性能，就需要真功力了。80 多张幻灯 40 分钟讲完，超了 10 分钟。讲的过快就容易出英语语法错误了   原图 
微博位置: 无
发布时间: 2016-10-15 07:15
点赞数: 97   转发数: 72   评论数: 14
发布工具: iPhone SE

420:最近是火星热啊，SpaceX，波音，奥巴马，都在说载人登火，乃至火星移民…  
微博位置: 无
发布时间: 2016-10-12 13:25
点赞数: 2   转发数: 0   评论数: 3
发布工具: iPhone SE

421:刚刚才注意到 Travis CI 服务支持在 Mac OS X 上面跑测试了，好赞。加上 AppVeyor 服务在 Windows 上回归。OS 覆盖就真的很赞了。  
微博位置: 无
发布时间: 2016-10-12 09:20
点赞数: 5   转发数: 10   评论数: 1
发布工具: iPhone SE

422:Lua Workshop 2016 大会将于下周在旧金山举行：http://t.cn/RVw7kiY 我将会作一个题为“Writing optimal Lua code for LuaJIT & OpenResty”的分享。Lua 的原作者之一、Lapis/MoonScript 的作者、LuaRocks 的作者、还有 LuaJIT 的作者原来钦定的接班人等等都会前来，我也正好见一见。欢迎大家也来哈。  原图 
微博位置: 无
发布时间: 2016-10-07 08:08
点赞数: 43   转发数: 23   评论数: 7
发布工具: 微博 weibo.com

423:容器技术很赞，但 Docker 很烂。Docker 在错误的道路上越走越远。对于 Docker 现在走的 unikernel 的方向，连 Joyent 的大佬都实在看不下去了：http://t.cn/Rb8UIW3 看来 Docker 世界里聚集了太多不懂系统的孩子，他们的“驼鸟策略”让大佬们都愤怒了。Docker 最早的盟友 CoreOS 也早不跟着一起玩了。  
微博位置: 无
发布时间: 2016-10-07 07:06
点赞数: 40   转发数: 185   评论数: 20
发布工具: 微博 weibo.com

424:正在公司附近散步，突然头顶一架战斗机呼啸而过，看了一眼，感觉有点像 F-18 大黄蜂…  
微博位置: 无
发布时间: 2016-10-07 05:28
点赞数: 13   转发数: 9   评论数: 11
发布工具: iPhone SE

425:我们 OpenResty 的社区包管理网站 opm.openresty.org 上线以后，第一位上传原创 OpenResty Lua 库的社区贡献者是赵全同学。为了兑现我原先的诺言，刚刚已代表 OpenResty 官方，奖励赵全同学 500 元人民币。发钱的感觉真棒。以后咱们还可以评选 OPM 年度最佳贡献奖   原图 
微博位置: 无
发布时间: 2016-10-06 13:18
点赞数: 52   转发数: 7   评论数: 3
发布工具: 微博 weibo.com

426:刚注意到 Ubuntu 16.04 官方仓库还给 OpenResty 的三个 lua-resty-* 库提供了 deb 包。但他们把我的库前缀给改了，lua-resty- 前缀变成了 lua-nginx- 前缀。同时把我的 Lua 模块的名字空间也给改了，比如 resty.redis 生生被改成了 nginx.redis，太不靠谱了……这不是鼓励大家写不兼容的 Lua 代码么？  [组图共2张] 原图 
微博位置: 无
发布时间: 2016-10-05 06:09
点赞数: 10   转发数: 16   评论数: 6
发布工具: 微博 weibo.com

427:昨晚上顺手给 ngx_http_lua 模块的共享内存字典的存储结构作了一个小优化，让每个 key value pair 的元数据的空间占用，在 64 位系统上减小了 8 个字节。最初在写这一块时没有太在意 padding 的问题。补丁在这里：http://t.cn/RVvXiO2 这意味着固定大小的共享内存字典如今可以存储更多的用户数据了。  
微博位置: 无
发布时间: 2016-10-04 01:28
点赞数: 28   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

428:我刚刚给 ngx_lua 模块准备了一个补丁，添加了 lua_malloc_trim 这条新的配置指令。该指令会在 nginx 每处理 N 个请求之后，自动调用 glibc 的 malloc_trim() 函数。这个新功能应该能显著降低流量高峰以后 nginx worker 进程的(RSS)内存占用。http://t.cn/RcFrjH7 欢迎大家帮忙评审代码和试用。多谢！  
微博位置: 无
发布时间: 2016-10-03 06:54
点赞数: 31   转发数: 16   评论数: 2
发布工具: 微博 weibo.com

429:书鑫老师先前弄了一个独立的最小化的 C 程序来演示 glibc 内存分配器行为的一些细微方面，主要是和 OpenResty/LuaJIT 相关的细节。我又自己做了一些修改，使它的自动化程度更高一些。大家可以自己改一改，玩一玩：http://t.cn/RcFEkUB 当然了，只能在 Linux + glibc 上面跑哈。祝玩得开心   
微博位置: 无
发布时间: 2016-10-03 02:49
点赞数: 20   转发数: 53   评论数: 3
发布工具: 微博 weibo.com

430:鉴于前面的这些关于 glibc 内存分配器行为的讨论，我们将在ngx_lua模块中引入一个 lua_malloc_trim 配置指令，让用户自己配置每一个 nginx worker进程在处理了多少请求后就调用 malloc_trim 来释放 glibc 中缓存的空闲内存给操作系统（及保留多少空闲内存作备用）。默认是每处理一千请求，就释放一次。  
微博位置: 无
发布时间: 2016-10-02 12:46
点赞数: 16   转发数: 5   评论数: 0
发布工具: 微博 weibo.com

431:即使是 glibc 通过 brk 系统调用来分配的内存，free() 了绝大部分内存块也不一定能保证这些内存能立即还给操作系统，比如当接近“堆”顶部的位置上有一个尚未 free 的内存块时，brk 释放内存的调用也会失败，因为只能从顶部来释放，就像栈一样。此时，malloc_trim 又可以解决问题，万能的 madvise 啊！  
微博位置: 无
发布时间: 2016-10-02 12:36
点赞数: 9   转发数: 22   评论数: 5
发布工具: 微博 weibo.com

432:强迫 program break 停止生产，目前的 glibc 实现会产生两个副作用。一是每次 malloc 时，如果没有空闲块可用的话，会多一次 mmap 调用，而原先调的两次 brk 也省不了，因为 glibc 总是会先尝试 brk，不行才换用 mmap；二是 free 的时候，gibc 仍只尝试用 brk 来释放内存，导致内存不能还给操作系统。  
微博位置: 无
发布时间: 2016-10-02 12:28
点赞数: 1   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

433:在x86_64上面，为了把尽可能多的低 2GB 的地址空间留给 LuaJIT 的 GC 管理的内存分配器，ngx_lua 模块中使用 mmap(sbrk(0)) 让数据段里的“堆”，即所谓的 program break，停止生长。这样 glibc 的分配器便不能再使用 brk() 系统调用来分配较小块的内存，而不得不换用 mmap(). 这是书鑫老师的想法。  
微博位置: 无
发布时间: 2016-10-02 12:25
点赞数: 15   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

434:今天发现 VMWare Fusion 8.5 可以免费升级，好高兴。这还是 VMWare 头一次不收升级费：http://t.cn/Rce9NVg  
微博位置: 无
发布时间: 2016-10-01 11:12
点赞数: 13   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

435:opm.openresty.org 这个包服务器本身也是基于 OpenResty/Lua 来实现的，后面直接是 PostgreSQL 数据库。源码也开源在了 GitHub 仓库 opm 里面，见 http://t.cn/RceMPCq 包括使用 SMTP/TLS 协议自动发错误报告邮件给包作者的功能。这可以作为一个 OpenResty 的 demo 应用，嘿嘿。当然目前还比较粗糙。  
微博位置: 无
发布时间: 2016-10-01 09:06
点赞数: 12   转发数: 20   评论数: 4
发布工具: 微博 weibo.com

436:有朋友问我如何提高英语水平。我自己的经验是，大量精读文笔好的英文文章和图书，特别是美国这边的原版教材，不一定是计算机类的。我大一时读的 University Physics 和 Calculus 这些教材的文笔都极好，特别是前者。遇到生词查一查，特别是读音。多多朗读出来，必要时手抄。搞他个几本砖头书，不好才怪  
微博位置: 无
发布时间: 2016-10-01 03:42
点赞数: 52   转发数: 149   评论数: 16
发布工具: 微博 weibo.com

437:BoringSSL 自搞一套和 OpenSSL 不兼容的 API，让 nginx 和 openresty 这样的应用兼容起来真的很烦。见 nginx-devel 列表里的相关讨论：http://t.cn/RceAhXI 以及 http://t.cn/RceAhXM 这也是我很不喜欢开源项目的 fork 的一大原因。  
微博位置: 无
发布时间: 2016-10-01 03:18
点赞数: 5   转发数: 33   评论数: 6
发布工具: 微博 weibo.com

438:刚刚把 OpenResty 官方的社区包管理网站，opm.openresty.org，给推上线了。我们的包管理工具叫做 opm，功能上和 Perl 的 cpan 比较类似。欢迎大家上传自己的 OpenResty Lua 库。除了我以外，第一位上传自己的 Lua 库并成功为服务器索引的同学，我有奖励，哈哈！工具的文档在这里：http://t.cn/RcBgpru  原图 
微博位置: 无
发布时间: 2016-09-29 10:46
点赞数: 45   转发数: 28   评论数: 9
发布工具: 微博 weibo.com

439:OpenResty 又帮助一家老外的创业公司，成功地把公司给卖掉了   原图 
微博位置: 无
发布时间: 2016-09-28 09:52
点赞数: 87   转发数: 28   评论数: 7
发布工具: iPhone SE

440:最近一直在搞 opm，即 OpenResty 官方的包管理系统：http://t.cn/RcEbSoi 在功能上类似 perl 的 cpan 和 nodejs 的 npm。还在开发中，准备包含在下一个 OpenResty 发布中。欢迎大家反馈意见和建议！  
微博位置: 无
发布时间: 2016-09-25 23:36
点赞数: 36   转发数: 14   评论数: 6
发布工具: iPhone SE

441:貌似后面还得把 agentzh.org 域名的权威 DNS 服务器也切换到我的 OpenResty DNS server 上面来。别人维护的权威 DNS 服务器貌似还是不够靠谱……至少出了问题也不好自己尝试解决。这年头，控制力是第一位的……  
微博位置: 无
发布时间: 2016-09-25 12:47
点赞数: 16   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

442:今天把 OpenResty 官方 yum 仓库里的 openresty-openssl* 包升级到了最新发布的 OpenSSL 1.0.2i. 建议所有的生产用户升级之。直接使用 yum clean expire-cache && yum update 命令即可（Fedora 用户把 yum 换成dnf 就好了）。关于 OpenResty 官方 yum 仓库的更多信息，请见 http://t.cn/RtvZ26X  
微博位置: 无
发布时间: 2016-09-25 07:53
点赞数: 17   转发数: 10   评论数: 3
发布工具: 微博 weibo.com

443:很高兴地看到，我的好几个 CloudFlare 前同事，像种子一样，把 OpenResty 带到了他们的新东家。其中有前端开发，有后端开发，还有 ops :)  
微博位置: 无
发布时间: 2016-09-25 07:47
点赞数: 39   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

444:今天上班路上正在等 Caltrain，过来一个老外问路，然后随便聊了起来，原来他刚从纽约附近的一所大学毕业，现在在湾区找工作。后来聊到我的开源项目，我一说 OpenResty，他立马惊呼“OpenResty! I've heard about it! Wow, it's you!” 好高兴连路人都听说过。  
微博位置: 无
发布时间: 2016-09-24 02:04
点赞数: 149   转发数: 11   评论数: 17
发布工具: iPhone SE

445:祝贺咱们的“OpenResty技术交流”微信群刚刚满员 [Grin]  原图 
微博位置: 无
发布时间: 2016-09-22 23:16
点赞数: 4   转发数: 0   评论数: 8
发布工具: iPhone SE

446:“WTF is OpenResty? The world's fifth-most-used Web server, that's what!” http://t.cn/RcOOS5w 这篇文章有点搞笑…  
微博位置: 无
发布时间: 2016-09-21 01:00
点赞数: 16   转发数: 11   评论数: 4
发布工具: iPhone SE

447:正在犹豫要不要入手一个 12 寸的“New MacBook”，貌似很适合在户外干些较轻的活儿（重活儿肯定得上 MacBook Pro 了）。  
微博位置: 无
发布时间: 2016-09-12 13:34
点赞数: 14   转发数: 4   评论数: 10
发布工具: 微博 weibo.com

448:美国的 party 貌似都巨吵。昨晚参加了 nginx 大会的 VIP 接风 party，面对面聊天都是要用吼的。最后 nginx 的老大 Igor Sysoev 干脆把我单独拉到室外聊天。和 nginx 的看门人 Maxim Dounin 调侃了一下他和 Piotr Sikora 在邮件列表里无休无止的讨论，他表示很无奈，哈哈。  
微博位置: 无
发布时间: 2016-09-08 08:47
点赞数: 48   转发数: 5   评论数: 18
发布工具: iPhone SE

449:Austin 果然好热。热的我都不想出门。还是大湾区好啊，可以一年四季从早到晚待在山林里面。我已经不适应分明的四季了…  
微博位置: 无
发布时间: 2016-09-08 08:41
点赞数: 6   转发数: 2   评论数: 2
发布工具: iPhone SE

450:到了 Austin 才发现没有 Uber，哭的心都有啊。还是老老实实租车开了。等公交实在有点伤不起…Austin 的公交司机还是挺好的，看我没有 quarter，直接免了。  
微博位置: 无
发布时间: 2016-09-08 08:36
点赞数: 5   转发数: 0   评论数: 1
发布工具: iPhone SE

451:东拼西凑地，终于搞定我明天 nginx 大会演讲用的幻灯片了。忙了一天，弄了 80 张幻灯，需要在 50 分钟内讲完，哈哈！  
微博位置: 无
发布时间: 2016-09-08 07:51
点赞数: 63   转发数: 61   评论数: 15
发布工具: 微博 weibo.com

452:发现一些 nginx 和 openresty 用户在用 ab 这样的工具压测性能时，都不看 nginx 错误日志的。经常因为这些用户自己的配置错误或 Lua 代码错误，而导致 nginx 疯狂地刷错误日志文件。错误日志的输出是文件 I/O，而且还是不带写缓冲的（显然地）。所以他们测出来的性能其实是刷错误日志的性能。无语啊。  
微博位置: 无
发布时间: 2016-08-31 08:16
点赞数: 36   转发数: 96   评论数: 8
发布工具: 微博 weibo.com

453:下个月 8 号，我将在 nginx.conf 2016 大会上作一个演讲，关于使用领域内小语言（DSL）来构建基于 OpenResty 的复杂业务系统。演讲的主页在这里：http://t.cn/RchpVtM 欢迎美国 Austin 及附近的哥们姐们过来捧场哈！  原图 
微博位置: 无
发布时间: 2016-08-31 06:43
点赞数: 76   转发数: 17   评论数: 4
发布工具: 微博 weibo.com

454:根据 Google Analytics 的统计，openresty.org 官网的访客，按所在城市排名，前几名是：1. 北京，2. 上海，3. 深圳，4. 佛山。佛山排第四名有些让我意外。这里有来自佛山的 OpenResty 用户吗？喊一噪子看看？哈哈？  
微博位置: 无
发布时间: 2016-08-31 06:39
点赞数: 10   转发数: 9   评论数: 19
发布工具: 微博 weibo.com

455:我的同事 Marek Vavruša 最近写了一个小巧的编译器，可以把 LuaJIT 的字节码转换为 ebpf 字节码，从而为 Linux 内核的 ebpf 虚拟机运行（可以在内核里面解释执行，也可以 JIT 成机器码）。他的代码开源在了 GitHub 上面：http://t.cn/Rtktb9x Marek 同学非常内秀，说话细声细气的，像大姑娘，哈哈！  
微博位置: 无
发布时间: 2016-08-27 11:09
点赞数: 15   转发数: 36   评论数: 5
发布工具: 微博 weibo.com

456:OpenResty 官方的 RPM 包今天又进行更新，现在总是启用 LuaJIT 的 dual-number mode（即双数值类型模式），让 Lua number 类型可以根据上下文来自动选择 64 位浮点数和 32 位整数这两种不同的表示。对于 OpenResty 上运行的大多数 Web 应用而言，双数模式即使是在 x86 和 x64 上一般性能也会更高一些。  
微博位置: 无
发布时间: 2016-08-27 08:35
点赞数: 18   转发数: 2   评论数: 19
发布工具: 微博 weibo.com

457:OpenResty 1.11.2.1 正式版刚刚发布。下载地址是：http://t.cn/R5qq7aA 更动列表在这里：http://t.cn/RteHuqy 发布公告在这里：http://t.cn/RteHuqU OpenResty 官方提供的 Win32 和 Linux 二进制包已经同步更新。感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2016-08-26 11:03
点赞数: 35   转发数: 16   评论数: 10
发布工具: 微博 weibo.com

458:在旧金山的一个好处是见人比较方便，经常可以见到一些激情四射的创业者和工程师，感觉超级棒。方便见世界各地的圈内人。  
微博位置: 无
发布时间: 2016-08-25 04:04
点赞数: 18   转发数: 11   评论数: 2
发布工具: 微博 weibo.com

459:旧金山这边城里随地解手的 homeless people 真多。走在大街上经常臭烘烘的…  
微博位置: 无
发布时间: 2016-08-25 01:58
点赞数: 12   转发数: 1   评论数: 16
发布工具: iPhone SE

460:在一位社区贡献者的帮助下，OpenResty 的官方 RPM 包刚刚有了一轮重构。现在 openresty 包里的 zlib 和 pcre 也独立出来作为新的 RPM 包，即 openresty-zlib 和 openresty-pcre. 按照 RPM 的精神，咱们也尽量打小包。欢迎大家升级使用（一般直接 yum update 或者 dnf update 一下就有了）。  
微博位置: 无
发布时间: 2016-08-24 13:44
点赞数: 7   转发数: 9   评论数: 6
发布工具: 微博 weibo.com

461:最近买了 Seagate 的 Backup Plus Desktop Thunderbolt Adapter，希望和我的 Samsung 850 Pro 一起用时，Thunderbolt 接口的性能可以比 USB 3.0 提高一些。但没想到今天到货后，实测结果明显不及我已有的 SATA 3 -> USB 3.0 的转接线。退货退货……  
微博位置: 无
发布时间: 2016-08-23 13:42
点赞数: 4   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

462:发现 Apple Store 里的 Breaktime 这款应用很赞，以后干活时都用它来提醒我休息。把每天的工作时间按 30 分钟进行分割，杜绝过劳  之前我都是用 cronjob 来调用 lock screen 命令，或者用手机来定时，都不够智能。  
微博位置: 无
发布时间: 2016-08-23 13:36
点赞数: 13   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

463:最近我下载了 Maxmind 公司最新的 GeoLite2 Country 和 GeoIP2 Country 这两个数据库。前者是免费的，精度较差；而后者是收费的，据说精度较高。简单地比较了二者的二进制 .mmdb 文件，发现免费的有 19MB，而收费的却只有 7.7MB. 精度高的数据库难道不应该数据更多一些吗？奇怪……  
微博位置: 无
发布时间: 2016-08-23 13:28
点赞数: 4   转发数: 6   评论数: 11
发布工具: 微博 weibo.com

464:我上周末已经把 openresty.org 官网的权威 DNS 服务器从 dnspod 迁移到我自己基于 OpenResty 编写的 Lua DNS server 了。源码目前很脏很乱，放在了 stream-lua-nginx-module 这个 GitHub 公共仓库的 bloody-dns-server 分支里面，有兴趣的朋友可以看一眼，如果能提 pull request 就更好啦！先谢啦！  
微博位置: 无
发布时间: 2016-08-23 13:11
点赞数: 17   转发数: 19   评论数: 5
发布工具: 微博 weibo.com

465:前一阵子国内一个好友过来玩，我陪他去 Facebook 总部拍照，结果找了半天，也没找到像样的 Facebook 字样的牌子……实在太低调了。我们还去了 Yahoo! 总部拍告别照，刚要在那块 Yahoo! 的大牌子前留影，发现旁边有一个警示牌，说联邦法律禁止在此摄影摄像。好吧，原来旁边就是美国的军工企业……  
微博位置: 无
发布时间: 2016-08-23 04:43
点赞数: 6   转发数: 5   评论数: 9
发布工具: 微博 weibo.com

466:发现 Google 美国的招聘团队有轮转机制，每个季度都会有不同的人给我写邮件，问我最近有没有想换工作，或者贴一些相关团队牛人的公开分享链接之类的给我看。Facebook 貌似也有类似的机制，但没有 Google 那么固定。  
微博位置: 无
发布时间: 2016-08-23 04:29
点赞数: 9   转发数: 30   评论数: 2
发布工具: 微博 weibo.com

467:记得 2009 年一天，我被拉去接受当时阿里云的两个中高级管理者的面试。其中一个哥们当着我的面，喊出了“我们全面抵制开源，我们全面禁止开源”的口号。恶心死我了。现在七年过去了，我知道的阿里云还是广泛地使用了各种开源软件和开源技术。所以说，开放和分享是大势所趋，不以个人意志为转移   
微博位置: 无
发布时间: 2016-08-23 04:16
点赞数: 49   转发数: 76   评论数: 33
发布工具: 微博 weibo.com

468:发现工作效率不断提高的直接后果就是每天的工作时间不断减少。或许是“能量守恒定律”在起作用吧…  
微博位置: 无
发布时间: 2016-08-18 13:18
点赞数: 11   转发数: 11   评论数: 5
发布工具: iPhone SE

469:这两天给 ngx_stream_lua 模块添加了 UDP server 支持。并在上面用纯 Lua 写了一个简单的 DNS 服务器。用 dnsperf 简单压测了一下，单个 nginx worker 进程在我的 linux 虚机里可以达到 11 万多 qps，感觉还行。还有不少优化空间。后面准备用它来跑 openresty.org 域名的“权威 DNS 服务器”。  原图 
微博位置: 无
发布时间: 2016-08-18 08:12
点赞数: 61   转发数: 61   评论数: 18
发布工具: 微博 weibo.com

470:OpenResty 1.11.2.1 RC1 刚刚释出供社区公测。源码包下载地址是：http://t.cn/RtHHCGP Win32 二进制包在这里：http://t.cn/RtHHCbs 发布公告在这里：http://t.cn/RtHHCbF 包含太多新特性了，比如共享内存队列、SSL session 分布式缓存支持等等。欢迎大家测试和反馈！感谢所有的贡献者！  原图 
微博位置: 无
发布时间: 2016-08-16 13:55
点赞数: 22   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

471:我们的 Test::Nginx 自动化测试台现在有了 Test::Nginx::Socket::Lua::Dgram 模块，可以对 nginx UDP/datagram 服务器进行回归测试了，比如 ngx_stream_echo 模块的代码仓库中的这个测试文件：http://t.cn/RtlY9TO 感谢 Shine Technologies 的 CTO，Alon Blayer-Gat 同学的贡献。  
微博位置: 无
发布时间: 2016-08-13 13:06
点赞数: 16   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

472:今天上班期间一不小心累计步行了快 10 英里了…晚上再去游泳…  原图 
微博位置: 无
发布时间: 2016-08-13 08:15
点赞数: 20   转发数: 1   评论数: 1
发布工具: iPhone SE

473:我晕，我在 Amazon 上面买了一个 2TB 的 850 Pro SSD 硬盘，结果今天收到的包裹里竟是 512GB 的。郁闷，还得退货……  
微博位置: 无
发布时间: 2016-08-12 08:32
点赞数: 15   转发数: 0   评论数: 12
发布工具: 微博 weibo.com

474:准备入一个 iPhone SE，把我的 iPhone 5S 淘汰掉…发现还是喜欢小尺寸的。  
微博位置: 无
发布时间: 2016-08-08 14:42
点赞数: 21   转发数: 1   评论数: 22
发布工具: iPhone 5s

475:Nginx 官方终于把 accept_mutex 默认关闭了。以后不用再专门配置了。打开它时对 nginx 的并发性能经常有负面影响，而且还挺大。  
微博位置: 无
发布时间: 2016-08-08 14:36
点赞数: 21   转发数: 26   评论数: 8
发布工具: iPhone 5s

476:OpenResty 其实有一个中文名字，叫做鸥锐。咱们 OpenResty 图标里的那只疯狂的小鸟其实就是取的中文名里的意义   原图 
微博位置: 无
发布时间: 2016-08-07 10:53
点赞数: 54   转发数: 16   评论数: 7
发布工具: 微博 weibo.com

477:ngx_lua 模块现在支持共享内存列表了，既能当队列使，也能当栈使。直接沿用了 redis 的 API 名字，但是我们自己全新实现的，纯共享内存操作，不涉及任何系统调用。文档在这里：http://t.cn/RtSnUsr 感谢朱德江同学的贡献！已经有生产用户基于这个特性，结合 ngx.semaphore 实现 C1000K 的推送服务了。  
微博位置: 无
发布时间: 2016-08-06 08:09
点赞数: 23   转发数: 58   评论数: 11
发布工具: 微博 weibo.com

478:Linux 的 eBPF 有一个 eBPF 字节码验证器，会检查字节码中是否有向后跳的指令，以禁止类似循环的控制流。一旦发现这种指令用法，就会报告“back-edge from insn N to M”的错误。这个非常郁闷，这意味着 eBPF 不是图灵完全的。仅是这一点限制，绝大多数我基于 systemtap 写的调试工具都无法移值过来。  
微博位置: 无
发布时间: 2016-08-01 12:46
点赞数: 6   转发数: 19   评论数: 12
发布工具: 微博 weibo.com

479:ngx_lua 模块的共享内存字典的 incr() 方法现在支持可选的 init 参数了，可以在 key 不存在时自动用 init 参数的值初始化。这个特性最初的需求来自 lua-resty-limit-traffic 库 [Grin] 感谢德江的贡献！  
微博位置: 无
发布时间: 2016-07-31 08:40
点赞数: 12   转发数: 3   评论数: 0
发布工具: iPhone 5s

480:OpenResty 官网终于把新 logo 用上了，包括页面 banner 和 favicon 两处：OpenResty - Scalable Web Platform based on NGINX 感谢王院生贡献的补丁！  原图 
微博位置: 无
发布时间: 2016-07-30 10:03
点赞数: 35   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

481:这是肿么了……连 Amazon EC2 的 console 页面都登录不了了……  原图 
微博位置: 无
发布时间: 2016-07-30 09:31
点赞数: 2   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

482: ngx_lua_upstream 模块现在支持新的 Lua API 函数，current_upstream_name()，可以获取当前请求实际使用的 upstream 的名字。文档在这里：http://t.cn/RtcDjqz 感谢 Justin Li 贡献的补丁！其实 code review 的过程也是培养潜在的开源协作者的过程  这也是我为什么不遗余力地作 code review.  
微博位置: 无
发布时间: 2016-07-29 09:44
点赞数: 23   转发数: 7   评论数: 0
发布工具: 微博 weibo.com

483:lua-resty-redis 库现在支持按需自动生成 Lua 方法。用户尝试使用的任何 Redis 命令，包括自定义 Redis 命令或者未来版本的 Redis 服务器新增的命令，都可以自动生成对应的 Lua 函数，并在 Lua 模块表里加以缓存（这样后续再调用同一个方法就会快得多）。感谢罗泽轩贡献的补丁！这正是动态语言的力量。  
微博位置: 无
发布时间: 2016-07-29 09:40
点赞数: 18   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

484:lua-resty-dns 库刚刚支持解析 DNS 响应中的 NS 和 AR 段里的记录了：http://t.cn/RttjRRz 感谢 zekai 提的补丁！  
微博位置: 无
发布时间: 2016-07-28 13:49
点赞数: 4   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

485:对于社区贡献者提的比较大的补丁，我喜欢用我的 txt2pdf 工具从 git diff master 出来的补丁文件生成 PDF 文档，然后传进我的 Sony Digital Paper 里面慢慢审查。相比直接在屏幕上面 review 经常可以发现很多重要的细节问题。我的同事书鑫老师则喜欢直接在屏幕上面看 diff. 各有所好，嘿嘿。  
微博位置: 无
发布时间: 2016-07-28 13:28
点赞数: 10   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

486:正在 GitHub 上面热火朝天地评论社区贡献者提的 pull request，结果 GitHub 挂了……真扫兴……  原图 
微博位置: 无
发布时间: 2016-07-28 13:21
点赞数: 7   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

487:感谢张代冬老师给 OpenResty 贡献的 logo 设计，我很喜欢   原图 
微博位置: 无
发布时间: 2016-07-28 10:38
点赞数: 56   转发数: 9   评论数: 16
发布工具: 微博 weibo.com

488:终于把 OpenResty 在 GitHub 几乎所有重要的项目仓库都添加进 Travis CI 回归列表中来了：http://t.cn/RtqNO3j 好长的项目列表  这样，这些项目中的每一个 commit，包括社区贡献者的 pull request 都会自动触发回归测试，很爽。  
微博位置: 无
发布时间: 2016-07-27 08:38
点赞数: 44   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

489:下一个版本的 OpenResty 将是  1.11.2.1，会包含最新的 NGINX 主线版 1.11.2. 我正在我布署在 AWS 上面的测试集群中，全面回归测试新的 NGINX 核心。  
微博位置: 无
发布时间: 2016-07-24 12:20
点赞数: 38   转发数: 7   评论数: 6
发布工具: 微博 weibo.com

490:中文版的 OpenResty 官方 Linux 安装包的文档刚刚上线：http://t.cn/RtAeV1X 以及 http://t.cn/RtAeV16 感谢温铭同学的翻译工作！  
微博位置: 无
发布时间: 2016-07-22 08:20
点赞数: 29   转发数: 20   评论数: 16
发布工具: 微博 weibo.com

491:我刚刚开源了 ngx_lua 模块的 ssl_session_fetch_by_lua* 和 ssl_session_store_by_lua* 指令，作为两个 pull request: http://t.cn/RtAdUfe 和 http://t.cn/RtAdUfk 渲染之后对应的文档在这里：http://t.cn/RtAdUIv 以及 http://t.cn/RtAdUfg 感谢林孜的开发工作和 CloudFlare 的支持和贡献。  原图 
微博位置: 无
发布时间: 2016-07-22 07:34
点赞数: 24   转发数: 33   评论数: 4
发布工具: 微博 weibo.com

492:Fedora COPR 的 build 服务还是挺不错的，只是不要赶上 Fedora 自己一堆的包在上面 build，那我的 build job 就会延误好几个小时。官方的技术支持回复也很快，昨儿遇上 build server 上面的硬盘问题，很快就回复并恢复了。  
微博位置: 无
发布时间: 2016-07-16 13:08
点赞数: 2   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

493:Comcast 使用我自己买的 300Mbps 上限的 modem，带宽实测最多是 30 Mbps，而使用 Comcast 自己的 $150 的破 modem，可以轻松达到 80+ Mbps. 调试了半天，深深怀疑是 Comcast 故意设了这个上限，逼我买他们的死贵死贵的猫……  
微博位置: 无
发布时间: 2016-07-16 13:03
点赞数: 1   转发数: 20   评论数: 12
发布工具: 微博 weibo.com

494:刚刚我把 Lemplate 作为 perl-Lemplate 包，也添加进了 OpenResty 官方的 yum 安装包仓库。Lemplate 是一个编译器，可以把 perl TT2 语法的模版文件编译为独立的 OpenResty Lua 模块。比如 OpenResty 官网的所有页面都是用 Lemplate 编译的。文档可以参见 http://t.cn/RtPJcbn  
微博位置: 无
发布时间: 2016-07-16 05:22
点赞数: 16   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

495:这几天借用 Fedora 的 Copr 服务，搞了一个 OpenResty 官方的 Linux RPM 包仓库：http://t.cn/R5FgjgZ 目前里面有 OpenResty 1.9.15.1 和 Test::Nginx 0.25 的安装包。针对 CentOS 5/6/7, RHEL 5/6/7 和 Fedora 22/23/24 这些 Linux 系统。体系结构覆盖了 i386 和 x86_64. 欢迎大家试用和反馈！  原图 
微博位置: 无
发布时间: 2016-07-14 08:04
点赞数: 21   转发数: 31   评论数: 5
发布工具: 微博 weibo.com

496:今天又为我的《OpenResty 编程一书》新写了一节：“Naive Memory Leak Check Mode”，介绍了我的 Test::Nginx 测试框架的很傻很天真的内存泄漏测试模式，可以发现 Valgrind 无法检测到的一大类的内存泄漏问题，包括 GC 管理的内存和内存池里的泄漏：http://t.cn/R5Dxze7 有例有图有真相。欢迎反馈！  [组图共2张] 原图 
微博位置: 无
发布时间: 2016-07-12 06:00
点赞数: 38   转发数: 24   评论数: 4
发布工具: 微博 weibo.com

497:最近  ngx.ssl 模块新增了一系列 Lua 函数，可以直接从 PEM 格式的 SSL 证书和私钥解析出 cdata 结果，同时可以直接为当前的 SSL 会话设置 cdata 形式的证书和私钥，这样我们可以在 ssl_ceritificate_by_lua* 中直接通过 resty.lrucache 模块缓存 cdata，节约了每次 SSL 握手解析 DER 格式的损耗。  
微博位置: 无
发布时间: 2016-07-10 12:32
点赞数: 11   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

498:ngx.balancer 模块最近新增加了 set_timeouts() 方法，可以在 balancer_by_lua* 里面动态设置当前的 upstream 请求所使用的 connect/send/read 三种超时上限：http://t.cn/R5gtTJU 这样我们就不必局限于 proxy_connect_timeout 等配置指令里面设置的静态超时上限了。感谢 Jianhao Dai 同学的贡献。  
微博位置: 无
发布时间: 2016-07-10 12:29
点赞数: 8   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

499:从最近的 OpenResty 1.9.15.1 发布开始，发布包会同时上传到 GitHub 的 openresty/openresty 仓库里，作为 release：http://t.cn/R5gtSFI 这样可以作为 openresty.org 的一个备份。万一官网不能访问，可以访问 GitHub.  
微博位置: 无
发布时间: 2016-07-10 12:24
点赞数: 8   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

500:贴了两个 Lua 小脚本到 gist，分别演示了如何使用 Gmail 的 SMTP 服务器的 465（SSL）和 587（TLS）两种服务端口来给其他邮箱发自己的 HTML 格式的邮件：http://t.cn/R5g5IFo 以及 http://t.cn/R5g5IFS 代码非常少，只用了 cosocket. 后面或许可以封装成 OpenResty 标准的 lua-resty-smtp 库   
微博位置: 无
发布时间: 2016-07-10 12:01
点赞数: 19   转发数: 19   评论数: 3
发布工具: 微博 weibo.com

501:今天又为我的《OpenResty 编程》一书新写了一节内容，举例介绍了我的 Test::Nginx 测试框架的 Valgrind 测试模式。同时演示了如何在 OpenResty 的上下文中调试那些适用 Valgrind 的内存问题。覆盖了 LuaJIT、NGINX 以及 FFI。全文在这里：http://t.cn/R5dPc6c 欢迎大家反馈意见和建议！  
微博位置: 无
发布时间: 2016-07-09 06:16
点赞数: 48   转发数: 21   评论数: 6
发布工具: 微博 weibo.com

502:最近为我的 Programming OpenResty 一书新写了两节内容，详细介绍了我的 Test::Nginx 测试框架的“性能测试”和“HUP reload”两种测试模式。全文在这里：http://t.cn/R5B3MHm 还有这里：http://t.cn/R5B3MHn  
微博位置: 无
发布时间: 2016-07-08 03:19
点赞数: 30   转发数: 49   评论数: 5
发布工具: 微博 weibo.com

503:很期待 Samsung 850 Pro 4TB SSD 硬盘。现在我都有些后悔买 Samsung T1 1TB SSD 移动硬盘了，嘿嘿。  
微博位置: 无
发布时间: 2016-07-02 13:46
点赞数: 22   转发数: 3   评论数: 18
发布工具: 微博 weibo.com

504:今天上线了新版 OpenResty.org 官网，添加了对小屏幕设备的样式支持。感谢林青同学的贡献！官网本身也是完全基于 OpenResty 和数据库实现的动态网站。源码开源在了 GitHub 上面：http://t.cn/R5XViuz  原图 
微博位置: 无
发布时间: 2016-06-15 07:43
点赞数: 23   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

505:刚从源码现编了一个最新的 perl 5.24.0，运行我的一个小语言编译器的样例，相比 perl 5.22.1 快了 20% 多。很高兴看到 perl 5 解释器的性能这些年一直都在提升。  
微博位置: 无
发布时间: 2016-06-08 08:23
点赞数: 7   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

506:Perl 级别的火焰图再立新功，轻松定位了 Perl 文法解析框架 Pegex 中的一处性能问题。某个Perl 函数是 O(n^2) 的时间复杂度。我将之改写为 O(n) 的之后，我的小语言编译器分析一个 79KB 的小语言源文件时，整体速度提升了 3 倍多。已将补丁提给 Pegex 官方。更多细节见这里：http://t.cn/R5VCH87  原图 
微博位置: 无
发布时间: 2016-06-08 08:11
点赞数: 39   转发数: 38   评论数: 6
发布工具: 微博 weibo.com

507:OpenResty 1.9.15.1 刚刚发布。下载页面：http://t.cn/R5qq7aA 更动记录：http://t.cn/R5qq7aL 发布公告：http://t.cn/R5qq7aU 包含了 NGINX 1.9.15 核心、restydoc 命令行文档查看工具、在 x64 上面支持 2GB 内存地址空间的新版 LuaJIT v2.1 以及很多其他的新功能和 bug 修复。感谢所有的贡献者！  原图 
微博位置: 无
发布时间: 2016-06-04 13:50
点赞数: 7   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

508:OpenResty 1.9.7.5 刚刚发布。包含了最新的 NGINX 官方的安全问题修复（CVE-2016-4450）。建议所有的 OpenResty 用户升级之。下载地址：http://t.cn/R5UsoS4 发布公告在这里：http://t.cn/R5UsoSb  
微博位置: 无
发布时间: 2016-06-01 05:34
点赞数: 19   转发数: 9   评论数: 6
发布工具: 微博 weibo.com

509:OpenResty 1.9.15.1 RC2 刚刚发布供社区测试。源码包下载地址：http://t.cn/R5AYzBe Win32 二进制包下载地址：http://t.cn/R5AYzBg 更多细节能参见发布公告：http://t.cn/R5AYzBD 欢迎大家试用并反馈！  
微博位置: 无
发布时间: 2016-05-27 03:53
点赞数: 29   转发数: 10   评论数: 4
发布工具: 微博 weibo.com

510:我一哥们的基于 OpenResty 和 Lua 的推送系统最近终于上线了，单机平均有 140 万的并发连接，太帅了   
微博位置: 无
发布时间: 2016-05-18 08:19
点赞数: 70   转发数: 26   评论数: 28
发布工具: 微博 weibo.com

511:刚发布了 OpenResty 1.9.15.1 RC1 版供社区测试。源码包下载地址：http://t.cn/Rqk0xYj Win32 二进制包：http://t.cn/Rqk0xYT 发布公告：http://t.cn/Rqk0xYY 包含了 NGINX 1.9.15和最新的 LuaJIT 2.1。LuaJIT 每 VM 实例中由其 GC 管理的内存在 x86_64 上的限制从 1GB 提高到了 2GB。欢迎反馈！  
微博位置: 无
发布时间: 2016-05-18 08:02
点赞数: 13   转发数: 9   评论数: 2
发布工具: 微博 weibo.com

512:ngx_lua 的测试集现在在 Travis CI 上运行良好。Travis CI 为 ngx_lua 生成的样例测试报告如下：http://t.cn/RqDCckT 以及 http://t.cn/RqDCckY  
微博位置: 无
发布时间: 2016-05-17 07:51
点赞数: 8   转发数: 13   评论数: 1
发布工具: 微博 weibo.com

513:上周抽时间把我的 restydoc 工具移植到了 Mac OS X、FreeBSD、Solaris、Windows 等非 Linux 系统。下一个 OpenResty 发布必需默认包含之，嘿嘿。  
微博位置: 无
发布时间: 2016-05-16 02:42
点赞数: 31   转发数: 2   评论数: 0
发布工具: iPhone 5s

514:OpenSSL 1.1 的变化真大，OpenResty 有不少地方需要做修改才能编译过去。同时我们针对 OpenSSL 1.0.2 打的一些较大的补丁，貌似得针对 OpenSSL 1.1 重写了……  
微博位置: 无
发布时间: 2016-05-16 01:47
点赞数: 9   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

515:Emil Stolarsky 最近给 ngx_lua 模块的众多配置指令绘制了一张显示其执行顺序和阶段的示意图。我刚把它加进 ngx_lua 的 README 里去了。我们的用户真有心呀。原图在这里：http://t.cn/RqeWs0W  原图 
微博位置: 无
发布时间: 2016-05-16 01:44
点赞数: 24   转发数: 92   评论数: 12
发布工具: 微博 weibo.com

516:发现 travis-ci.com 除了界面像 travis-ci.org 以外，功能上就是一个残废……有些奇怪为啥他们不直接重定向到 travis-ci.org，害我因为自己输错域名而误以为 Travis CI 或者 GitHub API 挂掉了……  
微博位置: 无
发布时间: 2016-05-16 01:41
点赞数: 1   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

517:貌似 Travis CI 给分配的 EC2 虚机的性能还是很强劲的，从测试时间上看，似乎比 EC2 的 c3.large 还要快。关键可以免费使用，这个好爽。  
微博位置: 无
发布时间: 2016-05-16 01:31
点赞数: 5   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

518:Ilya Shipitsin 最近在给 OpenResty 的各个 GitHub 仓库添加 Travis CI 的回归测试支持：http://t.cn/RqeWWVZ 比如 ngx_lua 模块在 Travis CI 上的一次典型测试报告是：http://t.cn/RqeWWV7 这种回归可以作为我现有的 EC2 测试集群的补充。  
微博位置: 无
发布时间: 2016-05-16 01:18
点赞数: 3   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

519:刚发现 StartCom 免费的 Class 1 SSL 证书现在支持 5 个域名了，太赞了。记得原先最多只能有 2 个。StartCom 的网站界面也比原先好看一些了，原先的界面简直太山寨了。  
微博位置: 无
发布时间: 2016-05-15 14:10
点赞数: 17   转发数: 6   评论数: 14
发布工具: 微博 weibo.com

520:Travis CI 在没有 .travis.yml 文件的时候，默认竟使用 Rake 去构建项目，这个有点儿奇怪。害我好几个 GitHub 项目都是 fail 状态……根本不是 Ruby 系的项目，不 fail 才奇怪呢。  
微博位置: 无
发布时间: 2016-05-15 13:05
点赞数: 8   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

521:openresty.org 官网现在从大陆的访问速度应该比原先快多了，欢迎大家测试。后面再继续优化国内的访问速度。我们有一半的流量都来自国内用户。  
微博位置: 无
发布时间: 2016-05-15 09:49
点赞数: 29   转发数: 2   评论数: 5
发布工具: iPhone 5s

522:我最近应池建强老师的邀约，在 MacTalk 上做的动态追踪方面的技术分享：鸿篇巨制：动态追踪技术漫谈（上） 中篇和下篇也会很快发出来。我已经完稿了。  
微博位置: 无
发布时间: 2016-05-05 03:42
点赞数: 40   转发数: 129   评论数: 13
发布工具: 微博 weibo.com

523:在雅虎中国工作的时候，我曾经用 Haskell 语言实现过一个简单的 DSL 编译器，还上生产了。Haskell 的 parsec 和 functional 的模式表达编译器还是比较优美的，但纯函数式的方式做 AST 的分析与变换也有其局限，感觉有些像“属性文法”这种形式化方法，还有面向对象的 visiter 设计模式，有很多废话要写  
微博位置: 无
发布时间: 2016-04-09 09:08
点赞数: 21   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

524:函数式编程有一个很重要的特点是程序代码的各个组成部分都可以很方便地像搭积木那样组装起来，或者说拥有杰出的 composibility. 这在小语言编译器构造方面特别有优势。如果目标语言支持函数式风格（包括 Lua 和 Perl 之类），那么生成这种风格的目标代码可以极大地简化编译器生成器的构造。  
微博位置: 无
发布时间: 2016-04-09 08:22
点赞数: 9   转发数: 19   评论数: 2
发布工具: 微博 weibo.com

525:前一阵子因为朋友介绍，去胡乱参加了“北美靠谱青年”的一个聊天节目，随便扯扯开源等方面的话题，时间比较有限，没有聊尽兴，嘿嘿，但也算是图个乐了，在这里分享一下：第八十五期：做一个有开源情怀的程序员  
微博位置: 无
发布时间: 2016-04-07 23:41
点赞数: 49   转发数: 85   评论数: 9
发布工具: 微博 weibo.com

526:话说我一直想着专门弄一个适合做 DSL 编译器的 DSL. 我尝试过很多不同语言里的不同的编译器构造工具链，包括函数式的和命令式的各种，脚本的和静态语言的。目前最趁手的还是 Perl 5 的工具链，但还是不够完美。这种实现 DSL 的 DSL 编译器得更优美更强大一些，最好能生成独立的 C 实现和 Lua 实现。  
微博位置: 无
发布时间: 2016-04-07 10:34
点赞数: 14   转发数: 17   评论数: 12
发布工具: 微博 weibo.com

527:发现自己设计 DSL 时，会不自觉地窃取和融合其他语言里的合适元素，比如 Perl、Python、Haskell、CLIPS、Prolog、SQL 等等。所以多学些不同的计算机语言，有助于有充足的“基因片段”用来杂交和变异。其实对于 DSL 而言，形式上的完美和一致比不上实用和直观，当然，类型推导规则总得能自圆其说……  
微博位置: 无
发布时间: 2016-04-07 10:27
点赞数: 13   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

528:从 nginx 1.9.13 发布开始，nginx 官方的 stream 子系统支持 UDP 协议了，看来 ngx_stream_lua 模块也该跟进了，嘿嘿。很快我们就可以用 Lua 来编写 UDP server 了，包括 DNS 名字服务器。  
微博位置: 无
发布时间: 2016-04-07 09:35
点赞数: 34   转发数: 24   评论数: 11
发布工具: 微博 weibo.com

529:今年的 NGINX 大会将于 9 月在美国德州举行。我得想想去分享些什么。正好又可以去 Austin 玩几天了。  
微博位置: 无
发布时间: 2016-04-07 09:32
点赞数: 18   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

530:打算周末去 Apple Store 瞻仰一下最新出的 9.7 英寸的 iPad Pro  如果 12.9 英寸的 iPad Pro 也更新上 iPad Pro 的 wide color screen/true tone screen 等等新特性就好了……  
微博位置: 无
发布时间: 2016-04-01 13:03
点赞数: 8   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

531:Onyx Boox Max 电子阅读器貌似下个月就发布了，也拥有和 Sony Digital Paper 相似的 e-ink 屏，但价钱更便宜一些，同时跑 Android 系统，可以装各种 app，可以支持多种电子书格式。如果它的 PPI 能比 Sony 的更高一些就好了，还是 150，和 Sony 完全一样……  
微博位置: 无
发布时间: 2016-04-01 13:00
点赞数: 13   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

532:刚刚把 NGINX 官方文档都导入到 restydoc 的文档索引中，现在可以在终端很方便地查看 NGINX 标准的模块和指令了。比如下面两张截屏分别对应命令“restydoc -s keepalive”和命令“restydoc ngx_http_proxy”。改用 groff 渲染后，文档中的 UTF-8 字符也可以正确显示了。  [组图共2张] 原图 
微博位置: 无
发布时间: 2016-03-25 13:21
点赞数: 14   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

533:忙了两三天，restydoc 工具终于可以工作了！下面是三张截屏，分别对应命令 “restydoc -s lua_shared_dict ngx_lua”，“restydoc resty.lrucache”， 和 “restydoc -s echo_location”. 我们看到，可以按模块名搜索，也可以按节名搜，或者二者的组合。搜索方式是精确匹配优先，前缀次之，包含最次。  [组图共3张] 原图 
微博位置: 无
发布时间: 2016-03-24 07:44
点赞数: 29   转发数: 22   评论数: 5
发布工具: 微博 weibo.com

534:今天我花了 465 行 Perl 代码（除去空行和注释）从零实现了一个工具，可以把 Markdown 格式的文档转换为 perl 的 POD 格式。不得不说，Markdown 格式解析起来比 POD 复杂多了。我没有实现整个 Markdown 语言，只实现了我自己常用的那个子集。这样结合 perl 的 pod2man 我们就可以吐漂亮的 man 了  
微博位置: 无
发布时间: 2016-03-22 07:40
点赞数: 40   转发数: 23   评论数: 4
发布工具: 微博 weibo.com

535:这几天开发并上线了新版的 OpenResty.org 官网：http://t.cn/RGDvY5c 这是一个完全使用 OpenResty 开发的动态网站，后端使用 PostgreSQL 数据库，模板引擎使用 Lemplate. 网站内容仍然以 markdown 源文件的形式存放在 Git 仓库中，有工具实现自动导入 Pg 数据库。同时实现了 OpenResty 的 I18N 支持。  原图 
微博位置: 无
发布时间: 2016-03-21 07:45
点赞数: 50   转发数: 46   评论数: 6
发布工具: 微博 weibo.com

536:我刚刚发布了 OpenResty 1.9.7.4 正式版。下载地址在这里：http://t.cn/RLzjJyd 完整的更动列表在这里：http://t.cn/R4qs6Ht 所有使用了 balancer_by_lua* 或 ssl_certificate_by_lua* 特性的用户应当立即升级。感谢所有的开发者和贡献者！  原图 
微博位置: 无
发布时间: 2016-03-17 13:33
点赞数: 30   转发数: 14   评论数: 6
发布工具: 微博 weibo.com

537:OpenResty 1.9.7.4 RC1 刚刚发布供社区公测。源码包下载地址：http://t.cn/RGE7oJy Win32 二进制包下载地址：http://t.cn/RGE7oJU 发布公告和完整的更动列表：http://t.cn/RGE7oJ4 感谢所有的贡献者和用户！欢迎大家反馈试用结果。  
微博位置: 无
发布时间: 2016-03-09 13:40
点赞数: 11   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

538:明晚就要在 CloudFlare 办公室举办第一届湾区 OpenResty 聚会了。Mashape 的 CTO 和 Adobe 的工程师届时也会作分享。我也会聊一聊 OpenResty 新发布和即将发布的新功能新玩意儿。参加聚会是免费的，还有免费的食物和饮料。欢迎在湾区的朋友报名参加：http://t.cn/RGRmypl 目前已有 33 个朋友报名啦。  
微博位置: 无
发布时间: 2016-03-09 07:54
点赞数: 46   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

539:由于有不少朋友向我私下打听，于是我刚刚把 openresty-survey 这个基于 OpenResty 实现的小 web 应用给开源了，放在 GitHub 上面：GitHub - agentzh/openresty-survey: OpenResty Web App for OpenResty User Survey 虽然还有一些不尽如人意的地方，先放出来给大家玩。后面得空了我再慢慢打磨。祝玩得开心。  
微博位置: 无
发布时间: 2016-03-01 04:36
点赞数: 43   转发数: 44   评论数: 8
发布工具: 微博 weibo.com

540:今天给 YAPC::NA 2016 Perl 大会提交了两个演讲申请，一个是关于 sregex DFA 正则编译器，另一个则关于用 Perl 构造小语言编译器。希望至少其中一个能被接受啊。这样我们就可以顺便去佛罗里达州玩一趟了   
微博位置: 无
发布时间: 2016-02-27 08:18
点赞数: 35   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

541:Hiroaki Nakamura 最近贡献了一些补丁，现在 ngx_memc, ngx_redis2 以及 ngx_lua_upstream 模块也支持 NGINX 1.9.11+ 的“动态模块”方式了。  
微博位置: 无
发布时间: 2016-02-26 03:53
点赞数: 15   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

542:又亲身比较了一下 iPad Pro + Apple Pencil 和 Wacom Cintiq HD，发现还是 iPad Pro 更好用。后者即使仔细较准了，笔尖和屏幕上的点之间还是有一些距离，而前者根本不用校准。在 iPad Pro 上面使用 Procreate 应用的体验尤其的好。希望 iPad Pro 2 的硬件，无论是 Pencil，CPU 还是内存能更强大一些。  
微博位置: 无
发布时间: 2016-02-25 10:32
点赞数: 12   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

543:这两天为了搞一些 paperwork，折腾了很久 Photoshop CC. 原本想在 Mac OS X 上面跑 Gimp 的，但官方的二进制程序就是启动不了，只好果断放弃。幸好 Adobe Creative Cloud 有一个月的免费试用，先玩着。逼急了就上 PS 的 Pen 工具，反正有 Cintiq HD 13 方便直接编辑象素。PS 确实功能很强大……  
微博位置: 无
发布时间: 2016-02-24 15:45
点赞数: 12   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

544:今年我自己的一大目标是重新定义 OpenResty. 希望在现有的 NGINX + Lua 的层面之上再定义一个 EdgeLang + ORSQL + YLang 的较高层面。希望能够全面进入“小语言时代”，而 Lua 不过是 OpenResty 这个虚拟机的“机器语言”罢了。  
微博位置: 无
发布时间: 2016-02-24 05:40
点赞数: 53   转发数: 27   评论数: 18
发布工具: 微博 weibo.com

545:经常因为打字快了，在 vim 里面误创建出各种稀奇古怪名字的文件。有些文件只能通过 inode 号来删了……  
微博位置: 无
发布时间: 2016-02-24 05:37
点赞数: 7   转发数: 4   评论数: 11
发布工具: 微博 weibo.com

546:今天意外地发现 Amazon EC2 的 c3.large 实例类型也可以用于 32 位操作系统了，这样我的 EC2 测试集群中的 32 位节点终于也可以跑得像 64 位节点那么快了。原先我只能使用 c1.medium 实例类型来跑 32 位节点。对于较慢的测试模式，比如 valgrind memcheck 测试模式，整体运行速度有了 70% 以上的提升。  
微博位置: 无
发布时间: 2016-02-16 05:43
点赞数: 14   转发数: 0   评论数: 7
发布工具: 微博 weibo.com

547:Mac 版的 QQ 在打开状态时，会在切换应用窗口到 iTerm2 终端时出现一个奇怪的“Just enjoy Swiftly :)”的对话框，非常不便。关闭 QQ 就正常了。  
微博位置: 无
发布时间: 2016-02-15 11:13
点赞数: 8   转发数: 4   评论数: 16
发布工具: 微博 weibo.com

548:今天搞了搞，现在我们的 ngx_echo 模块、ngx_headers_more 模块，还有我们的 ngx_eval 模块的分支，都能通过 NGINX 1.9.11 编译成独立的“动态模块”。可以通过 load_module 配置指令在 nginx.conf 文件中动态加载。当然，./configure 时须用 --add-dynamic-module=PATH 选项替代 --add-module=PATH.  
微博位置: 无
发布时间: 2016-02-11 14:22
点赞数: 23   转发数: 13   评论数: 5
发布工具: 微博 weibo.com

549:rr 最近引入了一种所谓的 chaos 模式，有些多线程 fuzz testing 的意味。rr 的作者写了篇博客文章对此进行了介绍：http://t.cn/RG520fo 像 Gecko 这样的广泛使用多线程的东西，调试起来确实很烦。所以我自己也尽量避免多线程编程和其他抢占式的调度模型。  
微博位置: 无
发布时间: 2016-02-11 02:22
点赞数: 10   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

550:iPad Pro + Apple Pencil 真是越试越喜欢。打算等苹果出第二代时入一个。Wacom Cintiq 太笨重了，平时画东西还是不够方便。  
微博位置: 无
发布时间: 2016-02-10 10:01
点赞数: 11   转发数: 2   评论数: 8
发布工具: iPhone 5s

551:Test::Nginx 的多种测试模式非常有用。ngx_stream_lua 的测试集在默认测试模式下完全通过，但使用 valgrind 模式运行同一个测试集，但立即捕捉到一处内存管理问题；而使用 mockeagain 写模式运行，则又捕捉到一处写事件过早取消注册的 bug；使用 HUP reload 模式运行测试，又捕捉到一处 socket 泄漏。  
微博位置: 无
发布时间: 2016-02-09 07:43
点赞数: 18   转发数: 10   评论数: 7
发布工具: 微博 weibo.com

552:我们组织的 SF Bay Area OpenResty Meetup 聚会将于 3 月 9 日下午 5 点半在 CloudFlare 公司的办公室举行：Bay Area OpenResty Meetup 具体地址是 101 Townsend St San Francisco 计划历时一小时。有免费食物和饮料。欢迎在附近的朋友报名参加，也欢迎作 3 ~ 5 分钟的闪电分享。我自然少不了做分享，呵呵。  
微博位置: 无
发布时间: 2016-02-05 13:26
点赞数: 21   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

553:Mathew Heard 同学这两天正在紧锣密鼓地把 balancer_by_lua* 移植到 ngx_stream_lua_module: http://t.cn/RGPdfcZ 以及 http://t.cn/RGPdfc2 欢迎大家帮忙 review 这两个 pull requests，多谢！  
微博位置: 无
发布时间: 2016-02-05 13:21
点赞数: 9   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

554:看到 NGINX 官方开始弄动态加载模块机制了，该特性应该会包含在下一个主线发布，即 NGINX 1.9.11 当中：http://t.cn/RGve8Ul  
微博位置: 无
发布时间: 2016-02-05 03:23
点赞数: 13   转发数: 14   评论数: 8
发布工具: 微博 weibo.com

555:Mike Pall 终于把 LuaJIT 官方测试集给放出来了：http://t.cn/RbFNIpR 下面我们得好好整理，好好自动化。我很想上 Perl，哈哈！  
微博位置: 无
发布时间: 2016-02-04 04:22
点赞数: 16   转发数: 8   评论数: 11
发布工具: 微博 weibo.com

556:发现写书是一件容易上瘾的事情，尤其是在心中有很多有趣的东西值得分享的时候。欢迎大家追踪我的“Programming OpenResty”一书的更新：http://t.cn/RbDxH11 “自动化测试”一章目前已完成大半了。我也已经在规划下面的“性能剖析”和“调试”等更多章节了。写书确实可以像写代码一样的有趣   
微博位置: 无
发布时间: 2016-02-02 14:35
点赞数: 29   转发数: 44   评论数: 18
发布工具: 微博 weibo.com

557:每次拿到新的 Mac OS X 系统总是需要稍微折腾一下才比较好用，比如需要修改 /etc/auto_master 文件以免在编译东西的时候 opendirectoryd 进程疯狂吃 CPU，还需要创建 ~/Library/KeyBindings/DefaultKeyBinding.dict 文件以修正 Home 和 End 键的行为，当然，还要安装 Squirrel 输入法，储如此类。  
微博位置: 无
发布时间: 2016-02-01 02:34
点赞数: 33   转发数: 9   评论数: 6
发布工具: 微博 weibo.com

558:把前年底买的 iMac retina 5K 给卖了，最近又重买了台最新款的最低配的 iMac retina 5K，果然屏幕更加漂亮（官方号称色彩增加 25%），整机重量也感觉轻了很多。拿来做我的 MBP 的终端很赞。还得搞根 Thunderbolt 的线直连，否则家庭 wifi 的延时还是受不了。打字快了以后就对微小的延时都很敏感。  
微博位置: 无
发布时间: 2016-01-31 09:52
点赞数: 21   转发数: 6   评论数: 16
发布工具: iPhone 5s

559:ngx_stream_lua_module 已开源在 GitHub 上面：http://t.cn/R4QuqSA 欢迎大家试用。同时欢迎有志之士帮忙实现该模块余下的 TODO 项目：http://t.cn/RbrLbr2 非常感谢！下面要转换工作重心于 edgelang 编译器和运行时的设计和构建工作上了，同时搞一搞 OpenResty 的包管理系统 OPM（不叫 iresty 了）  
微博位置: 无
发布时间: 2016-01-31 04:00
点赞数: 31   转发数: 15   评论数: 4
发布工具: 微博 weibo.com

560:OK，一鼓作气，终于把 ngx_http_lua_module 中几乎全部有意义的测试用例全部移植到 ngx_stream_lua_module 了，并且所有测试都通过。下面可就等德江为 ngx_stream_lua_module 实现 ngx.var.remote_addr, ngx.var.pid 这些摸拟接口方便使用（毕竟 stream 子系统并没有变量这种东西）。  
微博位置: 无
发布时间: 2016-01-30 09:08
点赞数: 30   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

561:OpenResty 1.9.7.3 正式版刚刚发布，包含了 NGINX 官方最新的安全问题的修复补丁。下载地址是：http://t.cn/RLzjJyd 更动历史在这里：http://t.cn/R4qs6Ht 关于 NGINX 核心的安全问题的细节请参见：http://t.cn/Rbmr6lC  原图 
微博位置: 无
发布时间: 2016-01-29 04:58
点赞数: 25   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

562:好吧，目前已成功移植 ngx_http_lua_module 官方测试集中的 51 个测试文件到 ngx_stream_lua_module 并且所有相关的测试用例都已通过。从测试集的移植进度上看，已经过半了。ngx_stream_lua_module 中的 shared dicts、cosockets、timers、threads 等很多 Lua API 目前都可以工作了。  
微博位置: 无
发布时间: 2016-01-28 16:00
点赞数: 25   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

563:今天我在 meetup.com 上面新建了一个 Bay Area OpenResty Meetup 组：Bay Area OpenResty Meetup 欢迎湾区特别是三藩市的朋友加入。我打算下个月的某一天借用 CloudFlare 办公楼的场地搞一次 OpenResty 小聚会。  
微博位置: 无
发布时间: 2016-01-28 09:35
点赞数: 8   转发数: 1   评论数: 4
发布工具: iPhone 5s

564:最近在三藩市终于见了一下 leaf corcoran 老师，果然像传说中一样的酷。leaf 老师是 MoonScript 语言的作者，基于 OpenResty 的 Lapis 开发框架的作者，同时也是 LuaRocks 的维护者之一。我们重点讨论了一下 OpenResty 未来的 iresty 包管理工具链和网站的相关实现细节。leaf 建议基于 LuaRocks 构建。  
微博位置: 无
发布时间: 2016-01-28 01:27
点赞数: 11   转发数: 7   评论数: 7
发布工具: 微博 weibo.com

565:感谢德江最近又给 ngx-releng 工具添加了一项新检查，即可以自动捕捉 C  函数的局部变量名未对齐的情况（按照 nginx 代码风格的要求）。以后 review 相关的代码可以更省心了。我打算后面在 Programming OpenResty 一书中也介绍一下 nginx 代码风格和 ngx-releng 这个静态检查工具。  
微博位置: 无
发布时间: 2016-01-26 11:19
点赞数: 7   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

566:发现我现在用英语作小型的技术分享也可以进入高度投入的状态，即兴讲几个小时也不累。很多事情确实都是熟能生巧，自然语言的使用也是如此。  
微博位置: 无
发布时间: 2016-01-26 10:49
点赞数: 34   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

567:有朋友担心习禅时会“走火入魔”，其实这里最重要的是遵循正确的修行方法。我都是按最古老的印度早期部派的三藏中共有的部分里的教法来修习的。这种修行方法与任何宗教信仰无关，只是为了磨砺和训练基于直观的自省和内察的功夫。由于练习的就是精神和意识的高度清醒和警觉，所以根本不会误入“歧途”。  
微博位置: 无
发布时间: 2016-01-26 10:19
点赞数: 10   转发数: 21   评论数: 10
发布工具: 微博 weibo.com

568:我终于下决心开始撰写 Programming OpenResty 这本书：http://t.cn/RbR0aE6 这是一本开源书，源放在了 GitHub 上面：http://t.cn/RbR0aEX 实时同步到 GitBook 上渲染成 Web、PDF、Mobi 和 ePub 等多种电子书格式。目前内容还很少，只有一章的几节而已。后面打算每天晚上坚持至少写一节。贵在坚持。  原图 
微博位置: 无
发布时间: 2016-01-24 16:14
点赞数: 128   转发数: 164   评论数: 19
发布工具: 微博 weibo.com

569:OpenResty 1.9.7.2 正式版刚刚发布。这是第一个包含 ssl_certificate_by_lua*、balancer_by_lua* 和 ngx.semaphore 这些大特性的正式版。下载地址是：http://t.cn/RLzjJyd 完整的更动列表在这里：http://t.cn/R4qs6Ht 发布公告在这里：http://t.cn/RbQKRQJ 感谢所有的开发者、贡献者和用户！  原图 
微博位置: 无
发布时间: 2016-01-22 13:33
点赞数: 21   转发数: 21   评论数: 5
发布工具: 微博 weibo.com

570:我后面打算逐步从 Mike Pall 手里接管官方的 LuaJIT 项目了，感觉挑战很大。先从接手 Mike 的 LuaJIT 官方测试集开始。我希望 LuaJIT 未来能更好地服务 Web 世界的需求，而不仅仅是游戏世界。  
微博位置: 无
发布时间: 2016-01-22 09:35
点赞数: 117   转发数: 65   评论数: 56
发布工具: 微博 weibo.com

571:刚买了一个 1TB 的 Samsung T1 SSD 移动硬盘给我的工作笔记本作备份。现在的移动硬盘做得真是小巧呀。  
微博位置: 无
发布时间: 2016-01-22 09:30
点赞数: 15   转发数: 3   评论数: 9
发布工具: 微博 weibo.com

572:忙了好几天，ngx_stream_lua_module 终于可以通过 hello world 的测试用例了。现有 ngx_http_lua_module 所有对 TCP server 有意义的 Lua API 都将被继承。  原图 
微博位置: 无
发布时间: 2016-01-20 10:52
点赞数: 47   转发数: 31   评论数: 14
发布工具: 微博 weibo.com

573:使用“念住”(self-possession)的方法进行思想训练可以很容易地进入一种高度的轻松安宁的状态，有些像失重时的体验，但没有失重时的难受和恐惧，相反，是充满喜悦的，身心都充满，每个细胞都充满。如果再长时间集中很多精神力量，专心念住，可以进入传说中的“禅定”境界。  
微博位置: 无
发布时间: 2016-01-19 02:48
点赞数: 15   转发数: 23   评论数: 19
发布工具: iPhone 5s

574:为了 Magic Trackpad 2，把我的 Macbook Pro 上的 Mac OS X 给升级到了 El Capitan，幸好升级完了我的 Squirrel 输入法并没有受到影响。已经很久没用过鼠标了，反而很习惯 Trackpad 了。  
微博位置: 无
发布时间: 2016-01-18 13:08
点赞数: 7   转发数: 1   评论数: 9
发布工具: 微博 weibo.com

575:做开源的一大乐趣是可以结识很多志同道合的开发者。其中很多人远比我聪明，远比我资深。能和这些优秀的人一起做事，是人生一大幸事，即使没有一分钱拿，嘿嘿。“我们生活在一个有趣的时代！”  
微博位置: 无
发布时间: 2016-01-17 09:44
点赞数: 113   转发数: 33   评论数: 9
发布工具: 微博 weibo.com

576:最近几周我抽了一点时间当面指导一位美国高中生基于 OpenResty + Bootstrap 做一个比较完整的网站。我的 Lemplate 编译器就是为此而应运而生的，这样方便做页面模版。后面我打算再顺手搞定 ORSQL 编译器，这样我们就有比较完整的基于 DSL 的Web开发框架了。貌似我用全英语做“家教”也还凑和   
微博位置: 无
发布时间: 2016-01-17 09:25
点赞数: 65   转发数: 16   评论数: 18
发布工具: 微博 weibo.com

577:我回复用户邮件貌似已有强迫症，后面打算降低回复社区邮件的频度，从目前的“软实时”降低到一周两次，这样我可以有更多时间从事更为重要的项目，比如 ngx_stream_lua_module 的开发和"Programming OpenResty"一书的编撰。同时我也可以把更多社区答疑的机会留给我们社区其他的开发者和用户   
微博位置: 无
发布时间: 2016-01-17 09:15
点赞数: 45   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

578:哈，刚看到官方的 NGINX 核心也支持 worker_cpu_affinity auto 配置指令了：http://t.cn/R4lrAwo 这个新特性应该会包含在下一个 NGINX 1.9.10 主线发布中。  
微博位置: 无
发布时间: 2016-01-16 06:03
点赞数: 13   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

579:正集中全部力量开发 ngx_stream_lua_module 项目…  
微博位置: 无
发布时间: 2016-01-13 15:27
点赞数: 48   转发数: 3   评论数: 14
发布工具: iPhone 5s

580:刚发布了 OpenResty 1.9.7.2 RC1 供社区公测。源码包的下载位置是：http://t.cn/R4pwrIo Win32 二进制包：http://t.cn/R4pwrI9 发布公告：http://t.cn/R4pwrIK 这是第一个包含了 ngx.semaphore、balancer_by_lua* 以及 ssl_certificate_by_lua* 这些大特性的 OpenResty 版本。欢迎大家试用！  原图 
微博位置: 无
发布时间: 2016-01-12 07:20
点赞数: 35   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

581:我最近在搞 lemplate 这个编译器：http://t.cn/R4pzY83 可以把 Perl TT2 模版编译为独立的 Lua 脚本，直接运行在 OpenResty 上。可用于生成动态 HTML 等各种东西。我这个 lemplate 是直接改的 Ingy dot Net 同学的 jemplate 编译器，而后者是从 TT2 模版生成客户端 JavaScript 代码，跑在浏览器里。  原图 
微博位置: 无
发布时间: 2016-01-12 05:22
点赞数: 21   转发数: 16   评论数: 7
发布工具: 微博 weibo.com

582:刚在 openresty-en 英文邮件列表为一哥们演示了一下使用即将开源的 ngx_lua 模块的 ssl_session_fetch_by_lua* 和 ssl_session_store_by_lua* 指令来实现基于 memcached 的 SSL session 的分布式缓存的 nginx 配置：http://t.cn/R4phzrG 该特性依赖对 OpenSSL 1.0.2 的一个补丁：http://t.cn/R49Is3w  原图 
微博位置: 无
发布时间: 2016-01-12 02:05
点赞数: 8   转发数: 13   评论数: 1
发布工具: 微博 weibo.com

583:我最近请我的同事把我司内部使用的一个 OpenSSL 补丁提给了 OpenSSL 官方：http://t.cn/R49Is3w 这个补丁允许 session resumption 时用户回调发生 yield，这对于即将开源的 ngx_lua 模块的 ssl_session_fetch_by_lua* 指令非常重要，这样我们可以实现非阻塞的分布式 SSL session ID 的状态缓存。  
微博位置: 无
发布时间: 2016-01-09 13:33
点赞数: 10   转发数: 12   评论数: 2
发布工具: 微博 weibo.com

584:OpenSSL 貌似正在经历很大的代码重构和调整，听说 master 和 1.0.2 分支相比，变化很大。也许是被 BoringSSL 和 LibreSSL 这些 fork 给刺激的，呵呵。  
微博位置: 无
发布时间: 2016-01-09 04:24
点赞数: 8   转发数: 14   评论数: 4
发布工具: 微博 weibo.com

585:在我的 Amazon EC2 测试集群上充分回归 ngx_lua 模块的 semaphore API 的时候，轻线程的 systemtap 测试用例捕捉到了一处小问题。同样地，再把 lua-testy-limit-traffic 库添加进测试集群后，又很快发现了在 32 位系统上的整数溢出问题。大规模的自动化测试很花时间和精力，但确实非常有用。  
微博位置: 无
发布时间: 2016-01-08 09:12
点赞数: 36   转发数: 14   评论数: 5
发布工具: iPhone 5s

586:最近一口气合并了很多大特性，OpenResty 1.9.7.2 将是一个 big release 了。SSL 部分下面将要开源的是 ssl_session_fetch_by_lua* 和 ssl_session_store_by_lua* 这两组配置指令，可以轻松在 Lua 里面实现老的 SSL session ID 的非阻塞的分布式缓存。这个特性也在 CloudFlare 的生产上跑很久了。  
微博位置: 无
发布时间: 2016-01-05 13:35
点赞数: 52   转发数: 13   评论数: 9
发布工具: 微博 weibo.com

587:我刚刚分别合并了 ngx_lua 模块的 ssl_certificiate_by_lua* 配置指令和 lua-resty-core 库的 ngx.ssl 及 ngx.ocsp 模块到各自仓库的主干。这组新特性将会包含在下一个 OpenResty 正式版发布，1.9.7.2，里面。它们的官方文档在这里：http://t.cn/R4a7Thm http://t.cn/R4a7Thu http://t.cn/R4a7Thn  [组图共2张] 原图 
微博位置: 无
发布时间: 2016-01-05 13:07
点赞数: 10   转发数: 15   评论数: 6
发布工具: 微博 weibo.com

588:这两天我一直在整理 ngx_lua 模块的 ssl_certificate_by_lua* 特性的实现，为合并主干做准备。今天把这个特性依赖的两个对 NGINX 核心的补丁给干掉了一个，现在只剩下一个补丁必须要打。刚刚把余下那个补丁提到了 nginx-devel 邮件列表供官方 review: http://t.cn/R4ieNn3 希望能早日合并进主线。  
微博位置: 无
发布时间: 2016-01-03 12:10
点赞数: 19   转发数: 6   评论数: 8
发布工具: 微博 weibo.com

589:今天花了三个小时把 Jemplate 给 hack 了一下，让这个从 TT2 模版语言到客户端 JavaScript 的编译器能够直接吐 OpenResty 的 Lua 代码，这样 TT2 这个模版语言现在就有三种后端了，一是 Perl，二是客户端 JavaScript，三是 OpenResty Lua. 一版三用。Jemplate 在 CPAN 上面：http://t.cn/R4idoIP  
微博位置: 无
发布时间: 2016-01-03 11:34
点赞数: 24   转发数: 21   评论数: 6
发布工具: 微博 weibo.com

590:刚在 Apple Store 试了一下 iPad Pro 的 pencil，手绘和书写效果比我想象的好多了，虽然手感还不及 Wacom Cintiq.  
微博位置: 无
发布时间: 2016-01-02 09:49
点赞数: 21   转发数: 1   评论数: 4
发布工具: iPhone客户端

591:Google BoringSSL 这个 C 库的 build system 使用 cmake 也就算了，居然还强制依赖 Go，这该有多想不开呀……  
微博位置: 无
发布时间: 2016-01-02 06:56
点赞数: 12   转发数: 3   评论数: 15
发布工具: 微博 weibo.com

592:刚刚把 openresty.org 官网从我们原来那个很弱的 linode box 给迁到 Amazon EC2 上面了。现在官网的高峰流量还是比较高，即使前面有 CDN 缓存，原先那个 linode 虚机上不足 1G 的内存还是不够用，经常触发 OOM killer 来杀我的 nginx worker 进程。现在 EC2 上把容量扩了好几倍，后面再观察吧。  
微博位置: 无
发布时间: 2016-01-01 08:01
点赞数: 65   转发数: 7   评论数: 17
发布工具: 微博 weibo.com

593:发表在 InfoQ 上的文章《锤子手机发布会提到的 OpenResty 是什么？》：锤子手机发布会提到的 OpenResty 是什么？  在本文中，我们比较系统地阐述了 OpenResty 的过去、现在和未来。特别地，我们希望利用捐赠来帮助和鼓励 OpenResty 的开发者和贡献者。这是一篇集体智慧的产物。 http://t.cn/R4MGEUX   
微博位置: 无
发布时间: 2015-12-31 16:01
点赞数: 50   转发数: 83   评论数: 9
发布工具: InfoQ

594:昨晚锤子发布会期间 openresty.org 官网流量暴涨，好吧，是我准备不足，没有及时调整服务器系统默认的自我保护上限，所以当时应该会有不少访问者得到 500 这样的错误页。非常大的流量突然间涌进来，就触发了自我保护。真没想到一下子会有这么大的访问量。由于时差，高峰那会儿我正睡得香。刚调整了上限  
微博位置: 无
发布时间: 2015-12-30 05:30
点赞数: 126   转发数: 107   评论数: 22
发布工具: 微博 weibo.com

595:刚刚把 balancer_by_lua* 配置指令和 ngx.balancer 这个 Lua 模块都合并到了各自仓库的主干，将会包含在下一个 OpenResty 正式版中。感谢书鑫、德江、Aapo、Brandon、冠兰等同学的帮助。这样我们就可以用 Lua 来实现全动态的 nginx upstream 负载均衡器了，同时自动为 ngx_proxy 这样的模块所使用。  原图 
微博位置: 无
发布时间: 2015-12-29 13:46
点赞数: 13   转发数: 20   评论数: 4
发布工具: 微博 weibo.com

596:ngx_lua 下面将要合并主干的是 balancer_by_lua* 特性。欢迎大家帮我 review 对应的 pull requests: http://t.cn/R4c2LnT 以及 http://t.cn/R4c2Lnl 非常感谢！  
微博位置: 无
发布时间: 2015-12-28 02:16
点赞数: 12   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

597:用 Sony Digital Paper 来 review 代码补丁，真是一种享受，呵呵。不仅 e-ink 屏很大（A4 大小），而能很方便地用笔直接在上面做批注。我之前还写过一个 diff2pdf 的小脚本来自动从 git 分支对比来生成对应补丁的 PDF 文件，用起来很方便。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-12-27 15:21
点赞数: 73   转发数: 35   评论数: 24
发布工具: 微博 weibo.com

598:朱德江同学观察到我在 review 贡献者的补丁时经常花费大量的时间纠正 NGINX 代码风格方面的问题，于是他扩展了我的 ngx-releng 这个命令行工具，现在可以自动检查很多 NGINX 代码风格方面的问题，真是好用。无疑地，这个工具发现了我自己写的 ngx_lua 模块代码中的很多风格问题：http://t.cn/R4tTGhk  
微博位置: 无
发布时间: 2015-12-27 14:53
点赞数: 8   转发数: 12   评论数: 1
发布工具: 微博 weibo.com

599:我越来越深刻地体会到一个开源项目最大的价值并不是代码基，而是项目吸引到的优秀的有活力的开发者和贡献者。唯有人才才能保持开源项目的生命力，才能确保持续的创新和进步，才最有价值最为宝贵。作为一个开源项目的领导者，一定要服待好其他的开发者和贡献者。开源远不像把源代码给放出来那么简单。  
微博位置: 无
发布时间: 2015-12-27 14:41
点赞数: 51   转发数: 41   评论数: 13
发布工具: 微博 weibo.com

600:好吧，我的前同事 Piotr Sikora 今年跳槽去 Google 了。貌似他还在继续搞开源 NGINX……不过有些侧重于和 Google 自己搞的一些东西的结合。似乎他有些享受在 nginx-devel 邮件列表里面使用“At Google we blah blah blah”这种句式，呵呵。  
微博位置: 无
发布时间: 2015-12-27 14:19
点赞数: 10   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

601:一位 Go 程序员写的 OpenResty 简介文章：http://t.cn/R4tjU1b 我曾反复说过，OpenResty 是兼容并包的  谁都可以成为我们的用户，无论来自哪个语言社区。  
微博位置: 无
发布时间: 2015-12-27 14:06
点赞数: 17   转发数: 24   评论数: 6
发布工具: 微博 weibo.com

602:经过几个月反复的 code review 和修改，由酷狗音乐的崔伟协和朱德江同学贡献的 ngx_lua 模块的 ngx.semaphore API 刚刚合并到了主干，将会包含在下一次发布中。这个 API 实现了经典的 semaphore 语义，可以实现跨请求上下文的高效的“轻线程”同步，在朱德江的 C2000K 推送系统试验中扮演了重要角色。  原图 
微博位置: 无
发布时间: 2015-12-27 01:55
点赞数: 49   转发数: 117   评论数: 14
发布工具: 微博 weibo.com

603:OpenResty 1.9.7.1 正式版刚刚发布。下载地址在这里：http://t.cn/RLzjJyd （含可移植的源码发布包和 Win32 二进制发布包）。完整的更动列表在这里：http://t.cn/R4qs6Ht 发布公告在这里：http://t.cn/R4qs6H5 感谢所有的贡献者和用户！这是今年的最后一个正式版。祝大家圣诞快乐，新年快乐   原图 
微博位置: 无
发布时间: 2015-12-25 14:50
点赞数: 10   转发数: 7   评论数: 5
发布工具: 微博 weibo.com

604:我最近邮件回访了几家很久没联系过的用户公司。令我欣慰的是，他们几乎都仍在生产上使用 OpenResty，而且仍然很满意。其中一家印度公司的CTO这样写道：“Whenever we think about taking the decision to use OpenResty for our own Custom dynamic CDN, it puts an everlasting smile on our faces.”  
微博位置: 无
发布时间: 2015-12-25 13:52
点赞数: 29   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

605:我今天起草了一下 OpenResty 开源项目在 2016 年的开发和发布计划：http://t.cn/R4qDAuX 由于 OpenResty 官方团队今年有几位新的牛人加入，同时有来自社区的赞助资金的支持，我们的开发节奏可以大大加快。期待 2016，全新的一年   
微博位置: 无
发布时间: 2015-12-25 13:39
点赞数: 35   转发数: 15   评论数: 7
发布工具: 微博 weibo.com

606:从家里宽带通过 scp 从新加坡的一个 linode 服务器下载一批很大的日志文件，7 ~ 8 MB/s 的平均速度实在是爽。原先在国内老家时，一般也就 400KB/s 啊，最快时可以冲到 1.2MB/s，但持续不了多久就降下去了。  
微博位置: 无
发布时间: 2015-12-25 10:49
点赞数: 14   转发数: 5   评论数: 6
发布工具: iPhone 5s

607:OpenResty 1.9.7.1 RC2 刚刚发布供社区公测。源码包的下载地址是：http://t.cn/R4GQ18Q Win32 二进制包的下载地址是：http://t.cn/R4GQ188 发布公告在这里：http://t.cn/R4GQ18R  
微博位置: 无
发布时间: 2015-12-24 06:55
点赞数: 13   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

608:OpenResty 1.9.7.1 RC1 刚刚发布，欢迎大家测试。下载地址是：http://t.cn/R4UHVZh 发布公告在这里：http://t.cn/R4UHVZP 这是第一个基于 NGINX 1.9.7 核心的 OpenResty 版本。同时包含了用以支持朱德江同学的单机 C2000K 实验所需的 ngx_lua 核心中的补丁。  
微博位置: 无
发布时间: 2015-12-20 14:35
点赞数: 15   转发数: 20   评论数: 6
发布工具: 微博 weibo.com

609:最新的 Valgrind 3.11.0 重新添加了对 mmap 的 MAP_32BIT 标志的支持，这样 LuaJIT 在 x86_64 上面终于又可以和 Valgrind 一起工作了，原先会直接崩溃。不过使用 -DLUAJIT_USE_SYSMALLOC 构造出来的 LuaJIT 更有助于 Valgrind 发现内存越界读写等问题。  
微博位置: 无
发布时间: 2015-12-19 10:24
点赞数: 10   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

610:因为拉赞助的需要，今天在我的服务器上统计了一下访问日志里面 ngx_openresty 的 .tar.gz 包的总下载量，发现已经有大约 128 万了。那些命中 CDN 缓存的下载量显然还没有包含在内。也没算单独下载 ngx_lua 模块的请求。这么多的下载量值得我们继续努力！  
微博位置: 无
发布时间: 2015-12-18 15:03
点赞数: 43   转发数: 1   评论数: 4
发布工具: iPhone客户端

611:这两天折腾了一下我自己的 SSL 证书。现在我的 qa.openresty.org 和 agentzh.org 这两个网站也支持 https 了。  
微博位置: 无
发布时间: 2015-12-18 14:54
点赞数: 12   转发数: 1   评论数: 1
发布工具: iPhone客户端

612:欢迎大家参与 OpenResty 用户调查：http://t.cn/R4AdLK5 我们想较为深入地了解一下我们的用户社群。值得一提的是，这个页面是用 Twitter 的 Bootstrap 框架设计的，服务器端完全基于 OpenResty，就花了我 100 行 Lua 代码和 50 行 nginx.conf 配置。过些日子我再把这个小应用的源码开源出来。多谢支持  原图 
微博位置: 无
发布时间: 2015-12-15 15:22
点赞数: 15   转发数: 8   评论数: 8
发布工具: 微博 weibo.com

613:打算下面融合一下最初的 Perl 版 OpenResty 中的 View 定义语言和当年给淘宝量子统计设计的 LZSQL 数据中间层小语言的核心思想，搞一个 Resty SQL (RSQL) 小语言系统，用来简化基于 OpenResty 的 Web 应用开发。相当于一种编译型的 Web 开发框架了。有点可惜的是 rsql.org 域名已经被别人注册了…  
微博位置: 无
发布时间: 2015-12-14 00:14
点赞数: 13   转发数: 12   评论数: 16
发布工具: iPhone客户端

614:每天拖着 15 英寸 MacBook Pro 和 Sony Digital Paper 上下班，确实有些辛苦…  
微博位置: 无
发布时间: 2015-12-11 09:45
点赞数: 9   转发数: 1   评论数: 24
发布工具: iPhone客户端

615:有些意外地收到了 NGINX 公司寄给我的一盒“假日饼干”，正好可以喂我女儿吃。NGINX 公司真是客气。  原图 
微博位置: 无
发布时间: 2015-12-09 10:22
点赞数: 79   转发数: 2   评论数: 11
发布工具: iPhone客户端

616:朱德江同学最近给我的 code2ebook 开源项目的 src2html.pl 脚本添加了 -j N 这个命令行选项，这样该工具在处理较大的源码树时可以自动 fork 出 N 个子进程进行并行处理。这在多核处理器上面尤为有用，提速非常明显。德江自己利用此特性终于给整个 Linux 内核源码树生成了 2GB 大的静态 HTML 电子书。  
微博位置: 无
发布时间: 2015-12-07 15:56
点赞数: 23   转发数: 44   评论数: 20
发布工具: 微博 weibo.com

617:这两天通过 ssh 远程登录到芬兰一哥们的 Raspberry Pi 2 上面去，修了 ngx_lua 模块里的几处 data alignment 的问题。幸好从我这里连过去，网络延时还可以。芬兰的这位哥们正在基于 Raspberry Pi 2 + FreeBSD + OpenResty 开发他们自己的公司产品。看来我有必要自己多攒些 ARM 板子自建一个测试集群。  
微博位置: 无
发布时间: 2015-12-06 00:22
点赞数: 22   转发数: 10   评论数: 4
发布工具: 微博 weibo.com

618:OpenResty Con 2015 大会上来自京东商城的开涛同学的分享《Nginx+Lua在京东商品详情页的大规模应用》给我留下了较深的印象。没想到京东的商品详情页这么复杂的页面都是使用 ngx_lua 对后端数据源进行数据整合和 redis 缓存，同时在 Lua 里面使用 lua-resty-template 模版引擎库来生成 HTML。真是有趣。  
微博位置: 无
发布时间: 2015-12-04 22:16
点赞数: 21   转发数: 38   评论数: 5
发布工具: 微博 weibo.com

619:在 Mac OS X 上面用 qemu-system-arm 把 Pidora 系统给跑了起来，感觉挺好玩的，但很快就发现这个镜像只能用 ARM11 这种 CPU 运行，而这种 ARM CPU 是对 data unalignment 不敏感的，设置了 /proc/cpu/alignment 也没用。这不能满足我的测试需要呀。回头继续寻找支持 ARM9 或 ARM10 的 Linux 镜像……  
微博位置: 无
发布时间: 2015-12-01 22:09
点赞数: 3   转发数: 6   评论数: 6
发布工具: 微博 weibo.com

620:想在 Amazon EC2 上找一个 ARM 的虚机镜像加入到我的 openresty 测试集群，竟然没有找到。Google 到的一些 Ubuntu for ARM 的 AMI IDs 也不复存在。敢问哪位兄台有现成的 AMI ID 可以分享？多谢，多谢！  
微博位置: 无
发布时间: 2015-11-30 18:07
点赞数: 4   转发数: 2   评论数: 8
发布工具: 微博 weibo.com

621:从 NGINX 1.9.5 开始取消了子请求（subrequest）的数量限制，原来每个主请求下面最多只能挂 200 个子请求同时跑，现在则没有此限制，而只有一个对子请求递归深度的限制，即最多只能递归 50 层。这个递归深度在真实场景中不太可能突破，除非故意玩递归子请求。比如下图中的例子发了 1000 个并发子请求。  原图 
微博位置: 无
发布时间: 2015-11-26 21:31
点赞数: 10   转发数: 19   评论数: 4
发布工具: 微博 weibo.com

622:把 GitHub 仓库的语言标签搞对之后，GitHub Awards 上的语言排名等东西就可以玩了。openresty 这个 GitHub 帐户目前的 C 语言排名是三藩第5，全美第10， 世界第25（见下图）。咱这个帐户团结了 openresty 社区许多人的力量！原始网页在这里：http://t.cn/RUrC2SQ  原图 
微博位置: 无
发布时间: 2015-11-26 21:07
点赞数: 36   转发数: 13   评论数: 4
发布工具: 微博 weibo.com

623:ngx_lua 模块的 balancer_by_lua* 指令（来自 GitHub 分支 balancer-by-lua）现在终于可以和 NGINX 标准的后端连接池（通过 keepalive 配置指令开启）一起工作了。多谢 @Lance 的报告和 @大豆浆__年轻的大叔 的补丁。  原图 
微博位置: 无
发布时间: 2015-11-25 21:25
点赞数: 14   转发数: 9   评论数: 3
发布工具: 微博 weibo.com

624:刚刚创建了 openresty-devel 邮件列表供讨论 OpenResty 自身开发的细节（主要面向 OpenResty 开发团队）：http://t.cn/RU1MoCo 欢迎感兴趣的同学加入。不过，这个地儿只允许英文发帖哈 :)  
微博位置: 无
发布时间: 2015-11-23 23:41
点赞数: 10   转发数: 4   评论数: 0
发布工具: 微博 weibo.com

625:经过三个多月的努力，OpenResty 1.9.3.2 正式版刚刚发布。下载位置：http://t.cn/RLzjJyd 完整的更动列表：http://t.cn/RL37A9A 发布公告在这里：http://t.cn/RU1ffAE 感谢所有的贡献者和用户！这次发布的亮点，一是 Win32 的支持，一是 *_by_lua_block {} 指令。下一个正式版应该会有更多新特性。  原图 
微博位置: 无
发布时间: 2015-11-23 22:40
点赞数: 27   转发数: 27   评论数: 9
发布工具: 微博 weibo.com

626:下周就要去北京参加 OpenResty 大会了，我得赶紧开始准备幻灯片了。  
微博位置: 无
发布时间: 2015-11-07 12:37
点赞数: 33   转发数: 38   评论数: 22
发布工具: 微博 weibo.com

627:OpenResty 1.9.3.2 RC2 刚刚发布以供社区公测。源码包的下载位置是：http://t.cn/RUXQpGK Win32 二进制包的下载位置是：http://t.cn/RUXQpGo 发布公告（含完整的更动列表）在这里：http://t.cn/RUXQpG9 亮点是对 MinGW gcc 工具链的全面支持。同时升级了 lua-resty-core 等很多组件。欢迎大家反馈。  原图 
微博位置: 无
发布时间: 2015-11-05 12:20
点赞数: 10   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

628:好吧，还债时间到了。刚刚在 GitHub 上面开源了 ngx_lua 模块的 balancer_by_lua* 特性：http://t.cn/RUxSIae 临时放在了 balancer-by-lua 这个公开的 git 分支里。目前没有正式的文档，但声明性的测试用例可以凑和着作文档（精确度肯定有保证，因为全部通过了）：http://t.cn/RUxSIag 欢迎大家反馈  原图 
微博位置: 无
发布时间: 2015-11-02 22:15
点赞数: 19   转发数: 61   评论数: 13
发布工具: 微博 weibo.com

629:我原来身边有一些工程师，甚至包括产品，总寄希望于通过 docker 这样的虚拟化技术来掩盖软件项目里的许多设计拙劣的地方，比如硬编码的绝对路径，不恰当且混乱的依赖项，不必要的难以移植的代码，侵入和污染式的安装，等等，总觉得虚拟化之后，这些恶心的地方就不再是问题，反正总有自己独立的根。汗啊  
微博位置: 无
发布时间: 2015-11-02 20:43
点赞数: 28   转发数: 62   评论数: 5
发布工具: 微博 weibo.com

630:忙了好几天，终于让 ngx_openresty 的构建系统可以直接支持 Windows 上的 MinGW/MSYS 工具链了。文档在这里：http://t.cn/RUxPKhm 我自己编出来的一个二进制的 Win32 版本的 OpenResty 包在这里：http://t.cn/RUxPKhR 欢迎大家试用和反馈。未来支持微软的 Visual Studio 的命令行工具链也是可能的。  原图 
微博位置: 无
发布时间: 2015-11-02 16:21
点赞数: 13   转发数: 29   评论数: 10
发布工具: 微博 weibo.com

631:GitHub 网站把我的很多纯 C 项目打上了 Perl 语言标记，真是冤啊。话说这些项目中只是有很多 Perl 驱动的 .t 测试文件而已，而且这些 .t 文件的绝大部分内容都是 __DATA__ 后面的东西，真正的 Perl 代码一般只有三四行而已。几年前我专门为此给 GitHub 提过 Pull Request，然后，然后就没有然后了……  
微博位置: 无
发布时间: 2015-10-30 16:11
点赞数: 10   转发数: 11   评论数: 13
发布工具: 微博 weibo.com

632:openresty.org 官网现在每天的请求数稳定在 1 万左右。由于目前采用的是 TiddlyWiki 模式，全站就一个 .html 文件（通过 JavaScript 在客户端进行页面调度和动态渲染），所以实际的 PV 数应该比这个更多一些。看来最近得花些时间把官网改版得稍微好看一点，更加好用一点，否则有点对不起这些个流量啊。  
微博位置: 无
发布时间: 2015-10-28 21:41
点赞数: 15   转发数: 2   评论数: 8
发布工具: 微博 weibo.com

633:OpenResty 1.9.3.2 RC1 刚刚放出来供社区公测。下载地址是： http://t.cn/RUqCWSf 发布公告在这里：http://t.cn/RUqCWSV 欢迎大家测试和反馈！感谢所有的用户和贡献者！  原图 
微博位置: 无
发布时间: 2015-10-28 21:19
点赞数: 14   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

634:酷狗音乐的 doujiang 同学今天提了一个 pull request，为 ngx_http_lua 模块的共享内存字典实现了 Redis 风格的队列 API：http://t.cn/RUqave7 这也是我计划已久的一个重要特性。希望也能早日完成 review 工作。酷狗音乐的同学好厉害   
微博位置: 无
发布时间: 2015-10-28 20:18
点赞数: 20   转发数: 19   评论数: 6
发布工具: 微博 weibo.com

635:酷狗音乐的 cuiweixie 同学最近提了一个 pull request，为 ngx_http_lua 模块实现了 ngx.semaphore API: http://t.cn/RUqXpJ2 希望能早日完成 review 以合并进主干。这个 semaphore 可用于 nginx worker 进程级别上跨请求的“轻线程”之间的同步操作，而既不会阻塞任何 OS 线程，也不会引入额外延时。  
微博位置: 无
发布时间: 2015-10-28 20:15
点赞数: 8   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

636:这两天在 VMWare Fusion Pro 8 里面安了一个正版的 Windows 10，显示在 Retina 屏上真是漂亮。在里面装了 Visual Studio 2015 社区版、MinGW、MSYS、git、Strawberry Perl 等等，配置了 cmd 字体为 Consolas，终于可以开搞 Windows 版的 OpenResty 了。感谢 @OpenRestyCon 的热心赞助！好久没玩 Win 了  原图 
微博位置: 无
发布时间: 2015-10-28 18:17
点赞数: 18   转发数: 5   评论数: 11
发布工具: 微博 weibo.com

637:经过和 NGINX 公司的工程师不断地来回反复讨论，最后终于决定由我把新的 nginx wiki 网站上的 Lua 模块文档转换成了一个占位页，各个段落都附上外链，指向 GitHub 渲染的官方文档。原先老 wiki 的链接仍然有效，会自动进行跳转到新 wiki 的对应章节，比如 wiki.nginx.org/HttpLuaModule#Installation  
微博位置: 无
发布时间: 2015-10-26 20:32
点赞数: 16   转发数: 16   评论数: 4
发布工具: 微博 weibo.com

638:细细地读一本好书，我感觉是打发工作时间的最惬意最富足的方式之一。可惜经常会有高优先级的其他事情得处理。  
微博位置: 无
发布时间: 2015-10-24 09:25
点赞数: 17   转发数: 1   评论数: 16
发布工具: iPhone 5s

639:话说微软自家的 VC 编译器在编译我的各个 Nginx C 模块的时候，时常能给出一些 clang 和 gcc 都没有的警告信息。其中有的是误报，有的则真的可以帮助改进我的 C 代码。我有一位老外贡献者总是很积极地用 VC 编译我的代码仓库里的最新版，一有问题就提补丁，省了我自己买 Windows 的许可证了   
微博位置: 无
发布时间: 2015-10-23 23:00
点赞数: 15   转发数: 11   评论数: 4
发布工具: iPhone 5s

640:我其实很烦那些非要用 C++11 的东西，因为作为多年前曾经被迫工作在 RHEL 4 这样的老系统上的 PE，对解决在老环境中编译的各种问题的痛苦，至今记忆犹新。我自己就尽量使用 C，而且尽量使用 C89 标准，毕竟这种时候没必要耍酷。“与人方便，便是与己方便”。可移植性和兼容性有时候真的很重要。  
微博位置: 无
发布时间: 2015-10-23 18:39
点赞数: 18   转发数: 29   评论数: 15
发布工具: 微博 weibo.com

641:Intel 前几天以 BSD 许可证开源了他们做了多年的一个基于混合自动机的正则引擎库，叫做 Hyperscan：http://t.cn/RUZUwkK 号称可以支持几万正则模式的并行匹配，还有流式匹配功能。这是要抢我 sregex DFA 引擎的地盘呀！这个库规模很大，strip 后还有近 10MB. 运行时是用 C 写的，编译器是用 C++11.  原图 
微博位置: 无
发布时间: 2015-10-23 18:16
点赞数: 6   转发数: 41   评论数: 7
发布工具: 微博 weibo.com

642:Mozilla rr 4.0 刚发布：http://t.cn/RUZLFXa 首次可靠地支持反向回放，我试了一下，实在太酷了。rr 在我的 VMWare Fusion Pro 上跑的 Fedora Linux 里面工作良好，多亏了 VMWare 虚拟化了 rr 所需的那部分 Intel CU 的 Hardware Performance Counter. 现在 rr 也有完整的 x86_64 支持！调试神器！  原图 
微博位置: 无
发布时间: 2015-10-23 18:04
点赞数: 6   转发数: 24   评论数: 4
发布工具: 微博 weibo.com

643:昨儿给 ngx_stream_echo 模块添加了 echo_discard_request 指令命令，这样配合原有的 echo_sleep 指令可以用来简单而高效地摸拟“黑洞”型的 TCP 服务了，比如 netcat（nc）和 syslog-ng（TCP 界面）。简单地压测比较了一下和我的 Fedora 22 系统中的 nc 服务器，CPU 使用率低很多，内存占用也更小。  原图 
微博位置: 无
发布时间: 2015-10-23 12:31
点赞数: 3   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

644:这两天给 ngx_stream_echo 模块实现了简单的 TCP 请求读取功能，添加了 echo_read_bytes 和 echo_read_line 等配置指令，与原有的输出指令搭配使用可以实现一些简单的交互功能了（见下图中的示例）。另外，还把 nginx 的 http 子系统中的 lingering close 功能给移植过来，这样就不用担心 RST 包了。  原图 
微博位置: 无
发布时间: 2015-10-21 23:17
点赞数: 12   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

645:刚把我跑在 VMWare Fusion Pro 里的 Fedora 22 虚机所使用的内核 IO 调度器，从默认的 CFQ 改成了 Noop ，希望虚机里的文件 IO 的性能可以更好一点。  
微博位置: 无
发布时间: 2015-10-18 22:20
点赞数: 3   转发数: 0   评论数: 10
发布工具: 微博 weibo.com

646:今天为 ngx_stream_echo 模块实现了 echo_duplicate, echo_sleep 和 echo_flush_wait 这三条配置指令（基本用法见下图）。它们主要移植自 ngx_http_echo 模块。在原有的代码基上实现它们还是比较容易的。下面即将要添加的新功能自然将集中在 TCP 请求的读取方面了。这个模块可以继续作为模块开发样版。  原图 
微博位置: 无
发布时间: 2015-10-18 22:01
点赞数: 9   转发数: 14   评论数: 5
发布工具: 微博 weibo.com

647:刚看了一下，openresty 中文邮件列表的存档里面共有 2190 个主题，而 openresty-en 英文列表也有 1064 个主题。我应该每个主题都有认真的回复，其中个别热帧我还回复了不止一封；且很多回复还比较长。想想这些年，这也是好大的工作量呀。后面得把这些资料整理汇总成册出版出来才好，可以让更多人受益。  
微博位置: 无
发布时间: 2015-10-17 21:43
点赞数: 19   转发数: 16   评论数: 7
发布工具: 微博 weibo.com

648:我的 Test::Nginx::Socket 测试框架类支持通过子类继承来扩展和定制其测试语言（DSL）。这种方式非常适合用于 OpenResty/Nginx 应用的回归测试，可以根据特定的场景进行定制和抽象，并脱糖为 Test::Nginx::Socket 已经支持的基本语法。今天我又利用这个特性来简化对 NGINX stream 类型 C 模块的测试。  原图 
微博位置: 无
发布时间: 2015-10-16 16:54
点赞数: 6   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

649:在@王院生的雨林 温铭等很多同学的努力下，第一届 OpenResty Con 大会终于要在下个月（11 月）14 号在北京举办啦！欢迎大家登录 www.iresty.com 网站报名参加大会：OpenResty Con 2015 大会邀请了多位重量级演讲嘉宾，包括国际友人。到时候我也会作一个分享。特别要感谢一下大会所有的赞助商！  原图 
微博位置: 无
发布时间: 2015-10-14 23:58
点赞数: 14   转发数: 51   评论数: 11
发布工具: 微博 weibo.com

650:TrafficServer 的 Lua 插件提供的 Lua API 看着有些像 ngx_lua 的 Lua API ：http://t.cn/Ry1JWPD 但貌似 TS-Lua 并没有提供类似 cosocket、timer 和 light thread 这样的高级特性？  
微博位置: 无
发布时间: 2015-10-14 21:41
点赞数: 4   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

651:刚刚把最近写的一些微博手译成了英文，又贴到了我的 Twitter 帐户上。144 个英文字母确实远不及 144 个汉字表达力强啊，真是考验我的英文缩略功力……144 个汉字几乎是一篇小短文了，呵呵。使用自然语言进行分享，自然受限于特定的自然语言，没有办法的事情。语言决定了（常规）逻辑思维的边界。  
微博位置: 无
发布时间: 2015-10-14 15:09
点赞数: 12   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

652:Twitter 的 Caitie McCaffrey 在 Strange Loop 2015 大会上所作的“Building Scalable Stateful Services”分享还是挺有意思的。她的演讲视频在这里：http://t.cn/Ry8eMUY 难得见到侃侃而谈的女性工程师。  
微博位置: 无
发布时间: 2015-10-14 11:18
点赞数: 6   转发数: 53   评论数: 7
发布工具: 微博 weibo.com

653:我一直想能够比较精确地对常见 CPU 的各种型号的芯片进行建模和仿真，这样便于对机器指令级别的性能的微观方面作出解释，毕竟现代微处理器已经变得极复杂，定性分析经常像“科学算命”。当然一些强大的 CPU 提供了 Hardware Performance Counter 来暴露内部的一些统计信息，但感觉还不够全面和精细。  
微博位置: 无
发布时间: 2015-10-13 21:43
点赞数: 8   转发数: 11   评论数: 3
发布工具: 微博 weibo.com

654:我的 mockeagain 工具还可以做更多事情，比如还可以检查水平触发的事件模式下因为没有及时删除不关心的读写事件而导致的事件循环的热空转消耗（这也算是 I/O 多路复用编程中的一类常见错误）。这其实就是搞了一下虚拟的事件 I/O 层，有些像 Valgrind 虚拟了一个 CPU 等系统，可以做很多有趣的事情。  
微博位置: 无
发布时间: 2015-10-13 21:24
点赞数: 15   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

655:花了两天工夫写了一个 ngx_stream_echo 模块，开源在了 GitHub 上面：http://t.cn/RyuBnHy 目前只支持 echo 和 echo_send_timeout 这两条配置指令。已经通过第一批测试用例。后面再添加 echo_flush、echo_sleep 等等更多的配置指令。所谓的 nginx stream 模块其实就是传统 http 模块的深度阉割版。  原图 
微博位置: 无
发布时间: 2015-10-13 18:17
点赞数: 9   转发数: 18   评论数: 5
发布工具: 微博 weibo.com

656:NGINX 的 stream 子系统相比 http 子系统缺少很多基础设施，比如没有 NGINX 变量，没有提供 log 阶段的处理程序注册。access 和 limit conn 阶段也只能有一个处理程序，这意味着只能有一个模块在这样的阶段注册成功。我猜 NGINX 官方也不想一开始就搞得太完整，估计是想按照实际需求，慢慢地加东西。  
微博位置: 无
发布时间: 2015-10-12 23:22
点赞数: 7   转发数: 15   评论数: 4
发布工具: 微博 weibo.com

657:前不久和业内一位人士交谈时，对方问我是如何组织和管理我的包括 OpenResty 在内的开源项目的。我说，像 OpenResty 核心组件这样的关键项目，我坚持搞“君主独裁”和“中央集权”，因为这种组织形式最有效率，同时也确保质量；而那些无关紧要的开源项目，则可以放手搞“民主共和”乃至“无政府主义”。  
微博位置: 无
发布时间: 2015-10-12 16:17
点赞数: 24   转发数: 8   评论数: 7
发布工具: 微博 weibo.com

658:现在很多语法分析库都喜欢把词法规则也融入到文法定义中。除了定义起来方便以外，另一大好处是，对于自顶向下的分析算法（比如递归下降）还可以用文法分析的上下文来指导词法分析，进行某种程度的上下文有关的词法分析。我的支持多正则匹配的 sregex DFA 在这种场景下变得特别有用，可以加速分支选择。  
微博位置: 无
发布时间: 2015-10-11 16:54
点赞数: 1   转发数: 12   评论数: 3
发布工具: 微博 weibo.com

659:昨天在读书时意识到，Kleene 的从 DFA 生成正则表达式的算法，完全可以用于从正则反向生成能为该正则匹配的（或不匹配的）随机文本字符串。概率分布可以做到非常均匀，还能精确控制文本长度。Kleene 构造本身的算法复杂度较高，但一旦把 DFA 的路径集合构造完毕，随机生成海量的文本样本就很轻松了。  
微博位置: 无
发布时间: 2015-10-11 16:30
点赞数: 5   转发数: 13   评论数: 1
发布工具: 微博 weibo.com

660:先前在把 git 配置中的 diff.algorithm 设置为 patience 算法之后，查看较大的补丁的时候，感觉终于好多了，呵呵。  原图 
微博位置: 无
发布时间: 2015-10-11 16:10
点赞数: 15   转发数: 15   评论数: 3
发布工具: 微博 weibo.com

661:@刘鑫Mars 老师曾跟我念叨过对 JSON 进行差异比较的问题。感觉该问题可以划归为一般的树状数据结构的差异比较，在回归测试中倒常见。Perl 的测试工具链提供的深度比较生成类似 XML XPath 表达式的比较结果（见下图一），而我更喜欢生成归一化的序列化文本，再作 diff，这样有更多的上下文（如下图二）  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-10-11 15:57
点赞数: 10   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

662:多年来我一直很尊敬那些玩转 lambda calculus 和 functional programming 的人，因为他们习惯于用新奇的方式来思考和表达计算。计算世界总是需要更多的 DNA 和基因来不断向前演进的 :)  
微博位置: 无
发布时间: 2015-10-11 12:13
点赞数: 17   转发数: 17   评论数: 4
发布工具: 微博 weibo.com

663:真正有前途的技术方向应该是那些可以直接鼓励工程师学习更多计算机科学和工程基础知识的技术。比如以 dtrace 为代表的动态追踪技术可以鼓励学习更多的系统实现细节，而领域内小语言的 JIT 编译器可以鼓励学习和实践 CPU 机器指令编程和编译优化算法。好的技术应该鼓励大家对 CS 的融会贯通和学以致用。  
微博位置: 无
发布时间: 2015-10-11 11:38
点赞数: 54   转发数: 126   评论数: 14
发布工具: 微博 weibo.com

664:最近两年一直感觉即时（JIT）编译技术可以成为系统工程师提升性能的秘密武器，特别是针对具体问题领域的高度定制的 JIT 编译器。当然，JIT 也有缺点，比如增加了系统的复杂性和调试的难度，同时为了跨平台需要做更多工作。无论如何，极致性能都源于“特化”，向上针对业务模型，向下针对硬件体系结构。  
微博位置: 无
发布时间: 2015-10-11 11:16
点赞数: 15   转发数: 17   评论数: 5
发布工具: 微博 weibo.com

665:“作为一名开源软件开发者，不要害怕索要赞助，只要你的历史成绩还不错。你会找到很多机会，即使是在大公司中；你自己都会对此感到惊讶。而另一方面，如果你没有什么理想，只一心只想着钱，那么还是放弃这条道路吧，你不会成功的。有很多比开源更容易的赚钱途径。” -- LuaJIT 的作者 Mike Pall  
微博位置: 无
发布时间: 2015-10-09 15:33
点赞数: 43   转发数: 20   评论数: 5
发布工具: 微博 weibo.com

666:在 Sony Digital Paper 上 review 书籍还是挺方便的。下午在游乐场陪宝宝玩的时候就用笔在 Di Pa 上批注完了《OpenResty 最佳实践》一书近 1/4 的篇幅，做了很多改动，很爽。后面再一齐更新到 GitHub 上面去。  
微博位置: 无
发布时间: 2015-09-26 22:18
点赞数: 32   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

667:我在想程序员如果只盯着一个或很少的几个编程语言和工具一直用一直用，很容易反过来被这些工具影响和改变，被扭曲和限制。从这个意义上讲，“每年学习一门新语言”还是非常有积极意义的，可以有助于保持程序员自身的超然、中立和独立。当然，如果每年自己还能自己创造一门怪异的新语言就更好了   
微博位置: 无
发布时间: 2015-09-23 09:34
点赞数: 45   转发数: 27   评论数: 16
发布工具: iPhone客户端

668:那天深航的飞机延误了九个多小时，于是我一鼓作气，在机场和飞机上写了很多代码。我的 sregex DFA 编译器生成的 C 代码终于可以通过 gcc 和 clang 的 -Wall 检查了。真不容易。新版 gcc 的 -Wset-but-unused-variable 警告对于代码生成器来说，还是挺难搞的，需要较复杂的变量依赖关系分析和读写追踪。  
微博位置: 无
发布时间: 2015-09-22 17:44
点赞数: 19   转发数: 4   评论数: 10
发布工具: iPhone客户端

669:再接再厉，我又针对输出代码大小，给 sregex DFA 编译器添加了一个简单优化，即将实现代码完全相同的“error state”进行合并和共享。这样 sregex DFA 为 ngx_lua 模块的 *_by_lua_block 配置指令生成的（高度简化了的） Lua lexer 的 C 代码，就从 6089 行下降到了 5720 行，缩小了 6%. 积少成多！  
微博位置: 无
发布时间: 2015-09-18 23:16
点赞数: 10   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

670:我又给 sregex DFA 编译器实现一个简单的 dead code elimination 优化，即将恒为 -1 的子匹配捕获字段在中间 DFA 状态中直接抹去，毕竟把 -1 这个常数值费劲地在各个 DFA 中间状态之间传来传去并没什么意思。这个优化在生成的 C 代码中干掉了很多赋值语句。ngx_lua 的那个 lexer 代码量减少了近 60% :D  
微博位置: 无
发布时间: 2015-09-18 00:21
点赞数: 12   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

671:对于很大的 C 函数，gcc/clang 的优化能力下降很多。昨晚给我的 sregex DFA 编译器引入了一个极简单的 dead code elimination，然后拿 ngx_lua 的 *_by_lua_block 所使用的 lexer 测试，结果输出的 C 代码量仅下降了 0.4%，但 gcc/clang -O 生成的 x86_64 机器代码却缩小了 13% ~ 19%，效果非常显著。  
微博位置: 无
发布时间: 2015-09-17 10:21
点赞数: 6   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

672:最近为 ngx_lua 模块实现了一种新类型的配置指令，比如 content_by_lua_block. 这种指令允许直接在 nginx.conf 中内联 Lua 代码而不必将之置于 Nginx 配置字符串常量中，从而避免了对 Lua 代码里的特殊字符进行恶心的转义。比如下图中的例子。这得益于 Nginx 配置文件加载器允许模块自定义局部解析器。  原图 
微博位置: 无
发布时间: 2015-09-14 23:19
点赞数: 26   转发数: 15   评论数: 8
发布工具: 微博 weibo.com

673:目前 sregex DFA 原型编译器（把正则编译为独立的 C 函数）距离实用还有一些距离，主要问题是生成的 C 代码还是有些太大。下面该项目的开发重点将放在实现 DFA minimization, constant propagation, dead code elimination 这些优化算法上。这些都很经典了。改 goto 方式为表驱动也会减少目标代码量。  
微博位置: 无
发布时间: 2015-09-14 12:25
点赞数: 3   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

674:这两天我给 sregex DFA 的原型编译器添加了对多个正则同时匹配的支持。提交的补丁在这里：http://t.cn/RytMeE3 这个特性有一些像 RE2 的 set API，但不仅会返回匹配的正则 ID，同时还会返回该正则所有的子匹配捕获；另一个区别我们只返回第一个匹配的优先级最高的正则。这个东西可用于构造 tokenizer.  
微博位置: 无
发布时间: 2015-09-14 12:13
点赞数: 6   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

675:很希望 flex 这样的词法分析器生成器能够在 longest token match 语义之外再支持Perl 正则那样的顺序优先级。这样我就可以很容易地表达 “unanchored match”（正好我正在做的 ngx_lua 的一个新特性需要它）。现在我只能继续倒腾一下我的 sregex DFA 编译器来从正则生成可以包含在 ngx_lua 中的C代码。  
微博位置: 无
发布时间: 2015-09-13 16:51
点赞数: 7   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

676:经常看到我的很多的 GitHub 仓库里面都还积压着许多来自其他贡献者的 pull request（PR）等待 review，我就觉得很对不住他们。回想我大学时最初玩开源时，只要一收到用户补丁或问题报告，我就欣喜若狂。而我现在也只能勉强能够处理每天新进来的 PR. 看来我得经常腾出一两个整周来还“旧债”。不容易。  
微博位置: 无
发布时间: 2015-09-13 16:36
点赞数: 17   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

677:这几天集中力量编写了 lua-resty-limit-traffic 这个纯 Lua 库，用于在 OpenResty 的上下文中对流量进行频度和并发度的限制和调控。实现上参考了 NGINX 官方的 ngx_limit_req 和 ngx_limit_conn 模块。代码开源在了 GitHub 上面：http://t.cn/Ry4Suve 已经添加了比较完整的文档。欢迎大家审阅和试用。  
微博位置: 无
发布时间: 2015-09-09 16:58
点赞数: 13   转发数: 34   评论数: 7
发布工具: 微博 weibo.com

678:打算给 ngx_lua 模块的共享内存字典添加比较完整的 redis 数据结构的支持。同时我们也可以照搬 redis 的命令语法。不过这样一来我就有些担心 nginx 简单的 slab 分配器能否扛得住内存碎片问题了。或许我该在这里引入一个 generational copying GC？  
微博位置: 无
发布时间: 2015-09-08 18:24
点赞数: 10   转发数: 17   评论数: 8
发布工具: 微博 weibo.com

679:最近开始尝试一种新的读书方法，即大声朗读正文并录音，后经音频软件优化处理，再生成 MP3 文件导进手机。平时出去玩的时候可以反复听。当然了，那些不好读的部分得跳过，比如代码片段或者数学公式啥的。同时这也算是既练朗读又练听力了。这比抄书轻松多了；而且如今岁数大了，不能再长时间伏案了。  
微博位置: 无
发布时间: 2015-08-29 14:58
点赞数: 15   转发数: 56   评论数: 8
发布工具: 微博 weibo.com

680:好吧……昨儿出去玩的路上，手机放在口袋里滑了出去。因为手机开了飞行模式，无法追踪，以为永别了。没想到今儿早上我爸出门买菜时恰好遇到一老头儿在路边卖手机，还价还到 20 块人民币买了回来。我一看，正是我的手机……太搞了。  
微博位置: 无
发布时间: 2015-08-29 14:40
点赞数: 61   转发数: 18   评论数: 42
发布工具: 微博 weibo.com

681:面向一般的下游 TCP 协议的 ngx_stream_lua 模块应该会在今年完成开发。幸运的话，也可以在今年开源。这应该算是 OpenResty 的一个比较重要的里程碑了，可以比较大地拓展我们的应用场景。当然，在此之前，balancer_by_lua 和 ssl_certificate_by_lua 等已经实现的新特性会先包含进 OpenResty 中来。  
微博位置: 无
发布时间: 2015-08-19 09:21
点赞数: 30   转发数: 35   评论数: 15
发布工具: 微博 weibo.com

682:刚刚注意到我的 GitHub 上的 followers 数超过了 3 千。好吧，这些哥们和姐们都愿意忍受我的高频度提交，呵呵。不过话说我最近的提交频度下降了非常多，大部分时间都花在了爬山和思考算法上面……  
微博位置: 无
发布时间: 2015-08-17 21:56
点赞数: 39   转发数: 0   评论数: 13
发布工具: 微博 weibo.com

683:OpenResty 1.9.3.1 正式版刚刚发布。下载位置是：http://t.cn/RLzjJyd 完整的更动列表在这里：http://t.cn/RL37A9A 感谢所有的贡献者和用户！下一个发布应当会有更多新功能，呵呵。  原图 
微博位置: 无
发布时间: 2015-08-12 18:38
点赞数: 29   转发数: 26   评论数: 7
发布工具: 微博 weibo.com

684:刚刚修复了 openresty.org 官网上的支付宝捐款按钮，同时付上了支付宝捐款用二维码（也贴到了下面的附图）：http://t.cn/RLmgEwo 感谢大家对 OpenResty 及周边开源项目的支持！  原图 
微博位置: 无
发布时间: 2015-08-11 21:19
点赞数: 18   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

685:书鑫老师给了我一些从生产 WAF 系统提取出来的极耗 CPU 的正则及对应的输入数据样本。我用这些样本对 PCRE/PCRE2 JIT、RE2 和我自己的 sregex DFA 进行了性能比较（见下面几张图）。显然对这组样本 DFA 方法完胜回溯方法和 NFA 仿真方法。当然，NFA 仿真算法至少不对这些样本感冒，但还是不及 DFA 快。  [组图共3张] 原图 
微博位置: 无
发布时间: 2015-08-10 17:23
点赞数: 8   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

686:由于幂集构造，DFA 倾向于比 NFA 更加复杂。为了方便调试我的 sregex DFA 引擎，我给引擎添加了一个功能，可以记录匹配过程中实际走过的 DFA 状态和 DFA 边，然后调用 Graphviz 绘制出对应的 DFA 子图。比如正则 /(a{3})+/ 匹配字符串 "aaaaa" 对应的 DFA 子图如下图一。图二是正则对应的完整的 DFA.  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-08-10 16:33
点赞数: 4   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

687:从高中时代开始，只要不太在乎性能，我就最喜欢拿 Perl 来写东西，没有之一。可以想到哪儿写到哪儿。有些算法可能开始还没想明白，但用 Perl 写着写着就清晰起来了。所以用它来构造一些较精密的 C/C++ 程序的快速原型确实非常趁手。最近我目前用它来构造 sregex DFA 正则引擎的原型就是这种畅快感。  原图 
微博位置: 无
发布时间: 2015-08-10 14:23
点赞数: 17   转发数: 8   评论数: 7
发布工具: 微博 weibo.com

688:经过近两周的不懈努力，终于把 Becchi 和 Crowley 提出的所谓“counting FA”（即“计数有穷自动机”）整合进了我的 sregex DFA 原型引擎中，并且通过了 sregex 整个测试集。目前只实现了 x{n} 这种最简单的计数约束类型。x{n} 并不依赖于正则本身，而是通过对正则 VM 的字节码序列进行重复结构发现。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-08-10 12:40
点赞数: 20   转发数: 20   评论数: 6
发布工具: 微博 weibo.com

689:刚刚花费了很多笔墨向 PCRE JIT 的作者 Zoltan 老师讲解了我的支持子匹配捕获的 DFA 算法。和 Zoltan 老师交流一直非常投缘，有一种奇妙的惺惺相惜的感觉。和自己敬仰的大牛进行比较深入的沟通和交流是一种莫大的享受，即使从未谋面。  
微博位置: 无
发布时间: 2015-08-06 22:55
点赞数: 37   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

690:今晚回邮件回到手抽筋。有一封邮件用中文写了一半，然后贴了一大段示例代码，结果忘了当前语言，用英文写完了下一半，我汗。  
微博位置: 无
发布时间: 2015-08-06 22:22
点赞数: 21   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

691:OpenResty 1.9.3.1 RC1 刚刚发布供社区试用和测试。下载地址是： http://t.cn/RLpQp8W 发布公告在这里：http://t.cn/RLpQp8O 欢迎大家反馈问题！这是第一个基于 nginx 1.9.x 核心的 OpenResty 发布，从而我们可以享受到最新的 nginx 1.9.x 的所有新功能。  原图 
微博位置: 无
发布时间: 2015-07-31 17:12
点赞数: 18   转发数: 21   评论数: 3
发布工具: 微博 weibo.com

692:SourceLair 紧跟 GitHub 之后也开始拥抱 OpenResty http://t.cn/RLK3Cxc 切换到 OpenResty 之后，他们看到了显著的性能提升，引用原文是：“great improvement in the speed of our reverse proxy and a big reduction in the times a user would see the hibernated server page”。  
微博位置: 无
发布时间: 2015-07-28 14:12
点赞数: 19   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

693:Becchi 和 Crowley 的论文让我有醍醐灌顶之感。他们不仅落实和验证了我之前的计数状态机的模糊设想（从而克服了 DFA 最惧怕的大字符区间的计数约束），同时还展示了只要状态机支持子匹配捕获，就能轻松地实现 DFA/NFA 引擎一直逃避的 backreference 特性（即 \1, \2 这种东西）。re.pl 的春天要来了。  
微博位置: 无
发布时间: 2015-07-27 16:57
点赞数: 9   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

694:回溯引擎害怕疯狂回溯，而 DFA 引擎则害怕大字符区间的计数，比如正则 /a.{32}/。这种类型的正则会触发指数级的 DFA 状态爆炸问题。下面第一张图是 re.pl 为正则 /_.{9}/ 生成的 DFA 示意图，极多的节点和边，美得像分形图案。该正则对应的 C 程序的性能相比其他引擎虽然还不错，但其内存代价大多了。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-07-27 16:26
点赞数: 3   转发数: 10   评论数: 18
发布工具: 微博 weibo.com

695:用一点 Perl 搞了个简单的网页生成器，汇总了我的正则引擎性能测试集的最新测试结果，涵盖了 PCRE 解释器与 JIT 编译器、PCRE2 解释器和 JIT 编译器、Google 的 RE2 以及我的 SRegex DFA 原型 re.pl：http://t.cn/RLSSk0H 这个网页会经常更新，同时会添加越来越多的用例。希望我的 sregex 越来越快。  
微博位置: 无
发布时间: 2015-07-26 12:21
点赞数: 22   转发数: 23   评论数: 5
发布工具: 微博 weibo.com

696:RE2 正则库的原作者，Russ Cox 老师撰写的“Implementing Regular Expressions”系列文章这几年对我帮助很大。我的 sregex 库主要就是基于这个系列里描述的思路来搞的。Russ 站在了 Thompson 和 Pike 这些大师的肩膀上，把 NFA 仿真算法及 DFA cach 等方法进行了很好的总结。但也有明显的缺憾和局限。  
微博位置: 无
发布时间: 2015-07-26 11:35
点赞数: 6   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

697:现在看到的每一大类的正则算法都有自己的软肋。回溯算法对输入敏感，很容易触发指数级别的病态行为，轻则崩掉，重则耗尽 CPU；同时回溯无法实现流式处理。NFA 仿真算法虽然保证 O(n+m)线性效率，但绝对的平均性能很差。DFA 算法绝对性能好，同时线性的时间复杂度，但空间上在最坏情况下却会指数爆炸。  
微博位置: 无
发布时间: 2015-07-26 11:14
点赞数: 8   转发数: 16   评论数: 5
发布工具: 微博 weibo.com

698:注意到 ACM 数字图书馆里不少论文也没有全文可供下载，花钱买的 ACM 帐户也就没有那么值了……  
微博位置: 无
发布时间: 2015-07-24 21:28
点赞数: 2   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

699:原先我们只是针对单字节的情形使用 memchr() 进行快速搜索，而多字节主要还是依赖编译器生成的 jump table 来弄。今天从 PCRE 正则引擎借用了一下 bitmap 的方式来进行多字节的快速查找。添加了此优化这后，下面两张图中的正则例子，sregex DFA 有了成倍的性能提升，终于基本不输于其他正则引擎了。  [组图共4张] 原图 
微博位置: 无
发布时间: 2015-07-24 00:07
点赞数: 10   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

700:前面那个 DFA 状态最小消耗输入字符数的分析所指导的优化，对于先前那个 /\b\w+nn\b/ 正则用例，也有可测量的性能提升（见下面）。现在在我的本上的匹配扫描速度终于可以超过 350MB/s 了，呵呵。  原图 
微博位置: 无
发布时间: 2015-07-22 21:56
点赞数: 6   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

701:刚又给我的 re.pl 生成的 DFA 添加了一种新的分析，即为每个 DFA 状态计算出达到该状态至少需要消耗的输入字符数。下图展示了一个这样的例子（对应正则 /abc/），每个节点里的 ∧= 后面的数就是计算出来的最小消耗数。这个信息可以用于优化那些需要往后看的正则断言，可以在目标代码中去掉一个 branch.  原图 
微博位置: 无
发布时间: 2015-07-22 21:28
点赞数: 6   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

702:刚刚又在所有的 0 宽度断言对应的目标代码片段中去除了一个 branch，现在对于上一条微博中给的那个正则表达式的测试用例，第一名 sregex DFA 与第二名 re2 之间又拉大了差距。要想程序跑的快，就得分支灭的尽 ;) 等未来我再给 DFA 引入更深入的分析算法之后，我们还可以每个 DFA 状态再灭一二个分支。  原图 
微博位置: 无
发布时间: 2015-07-22 12:22
点赞数: 7   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

703:今天把 \b 断言的实现稍微优化了一下，现在我的 DFA 编译器会根据上下文对 \b 断言检查进行化简。比如，如果下个字节总是 \w，则只检查前个字节；类似地，如果前个字节总是 \w，也只检查另一半。另外，使用 switch/case 对 \w 检查进行了改写。这样减少了不少分支，下面这个例子终于比 RE2 还要快了。  原图 
微博位置: 无
发布时间: 2015-07-22 00:30
点赞数: 13   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

704:对于我的 sregex DFA 引擎原型生成的很大的 C 输出，clang 3.5.0 的编译速度明显慢于 gcc 5.1.1. 同一个 30MB 的 C 函数，前者使用 -O1 优化选项还要 13 个多小时，而后者使用 -O3 也只需 40 分钟。clang 貌似把大部分时间都花在 register coalescer 上面，而 gcc 大部分时间都在算 dominance frontier  
微博位置: 无
发布时间: 2015-07-21 22:04
点赞数: 9   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

705:再接再厉，我又给 sregex DFA 引擎原型添加了个简单的优化，即对于较多分支的情况，在输出的 C 目标代码中使用 switch/case 语句。clang 和 gcc 会把 case 多于或等于 5 的 switch 语句编译为所谓的“jump table”，从而实现 O(1) 的时间开销，同时避免了 branch mis-prediction. 该优化的效果很显著。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-07-19 21:31
点赞数: 16   转发数: 19   评论数: 4
发布工具: 微博 weibo.com

706:下面三张图是另外三组性能测试结果，都是能适用 memchr 优化的正则例子（使用 gnuplot 自动绘制）。可以看到对于这些例子，sregex DFA 原型完胜了 PCRE 解释器、PCRE JIT 编译器，以及 Google 的 RE2 引擎。我不太明白的是，我分明记得 PCRE 和 RE2 都有 memchr 优化的，但在这些测试中慢得一踏糊涂。  [组图共3张] 原图 
微博位置: 无
发布时间: 2015-07-19 18:41
点赞数: 12   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

707:刚刚给我的 sregex DFA 正则引擎的原型实现又添加了个有趣的优化，即针对适用于 memchr() 单字节搜索的 DFA 状态，施用 memchr(). 由于 DFA 的确定性，不仅正则的起始状态可能适用该优化，中间的某些状态也可能适用。比如下图是正则 /d.*d/ 对应的 DFA，其中[1]、[3]、[6]号 DFA 状态都满足优化条件。  原图 
微博位置: 无
发布时间: 2015-07-19 17:04
点赞数: 1   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

708:今天终于让我的 sregex DFA 引擎的 Perl 原型直接吐完全独立的 C 代码了。它生成的 C 程序通过 gcc 优化编译生成二进制程序后，可以独立地执行正则匹配任务。我拿正则表达式 /(a|b)aa(aa|bb)cc(a|b)/ 对一个 5.1MB 的大字符串进行匹配，同时与 PCRE 和 RE2 这些正则引擎进行性能比较，还是非常乐观的。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-07-19 00:31
点赞数: 34   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

709:我用 1277 行 Perl 代码为 sregex 正则库实现的 DFA 引擎的原型，刚刚终于完全通过了 sregex 庞大的测试集（含子匹配捕获测试）。sregex 的测试集由 PCRE 官方测试集和 Perl 5 官方测试集构成，筛去了那些使用了 sregex 不支持的正则特性的用例。这是一个重要的里程碑，初步验证了我的这个 DFA 算法。  
微博位置: 无
发布时间: 2015-07-18 00:42
点赞数: 55   转发数: 22   评论数: 6
发布工具: 微博 weibo.com

710:非确定性是优化的大敌，去除就海阔天空。我注意到 sregex 在把正则转换为 DFA 之后，这个 DFA 其实就是经典的优化编译器算法中的控制流图（CFG），而 DFA 边上打的子匹配捕获的映射标签其实就是经典的数据流图（DFG）。这样的 DFA 可以很容易地转换为 SSA 形式，从而享受到所有传统的编译器优化算法。  
微博位置: 无
发布时间: 2015-07-17 11:13
点赞数: 9   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

711:给 DFA 添加子匹配捕获其实是相对容易的，直接在状态转换（或“边”）上添加捕获映射就可以了，类似编程语言里的变量赋值。真正困难的是给 DFA 添加 0 宽度断言的支持，比如 ^, $, \b。这些断言本质就具有非确定性，通常依赖于上下文。在 DFA 中不得不展开这种不确定性，于是产生“边”的组合爆炸。  
微博位置: 无
发布时间: 2015-07-16 23:16
点赞数: 6   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

712:调试正则引擎若没有 Graph viz 这样的自动绘图神器，必会痛苦不堪。如今可以看图说话，实是惬意。比如下面是 sregex 为正则 /.*\z/ 生成的 NFA 和 DFA 状态图（是的，我正在调试 Perl 官方测试集中一个使用了此正则的测试用例）。从图上能看到，我把子匹配捕获信息作为标签打在了状态转换的“边”上。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-07-16 21:42
点赞数: 12   转发数: 42   评论数: 4
发布工具: 微博 weibo.com

713:最新的 nginx 1.9.3 核心不再允许同一个 nginx.conf 文件里面定义多个 http {} 配置块。这意味着这个问题多多的故意没有文档说明的“黑暗特牲”的寿终正寝。之前不少 nginx 用户喜欢使用这个特性来在虚拟主机之上再玩状态隔离，可惜这种隔离有很多漏洞，包括输出过滤器啥的全局机制根本不可能被隔离。  
微博位置: 无
发布时间: 2015-07-16 12:13
点赞数: 12   转发数: 11   评论数: 2
发布工具: 微博 weibo.com

714:刚花了 1000 行 Perl 代码，为 sregex 新一代的 DFA 引擎构造了一个快速原型，根据 sregex 前端生成的正则 VM 字节码，构造出 DFA，再生成等价的 Perl 代码。除了正则断言和多正则并行匹配尚未实现之外，其他都可以工作了。测试集中相关的测试用例也都通过了。原型的实现在这里：http://t.cn/RLbdLv9  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-07-12 15:15
点赞数: 17   转发数: 44   评论数: 8
发布工具: 微博 weibo.com

715:貌似 OpenResty 又上 Hacker News 了，一天以内 openresty.org 有十万请求，10 GB 的流量。我一开始还以为服务器受攻击了……  
微博位置: 无
发布时间: 2015-07-12 13:41
点赞数: 38   转发数: 8   评论数: 10
发布工具: 微博 weibo.com

716:前些日子一直冥思苦想，终于设计出了一种算法，能让确定性有穷自动机（DFA）能够支持子匹配捕获，这样 sregex 流式正则引擎的匹配效率将有望超越 PCRE JIT 和 RE2，乃至接近 Ragel 这样的静态代码生成器（如果这个 DFA 内置 JIT 编译器的话）。下图是 sregex 为正则表达式 /ab|(a)/ 生成的 DFA 状态图  原图 
微博位置: 无
发布时间: 2015-07-10 23:08
点赞数: 39   转发数: 20   评论数: 6
发布工具: 微博 weibo.com

717:奇虎 360 的 moonbingbing 等热心用户正在编撰一本免费的电子书，题为《OpenResty 最佳实践》，在此向大家推荐之，虽然我还未及细看。地址在这里：https://www.gitbook.com/book/moonbingbing/openresty-best-practices/details 后面得空了我一定得仔细拜读一下。感谢他们的分享与贡献！  
微博位置: 无
发布时间: 2015-07-08 19:33
点赞数: 26   转发数: 99   评论数: 23
发布工具: 微博 weibo.com

718:今晚给我的 sregex 正则库添加了比较完整的 C API 的文档：http://t.cn/RLZBiQZ 欢迎大家反馈意见和建议。下面要开始好好优化一下这个库的实现，同时添加一些尚未实现的 Perl 正则特性 :D  
微博位置: 无
发布时间: 2015-07-04 23:01
点赞数: 4   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

719:OpenResty 正式版 1.7.10.2 刚刚发布。下载地址是：http://t.cn/RLzjJyd 完整的更动列表在这里：http://t.cn/RLzjJyg 更动日志的长度应该创记录了，毕竟有好几个月没有正式版发布了。如果不能访问上面的链接，请自觉翻墙。感谢所有的贡献者和用户！下一个版本将基于新的 nginx 1.9.x 核心。  原图 
微博位置: 无
发布时间: 2015-07-03 18:12
点赞数: 16   转发数: 39   评论数: 16
发布工具: 微博 weibo.com

720:PCER JIT 的作者 Zoltan 老师告诉我，他一直在实现新的正则优化策略，但新的优化将只会进入全新的 PCRE2，而不再进入经典的 PCRE 了。遗憾啊，得想办法推动 NGINX 支持新的 PCRE2 的 API 了。Zoltan 老师非常热情，主动提出给我答疑。我得好好拜师学艺，以便把我自己的 sregex 正则引擎做得越来越好。  
微博位置: 无
发布时间: 2015-06-30 21:08
点赞数: 20   转发数: 11   评论数: 6
发布工具: 微博 weibo.com

721:越来越喜欢 briss 这个 Java 应用了；最新版本貌似更好用了一些。若是没有它来给 PDF 进行自动剪边，PDF 格式的论文和图书放在 Sony Digital Paper 里看，字还是会太小。剪完边字就同步放大了，正好是眼睛舒服的大小。赞。  
微博位置: 无
发布时间: 2015-06-29 20:29
点赞数: 5   转发数: 14   评论数: 4
发布工具: 微博 weibo.com

722:OpenResty 1.7.10.2 RC1 刚刚发布。发布公告在这里：http://t.cn/R2gPmz6 下载地址在这里：http://t.cn/R2gPmza 欢迎大家测试反馈。访问不了的话，请自觉翻墙，呵呵。  
微博位置: 无
发布时间: 2015-06-24 22:19
点赞数: 10   转发数: 9   评论数: 9
发布工具: 微博 weibo.com

723:我的一位国外用户最近撰文介绍了一下他是如何使用 ngx_lua 模块最近开源的 ssl_certificate_by_lua 指令实现让 nginx 动态为 https 请求现生成对应的 SSL 证书的。这种玩法比我们公司还要激进一些，我们只是 lazy load 证书和私钥，而他干脆是 lazy generate，有趣。文章在这里：http://t.cn/R2uD88u  
微博位置: 无
发布时间: 2015-06-20 19:31
点赞数: 15   转发数: 30   评论数: 8
发布工具: 微博 weibo.com

724:GitHub 的工程师们今年使用 OpenResty 的核心组件 ngx_lua 重新架构了 GitHub Pages 这个在线产品。他们对新架构的性能、可扩展性以及简单性貌似都很满意。他们的架构师 Charlie Somerville 撰文分享了相关的经验：http://t.cn/R2Va1OE 作为 GitHub 的重度用户，我很高兴看到 GitHub 也在玩我的东西。  
微博位置: 无
发布时间: 2015-06-20 12:14
点赞数: 71   转发数: 138   评论数: 28
发布工具: 微博 weibo.com

725:折腾了几个小时，终于基于 Rime/Squirrel 的框架为 Mac 自定义了一个完整的五笔 98 输入法。克服了我原先那个版本的所有缺点，比如四码不能自动上屏以及标点也需要空格确认等等。Rime 才是给程序员玩的输入法，只需要搞搞 .yaml 配置文件就 OK 了；我直接编了一个简单的 Perl 脚本自动生成了这些文件。  
微博位置: 无
发布时间: 2015-06-19 23:01
点赞数: 19   转发数: 15   评论数: 10
发布工具: 微博 weibo.com

726:想把主要的工作环境迁移到 Mac OS X 系统上面来，还是太喜欢 Macbook 的 retina 屏了。但这前一直苦于没有现成的好使的五笔 98 输入法。幸好 google 了一下发现 Mac OS X 现在支持通过文本配置文件自定义新的输入法，类似 Linux 上面的 scim 和 ibus：http://t.cn/R2m8JRN 于是自己造了一个五笔 98  
微博位置: 无
发布时间: 2015-06-19 19:58
点赞数: 9   转发数: 9   评论数: 18
发布工具: 微博 weibo.com

727:VMWare Fusion Pro 7 在 OS X 上的性能果然惊艳啊，同一个 FreeBSD 虚机编译 OpenResty，相比在最新版的 VirtualBox 上，整体速度快了近 4 倍。而在 VMWare + Fedora 22 虚机上编 OpenResty，比 Mac OS X 宿主系统还要快得多，只需 14 秒多。真是有趣。看来 VirtualBox 还是有差距啊。  
微博位置: 无
发布时间: 2015-06-19 11:52
点赞数: 7   转发数: 8   评论数: 19
发布工具: 微博 weibo.com

728:用 Type::Tiny 模块可以在 Perl 里面进行可自定义的强类型编程，主要好处是类型检查（而非性能），特别是在构造较复杂的程序，比如一个编译器的时候。同时也可以很好地控制类型约束的边界，在特别需要动态语言的弱类型时也可以随意实现。让我使用纯粹的强类型语言从零构造一个复杂的编译器还是挺累的。  
微博位置: 无
发布时间: 2015-05-13 13:16
点赞数: 5   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

729:花了两天时间，基于 Perl 的 Pegex 为我的 Edge 语言实现了一个解析器。我上月手工移植的那些为数众多的 .edge 源码文件终于都可以成功通过语法检查了。当然，我修了不少笔误。使用尚不存在的语言编程的好处是可以怎么爽怎么写，完全没有拘束。到实现编译器的时候再固化和调整原先的随性设计就好了。  
微博位置: 无
发布时间: 2015-05-13 13:00
点赞数: 7   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

730:回国三周以来都没有看一眼我的 gmail 信箱，结果发现 inbox 积压了 300 封未读，绝大部分都是来自 OpenResty 用户和协作开发者的，有来自 GitHub issues 的，有来自 OpenResty 中英文邮件列表的，还有不少直接发到我信箱的。在家奋战了两天，终于把几乎所有新邮件都处理和回复完了。真辛苦。  
微博位置: 无
发布时间: 2015-05-08 14:33
点赞数: 14   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

731:最近尝试把我的 LZSQL 编译器中使用的 Moose 这款 Perl 面向对象框架替换为比较轻量级的 Moo 框架，同时迁移到了 Type::Tiny 这款轻量级的类型约束框架。测试显示编译器整体有了 40% ~ 50% 的性能提升。以后在基于 Perl 实现的编译器中就都沿用 Pegex + Moo + Type::Tiny 组合了。貌似 Mo 还更轻一些。  
微博位置: 无
发布时间: 2015-05-04 17:45
点赞数: 12   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

732:我现在也模仿 Intel 让 OpenResty 采取类似 tick-tock 的发布模式。tock 发布则是升级官方的 nginx 核心到最新的主线版，tick 则是包含 OpenResty 自己的重要新特效和更动。前者的版本号一般是提高前三段数字，而后者则是提高第四段数字，很好辨别。下一个 OpenResty 发布将是 tick，即 1.7.10.2 版。  
微博位置: 无
发布时间: 2015-05-02 11:48
点赞数: 5   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

733:最近在北京跟我的一位老朋友聊天，萌生了创建 OpenResty 软件基金会的想法，呵呵。这或许可以更好地支持和推动 OpenResty 社区的发展  希望日后有哥们给 OpenResty 提补丁，我也能给他发钱，嘿嘿。  
微博位置: 无
发布时间: 2015-05-02 11:18
点赞数: 30   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

734:啊，刚看到 Sony Digital Paper 又降价了，从 $999 降到 $799 了：http://t.cn/RvFPgqT 有点后悔买早了，但想想这几个月已经在上面精读了好几本技术图书和很多源码，多花 $200 也很值了，呵呵。  
微博位置: 无
发布时间: 2015-05-02 11:00
点赞数: 11   转发数: 7   评论数: 23
发布工具: 微博 weibo.com

735:回到国内，Google 被墙；翻墙不便，用回 Yahoo!   
微博位置: 无
发布时间: 2015-05-02 10:05
点赞数: 10   转发数: 10   评论数: 15
发布工具: 微博 weibo.com

736:在国内的这些日子把 Robert Love 的“Linux System Programming”一书在 Sony Digital Paper 上面精读完了。虽然大部分内容是我熟知的，但还是有不少特定于 Linux 和 glibc 的接口和行为细节是我第一次看到，非常欣喜，因为在日常工作中可以很好地利用上。和 Robert 的内核书一样，是深度有限的概览。  
微博位置: 无
发布时间: 2015-05-01 20:53
点赞数: 18   转发数: 16   评论数: 4
发布工具: 微博 weibo.com

737:我最近一直在为 CloudFlare 设计一门领域内小语言（DSL），用于表达 edge server 上的逻辑（或者说 CDN 等网关上的各种逻辑）。在应用场景上有些类似 Varnish 的 VCL，但要干净和优雅得多（至少我希望如此）。在设计上我吸收了多种不同语言的基因，比如 CLIPS, Prolog, Perl 6, PHP 等等。  
微博位置: 无
发布时间: 2015-04-13 12:23
点赞数: 20   转发数: 52   评论数: 19
发布工具: 微博 weibo.com

738:为了和 Ingy dot Net 老师交流，不得不重新玩起 IRC，用 screen + irssi 挂在 agentzh.org 服务器上。Ingy 喜欢自称是“IRC citizen”，没办法。  
微博位置: 无
发布时间: 2015-04-01 09:13
点赞数: 4   转发数: 2   评论数: 9
发布工具: iPhone客户端

739:今天给我的 code2ebook 项目的 src2html.pl 工具添加了对 --include-only=PATTERN 命令行选项的支持。对于在较大的源码树中挑出少量感兴趣的文件的场景非常有用。  
微博位置: 无
发布时间: 2015-04-01 08:50
点赞数: 11   转发数: 0   评论数: 1
发布工具: iPhone客户端

740:最近几周开始坚持每天早起。清晨精读一小时书后，再去小镇后山的 trail 散步半小时，然后再去上班，感觉精神好很多。公司离海边也近，偶尔也可以在海边溜一溜弯。最近一直在精读书鑫博士向我推荐的“Engineering a Compiler”这本教科书，很有收获。幸好有 Sony Digital Paper，不用天天捧着砖头书看。  
微博位置: 无
发布时间: 2015-03-25 09:30
点赞数: 35   转发数: 15   评论数: 13
发布工具: 微博 weibo.com

741:花了三天，ngx_lua 模块的 balancer_by_lua 终于通过我的第一批测试用例了。该指令可以直接用于 nginx.conf 的 upstream {} 配置块，支持直接用 Lua 编写 nginx upstream 模块。可以从配置文件读取 server 列表，或者直接动态生成 server 目标。全动态设计。支持现有的 ngx_proxy、ngx_fastcgi 等模块  
微博位置: 无
发布时间: 2015-03-24 09:12
点赞数: 25   转发数: 30   评论数: 8
发布工具: iPhone客户端

742:前一阵子林孜博士仿照 ngx_lua 模块的 ssl_certificate_by_lua 指令实现了全新的 ssl_session_fetch_by_lua 和 ssl_session_store_by_lua，支持用 Lua 来操纵基于 SSL session ID 的缓存过程。前者支持 cosockets，后者支持 timer；我们基于它们和 memcached 实现了 session ID 的非阻塞的分布式缓存。  
微博位置: 无
发布时间: 2015-03-22 10:46
点赞数: 3   转发数: 23   评论数: 1
发布工具: 微博 weibo.com

743:应@程显峰-Mars 老师的邀请，我将在下个月的 QCon 北京 2015 大会上做一个关于 Lua 在 Nginx 中的应用的分享：http://t.cn/RAzd8od 其实也就是 OpenResty 的分享了。想来我有三年没用中文做过演讲了，希望不要退步太多。。。感谢 QCon 会议方的支持。我们全家也正好可以借此机会顺便回国探亲了。  
微博位置: 无
发布时间: 2015-03-22 10:32
点赞数: 27   转发数: 47   评论数: 10
发布工具: 微博 weibo.com

744:今天给我的 code2ebook 开源项目的 src2html.pl 工具添加了 --navigator 命令行选项，指定后会给每一个 HTML 页面的页头和页尾都添加导航链接“One Level Up”和“Top Level”。这样在对应的电子书里面向上层移动就方便多了。多谢@陈小玉 的建议。这样在 Sony Digital Paper 里也能较好地精读源码了。  [组图共2张] 原图 
微博位置: 无
发布时间: 2015-03-12 07:35
点赞数: 13   转发数: 39   评论数: 13
发布工具: 微博 weibo.com

745:在修正了代码基和 build system 里的几个兼容性方面的小问题之后，最新的 OpenResty 终于可以在古老的 CentOS 4.4 上面无痛编译了。由于从前在雅虎时经常被迫使用比较古老的系统，吃过很多苦头，所以现在最有动力折腾兼容性方面的问题了。  
微博位置: 无
发布时间: 2015-03-11 08:33
点赞数: 5   转发数: 3   评论数: 4
发布工具: iPhone客户端

746:期待 Skylake CPU 的 Macbook Pro Retina 15'' 啊。届时我就再也不直接工作在 ThinkPad W530 上面了，而只远程登录了。  
微博位置: 无
发布时间: 2015-03-11 08:09
点赞数: 5   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

747:刚又拿最新的 perl 5.20.2 试了一下我用 Perl 编写的 opsboy 自动布署工具，相比 perl 5.16.3，生成 OpenResty 的 Amazon EC2 测试集群所需的环境布署脚本的时间从 53 秒下降到了 18 秒，近 3x 的整体性能提升啊。perl 的新版本时常带给我惊喜。这个应用对的 Perl 级别火焰图是：http://t.cn/RwBe545  原图 
微博位置: 无
发布时间: 2015-03-11 07:47
点赞数: 3   转发数: 10   评论数: 12
发布工具: 微博 weibo.com

748:五六年前我用 Perl 给淘宝量子统计编写的 LZSQL 编译器现在还能在我的本上运行，发现同一个代码基，最新的 perl 5.20 比相差不远的 perl 5.16 整体性能提高了近 10%，主要是 Parse::RecDescent 生成的解析器在新的 perl 上明显更快了。对应的 Perl 语言级别的 on-CPU 火焰图是：http://t.cn/RwBdN2H  原图 
微博位置: 无
发布时间: 2015-03-11 06:57
点赞数: 13   转发数: 20   评论数: 4
发布工具: 微博 weibo.com

749:在 CloudFlare 的授权下，我刚开源了 ngx_lua 模块的 ssl_certificate_by_lua* 配置指令 ，现在可以用 Lua 动态决定 nginx 正在服务的每一个下游 https 连接具体使用那个证书和私钥，以及是否添加 OCSP stapling. 这个上下文支持非阻塞 IO，支持 cosocket. 更多细节请见这里：http://t.cn/RwEzhgu  
微博位置: 无
发布时间: 2015-03-05 09:26
点赞数: 24   转发数: 54   评论数: 8
发布工具: iPhone客户端

750:用一段时间后发现 Sony Digital Paper 有两大软件缺陷，一是内置的 web browser 竟然使用灰色字体，明显不及其 PDF 浏览器清晰，二是其 PDF 浏览器的文件内跳转后退支持一级，不能连续后退（“Go back to previous page”），而且后退按钮不直接在工具栏上，需要点两下，麻烦。否则的话就相当完美了。  
微博位置: 无
发布时间: 2015-03-02 09:30
点赞数: 1   转发数: 13   评论数: 8
发布工具: 微博 weibo.com

751:昨晚我发布了 OpenResty 正式版 1.7.10.1. 下载位置是 http://t.cn/aCdPzo 完整的更动列表是 http://t.cn/RwT4d8b 正如版本号所暗示的，我们升级了 Nginx 核心到最新的 1.7.10 主线版。下一个版本的亮点将是 ssl_certificate_by_lua.  原图 
微博位置: 无
发布时间: 2015-03-02 01:18
点赞数: 10   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

752:3 月初我准备开源我为 CloudFlare 开发的 ngx_lua 模块的 ssl_certificate_by_lua 特性。包括 GlobalSign 在内的多家公司都私下里表达了希望能更早地得到代码。但我还得好好整理一下代码和文档，毕竟开源出来的东西要求要高很多。下周会很忙。  
微博位置: 无
发布时间: 2015-02-23 16:32
点赞数: 60   转发数: 21   评论数: 7
发布工具: iPhone客户端

753:Google 安全组的 Michal Zalewski 搞的 American Fuzzy Lop (AFL) 工具非常有趣。最近一位叫做 Alexander Nasonov 的哥们利用 AFL 轻松得到了一个最小化的独立 Lua 脚本可以让 LuaJIT 的 JIT 编译器崩溃。因为有这个最小化的用例，Mike Pall 分分钟修复了这个 bug. 更多细节见 http://t.cn/Rw9MVde  
微博位置: 无
发布时间: 2015-02-23 15:22
点赞数: 5   转发数: 24   评论数: 3
发布工具: 微博 weibo.com

754:用 briss 这个 Java 程序对 PDF 文件进行裁边很是方便，然后再放进 Sony Digital Paper 里面就完美了。  
微博位置: 无
发布时间: 2015-02-23 05:59
点赞数: 11   转发数: 15   评论数: 7
发布工具: 微博 weibo.com

755:刚刚发布了 OpenResty 1.7.10.1 RC1 供大家测试：http://t.cn/RwXX7Bc 主要包含了各组件所有最新的 bug 修复。完整的更动列表见这里：http://t.cn/RwXX7BV 欢迎大家测试和反馈 :)  
微博位置: 无
发布时间: 2015-02-20 08:11
点赞数: 4   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

756:根据我的实践发现原来集中贯注地如实观察自己的呼吸、感受和心念本身其实就是一种很精微的禅法，这是我始料不及的。随时随地其实都可以获得轻安和定力，不论身体保持哪种姿态，不论外境是静是闹。原本我还以为修习禅法须得盘腿静坐，现在看来是太无知了。从此简单的方法可以自然导向更高阶的修行方法。  
微博位置: 无
发布时间: 2015-02-14 14:54
点赞数: 11   转发数: 28   评论数: 7
发布工具: 微博 weibo.com

757:最近根据用户的报告，我修正了 ngx_lua 模块的共享内存字典实现里的几处 data alignment 的问题，然后 OpenResty 貌似就可以在 Raspberry Pi 设备上跑得比较好了。多谢书鑫老师的帮助，特别是把他的 Pi 带到公司来给我玩。后面得空了再在 Pi 上运行 OpenResty 的整个规模庞大的测试集，估计得跑很久。  
微博位置: 无
发布时间: 2015-02-13 12:33
点赞数: 7   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

758:前不久又成功地使用我的“内存泄漏火焰图”工具快速定位了一个和网络视频有关的 NGINX C 模块里的一处很细微的内存泄漏问题。泄漏发生在 NGINX 请求内存池中，由于视频连接一般会保持很久，所以即使是很小的频繁创建的内存块，不加以循环复用的话，时间长了也会导致系统内存耗尽。不用看源码就定位了。  
微博位置: 无
发布时间: 2015-02-13 12:09
点赞数: 12   转发数: 65   评论数: 8
发布工具: 微博 weibo.com

759:刚刚给 nginx 官方提了一个小补丁，修复了 $upstream_response_time 变量在一种特殊情况下，时间值严重失准（一般会数值超大）的问题: http://t.cn/RwqANa0 用我的一个精心设计的用例通过 ab 压测也只有 1% 的复现率，真是不好调试，呵呵。幸好有 systemtap.  
微博位置: 无
发布时间: 2015-02-13 09:36
点赞数: 19   转发数: 14   评论数: 7
发布工具: 微博 weibo.com

760:我的同事林孜正在为 ngx_lua 模块开发 ssl_session_fetch_by_lua 和 ssl_session_store_by_lua 配置指令。届时可以用几行 Lua 代码轻松实现 非阻塞的 SSL session ID 的分布式缓存了，呵呵。直接挑 cosocket 就好了，还可以外加一级共享内存的 cache. 后面看看能否推动公司开源。  
微博位置: 无
发布时间: 2015-02-10 09:47
点赞数: 7   转发数: 5   评论数: 3
发布工具: iPhone客户端

761:最近在很认真地修习“活在当下”，即时刻保持警醒，如实地观察自己的呼吸、感受及各种心念变化。坚持下来，我竟然意外获得了强烈的喜悦，进而获得身心的轻松和安宁感，有时还可以突然进入一种很深很幸福的寂静，同时仍然保持意识的高度清醒。没想到“活在当下”竟是如此奇妙，得到快乐竟是如此简单。  
微博位置: 无
发布时间: 2015-02-08 14:51
点赞数: 17   转发数: 27   评论数: 8
发布工具: 微博 weibo.com

762:刚刚向 GDB 官方提了我的第二个补丁：http://t.cn/RwP8h6I 让我们最慢的 Python 写的 GDB 扩展命令 lgcpath 整体快了 14% 以上，命令 lgcstat 整体快了 11% 以上。这个补丁是有选择地将 sigsetjmp 调用的 save_sigs 参数置为 0，以避免昂贵的 sigprocmask 系统调用。再次感谢强大的火焰图工具，呵呵。  
微博位置: 无
发布时间: 2015-02-05 09:52
点赞数: 22   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

763:我还编写过一个名叫 cpu-robbers 的 systemtap 开源工具，可以实时统计某个进程在某段时间内被哪些其他的进程或内核线程抢夺过 CPU 执行权（或者说被它们 preempt 过），谁抢得次数多，谁抢次数少。该工具的文档在这里：http://t.cn/RwPNhI9  原图 
微博位置: 无
发布时间: 2015-02-05 07:38
点赞数: 27   转发数: 40   评论数: 4
发布工具: 微博 weibo.com

764:之前编写过一个名叫 cpu-hogs 的 systemtap 工具，可以实时统计某段时间内实际消耗掉的 CPU 时间在所有用户进程及内核线程之间的比例分布。该工具的文档在这里：http://t.cn/RwPCmM4  原图 
微博位置: 无
发布时间: 2015-02-05 07:34
点赞数: 23   转发数: 42   评论数: 4
发布工具: 微博 weibo.com

765:刚刚发布了 OpenResty 1.7.7.2 正式版。下载地址是：http://t.cn/aCdPzo 完整的更动列表在这里：http://t.cn/RzCnlj1 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2015-02-05 06:42
点赞数: 18   转发数: 10   评论数: 4
发布工具: 微博 weibo.com

766:被 Fedora Linux 默认开启的 firewalld 这个防火墙搞了半天，除了 22 端口之外其他端口对外都直接 drop 包。一直不知道这个东西的存在，我还纳闷呢，怎么 iptables 服务整个干掉还不行。。。汗啊  
微博位置: 无
发布时间: 2015-01-31 11:23
点赞数: 4   转发数: 13   评论数: 14
发布工具: 微博 weibo.com

767:前一阵子在跑同事林孜编写的一个 systemtap 工具时，竟然把目标进程（nginx worker）给搞崩溃了，幸好当时机器上没有用户流量。起初怀疑是 systemtap 的 bug，后来使用 sysfs 确认了却是内核 bug. Jovi 老师随后确认是官方内核 3.15 中修复了的一个问题，即 uprobes 实现中在摸拟 CALL 指令时会出事。  
微博位置: 无
发布时间: 2015-01-26 06:57
点赞数: 6   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

768:在 Kindle DX 上面看技术图书还是很舒服的。传统的纸质图书一般字体都太小，特别是英文版的，看起来太累。不知道在 Sony 新出的更大号的 digital paper 上看会不会更爽，后面得空了去 Standford 的 Sony 专卖店实物体验一下。。。不过这东西太贵了，买不起。。。  
微博位置: 无
发布时间: 2015-01-24 15:29
点赞数: 4   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

769:Linux 内核的 demand paging 优化也会妨碍动态追踪分析工具获取某些尚未加载进当前进程地址空间的物理内存页里的数据。由于 CPU 读取内存都得走逻辑地址，所以即使是在核心态，同时知道数据就在某些物理内存页，不切换进程上下文也只能干瞪眼。我的这一封邮件详细描述了这个问题：http://t.cn/RZQHpN6  
微博位置: 无
发布时间: 2015-01-24 15:08
点赞数: 5   转发数: 14   评论数: 2
发布工具: 微博 weibo.com

770:systemtap 10 周年庆，所有贡献者都可以领一件免费 T 恤：http://t.cn/RZQYiuA 我也向 Frank 老大讨了一件穿 [呵呵]  原图 
微博位置: 无
发布时间: 2015-01-24 14:36
点赞数: 8   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

771:这两天发布了 OpenResty 1.7.7.2 RC1 版供社区测试。下载地址是 http://t.cn/RZQoNYy 发布公告在这里：http://t.cn/RZQoNYw （国内访问可能需要翻墙）亮点是功能增强了的 resty 命令行工具，以及 websocket 非阻塞客户端的 SSL/TLS 支持（ wss:// 协议）。欢迎大家试用反馈 [呵呵]  原图 
微博位置: 无
发布时间: 2015-01-24 12:08
点赞数: 10   转发数: 17   评论数: 2
发布工具: 微博 weibo.com

772:刚给 GDB 官方提交了一个小补丁，发到了 gdb-patches 邮件列表里面，见 http://t.cn/RZo1qbF 该补丁使得我的跑得最慢的两个 GDB Python 脚本分别有了 57% 和 34% 的整体性能提升。当然，这只是我的一系列 GDB Python 优化工作的开始 [呵呵]  
微博位置: 无
发布时间: 2015-01-14 14:43
点赞数: 29   转发数: 11   评论数: 3
发布工具: 微博 weibo.com

773:GDB 并不能用 PyPy 编译和链接，见 GDB 邮件列表中这位哥们对我的问询的回复：http://t.cn/RZoolGs 不过从 GDB Python 的实现方式看，即使能编译，PyPy 对性能也不会有什么帮助。  
微博位置: 无
发布时间: 2015-01-14 10:57
点赞数: 1   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

774:GDB 貌似越来越慢了，最新的 git 仓库里的 7.9.50 比先前的 7.6.2 发布，在运行我们的 lgcstat 工具处理一个较小的 core dump 时慢了 16%. 使用 Brendan Gregg 的新工具生成的“diff 火焰图”显示 GDB 核心中的 check_typedef 函数明显变慢了，同时 sigsetjmp 的开销也提高了（或许调用次数更多了？）  原图 
微博位置: 无
发布时间: 2015-01-14 10:46
点赞数: 0   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

775:Google 搜索的 inurl:xxx 短语很爽，配合 site:xxx 短语可以轻松搞定我的 HTML 源码电子书的全文检索。比如在 ktap 源码树里检索“gettimeofday_ns”得到：http://t.cn/RZotRPY  回头给我的 src2html.pl 脚本添加一个选项，以自动生成“全书搜索框”。  
微博位置: 无
发布时间: 2015-01-14 08:17
点赞数: 15   转发数: 10   评论数: 0
发布工具: 微博 weibo.com

776:GDB 的实现上有一个很恶心的地方是到处都使用 setjmp 来做错误处理。这导致很难进行性能优化，特别是对于 GDB 的 Python 绑定，需要在底层的 Python 原语里使用 setjmp 来把 GDB 的 C 异常转换为 Python 异常，以便上层的 Python 代码可以 catch 它们。这很是棘手。各级函数自己返回错误码就这么难么？  
微博位置: 无
发布时间: 2015-01-10 08:23
点赞数: 5   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

777:code2ebook 项目的 src2html.pl 脚本今天支持 --line-numbers 命令行选项了，指定该选项时 HTML 输出中的源码行会显示行号（见下图中的例子）。多谢@-神仙- 贡献的补丁 [呵呵]  原图 
微博位置: 无
发布时间: 2015-01-09 12:30
点赞数: 13   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

778:最近花了 600 行 Perl 代码搞了一个 code2ebook 工具：http://t.cn/RZtl5Hk 能把任意的源码树转换为 HTML 静态站点，支持语法高亮和交叉引用（前者通过自动化 vim，后者则是通过 ctags）。从这些 HTML 静态站能进一步生成 MOBI、EPUB 等格式的电子书。一些生成的电子书样例在此：http://t.cn/RZtl5HF  原图 
微博位置: 无
发布时间: 2015-01-05 02:02
点赞数: 48   转发数: 225   评论数: 36
发布工具: 微博 weibo.com

779:最近我测试了一下 3.14 的 Linux 内核，发现 uprobes 完全不能用，而同一台机器同一个系统 3.10 的内核却很正常。后来经 Jovi 老师排查，才发现原来 3.14 里有一个 regression，对于 tmpfs 完全不能注册 uprobes 事件。Jovi 注意到 3.15 里有一个补丁正是修复的这个问题，回头再弄一个新内核跑一跑看。  
微博位置: 无
发布时间: 2014-12-28 12:45
点赞数: 6   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

780:gdb 和 systemtap（stap）都是优秀的调试工具，但它们的优缺点也都很明显。gdb 的优点是：1. 用 Python 更容易写出复杂的调试工具，特别是那些需要游走在复杂数据结构的场景（因为它有更完整的 inferior 类型信息）；2. 启动时间比 stap 快一数量级。但 gdb 的缺点是运行时效率比 stap 慢几个数量级。  
微博位置: 无
发布时间: 2014-12-22 09:06
点赞数: 5   转发数: 16   评论数: 2
发布工具: 微博 weibo.com

781:这两天写了几百行 Python 外挂代码，让 gdb 可以直接在 Lua 函数调用的入口和返回点上设置 gdb 断点：http://t.cn/RzgBy35 目前只支持由 LuaJIT v2.1 解释执行的 Lua 代码发起的函数调用。同时支持官方的 luajit 命令行工具和 OpenResty/ngx_lua. 未来还将支持在 JIT 编译后的 Lua 函数调用上设断点。  [组图共2张] 原图 
微博位置: 无
发布时间: 2014-12-22 08:44
点赞数: 4   转发数: 22   评论数: 4
发布工具: 微博 weibo.com

782:刚刚起草了一下 OpenResty 项目在明年（2015 年）的开发路线图：http://t.cn/RzH3YGz （在 Google Group 上面，国内访问可能需要翻墙）。  
微博位置: 无
发布时间: 2014-12-13 07:54
点赞数: 17   转发数: 13   评论数: 6
发布工具: 微博 weibo.com

783:刚发布了Test::Nginx 0.24到CPAN: http://t.cn/Rzp9aN7 包含了众多的新功能和 bug 修复。两大亮点是全新的性能测试模式和增强了的 Perl API，允许子类扩展或者覆盖已有的 --- xxx 测试段落，按自己的需求定制测试用例所使用的 DSL小语言。比如我们 CloudFlare 公司的 Lua 应用的测试集就是这么搞的。  
微博位置: 无
发布时间: 2014-12-08 12:03
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

784:CPAN 模块 Pod::Markdown 很好用。我现在开始使用它的 pod2markdown 工具来生成 github 能自动渲染的 README 文件，例如 test-nginx 项目的：http://t.cn/Rzpis6W 以及 Makefile::Graphviz 的: http://t.cn/Rzpomsi  
微博位置: 无
发布时间: 2014-12-08 11:46
点赞数: 2   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

785:刚刚发布了 OpenResty 1.7.7.1 正式版。下载位置：http://t.cn/aCdPzo 完整的更动列表：http://t.cn/RzCnlj1 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2014-12-07 10:50
点赞数: 21   转发数: 21   评论数: 5
发布工具: 微博 weibo.com

786:我从少年时代刻意训练自己随时随地都能集中贯注思考各种困难的科学或技术方面的问题，希望从中获得成就。这种训练本身很成功，但经年累月我的身心却深受其害，始终处于高度的紧张思索之中，难于控制，这于少年时期望通过科学和技术获得精神解放和幸福安宁的初衷严重背离，所以我开始尝试从中解脱出来。  
微博位置: 无
发布时间: 2014-12-04 16:39
点赞数: 12   转发数: 15   评论数: 9
发布工具: 微博 weibo.com

787:老婆向我推荐的由 Thomas Bubendorfer 编著的《人生如登山》一书给了我很大的启示，特别是他关于全神贯注于当下、抑制导致庸人自扰的各种凡人理智和逻辑思维、解放和升华最本初的感官和直觉的细腻分享。虽然他的这些美妙的体验和感悟都发生在他只身贴在那些极度危险的绝壁之上，但正是一种禅定的状态。  
微博位置: 无
发布时间: 2014-12-04 16:21
点赞数: 14   转发数: 11   评论数: 9
发布工具: 微博 weibo.com

788:刚刚发布了 OpenResty 1.7.7.1 RC2 供社区测试。下载地址是：http://t.cn/RzJG4Q8 发布公告在这里：http://t.cn/RzJG4QR 使用我的 GDB Python 工具协助 Mike Pall 修复了 LuaJIT 的 JIT 编译器内部一处隐藏很久的很微妙的 bug.  
微博位置: 无
发布时间: 2014-12-02 07:52
点赞数: 13   转发数: 11   评论数: 1
发布工具: 微博 weibo.com

789:我开始尝试通过 systemtap 来追踪正在运行中的 LuaJIT VM 内部任意指定的某个或某几个 Lua 函数的进入和返回事件，并能对其参数和返回值这些 Lua value 进行动态检查。就像 systemtap 目前能对 C 函数进行自定义追踪那样。我先从解释执行的 Lua 代码做起，然后是 JIT 出来的代码。 Napoleon St  显示地图 
微博位置: Napoleon St
发布时间: 2014-11-26 09:26
点赞数: 8   转发数: 2   评论数: 1
发布工具: iPhone客户端

790:ktap 的作者 Jovi 老师终于加入了我们的公司团队。下面要好好向他取经，特别是 Linux 内核方面，并努力搞出点新的有趣的动态追踪技术。 94030  显示地图 
微博位置: 94030
发布时间: 2014-11-22 16:32
点赞数: 23   转发数: 4   评论数: 3
发布工具: iPhone客户端

791:刚刚发布了 OpenResty 1.7.7.1 RC1 版供社区测试。包含了大量新的 bug 修复以及一些小的新功能。完整的更动列表请见邮件列表里的公告：http://t.cn/RzLcEny （国内访问可能需要翻墙）。欢迎大家反馈 :)  原图 
微博位置: 无
发布时间: 2014-11-22 14:32
点赞数: 10   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

792:Nginx 公司搞的闭源版的 Nginx Plus 产品的某些版本默认包含了我们的 ngx_lua 模块。刚刚 Nginx 公司负责 Nginx Plus 的一哥们又来催我发布 ngx_lua 模块的新版了，估计是因为他们新的 nginx 核心把对 ngx_lua 的兼容性又搞坏了，呵呵。  
微博位置: 无
发布时间: 2014-10-30 12:04
点赞数: 35   转发数: 7   评论数: 13
发布工具: 微博 weibo.com

793:Gimp 的 fuzz select 真是好用，特别是按住 shift 键时的多选模式。用它来处理原始的签名照片以便 sign 那些 PDF 或 Word 格式的电子文档，实在是方便   
微博位置: 无
发布时间: 2014-10-30 11:57
点赞数: 2   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

794:这次大会终于见到了 Nginx 1.x 的主要维护者 Maxim Dounin. 之前向 Nginx 核心提的补丁都要通过他老人家的十指关，这次终于见到真人了。这是他第一次来美国，我跟他的英语交流还比较有困难，就像两年前第一次见 Igor 时那样。Igor 这两年经常往美国跑，英语已经突飞猛进 [呵呵]  
微博位置: 无
发布时间: 2014-10-27 14:04
点赞数: 7   转发数: 3   评论数: 4
发布工具: iPhone客户端

795:最近为公司的 SSL 相关的系统构建测试集时，需要准备大量的各种不同的证书和私钥等等的样本数据，于是编写了一堆的 bash 脚本通过调用 openssl 等许多命令行工具来自动化生成各种不同配置的组合。玩证书之类的东西一定得用脚本自动化，否则一旦出了错都不好排查。毕竟对不上就是对不上，没有道理可讲。  
微博位置: 无
发布时间: 2014-10-20 10:09
点赞数: 4   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

796:最近我对 Test::Nginx 测试台进行了扩展性方面的改进，现在可以很方便地通过子类扩展功能，添加自己的 --- xxx 段落。我就从 Test::Nginx::Socket 这个 Perl 类派生出了 Test::CFCheck 和 Test::CFSSL 这两个类，现在我们公司的 Lua CDN/Lua WAF 和 Lua SSL 等业务系统的测试集就是分别由它们驱动的。  
微博位置: 无
发布时间: 2014-10-20 09:59
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

797:前不久我在 nginx-devel 邮件列表里简单分享了我们通过 ngx_lua 模块来为 nginx 实现 TLS session ticket key 的自动轮转，特别地，从所有机器共享的外部数据源进行非阻塞的定时同步。当时发的邮件在这里：http://t.cn/R7q6aMY 不用修改 nginx 核心，而且也不用 ssl_certificate_by_lua 绿色无污染。  
微博位置: 无
发布时间: 2014-10-20 09:30
点赞数: 1   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

798:最近我基于 ngx_lua 模块未开源的 ssl_certificate_by_lua 配置指令，用纯 Lua 把 nginx 核心中的 OCSP stapling 实现给重写了。现在很方便地支持 HTTP 1.1，同时也改成 POST 请求了。同时用类似的办法改写了我们先前在 nginx 核心中用纯 C 实现的按需从外部数据源加载 SSL 证书及相关源站配置的逻辑。  
微博位置: 无
发布时间: 2014-10-20 02:59
点赞数: 10   转发数: 26   评论数: 11
发布工具: 微博 weibo.com

799:OCSP 和 OCSP stapling 确实很鸡肋。如果证书颁发者的 OCSP 网站犯了低级错误，或者被劫持，那么由其颁发证书的所有网站都会在那些忠实地实现了 OCSP 检查逻辑的客户端（包括 Firefox）里受到影响。所以作为 CDN 方，绝对不敢在 OCSP stapling 里放 negative 的结果，只能放 positive 的。绝对鸡肋。  
微博位置: 无
发布时间: 2014-10-15 07:18
点赞数: 0   转发数: 9   评论数: 10
发布工具: 微博 weibo.com

800:湾区的互联网服务貌似很不给力啊，感觉确实只能“choose between bad and worse”。。。  
微博位置: 无
发布时间: 2014-10-13 13:45
点赞数: 1   转发数: 2   评论数: 13
发布工具: 微博 weibo.com

801:Amazon EC2 貌似还没有支持 IPv6，我给我的 EC2 测试集群上的 nginx 启用 --with-ipv6 支持后，那些可能会以 IPv6 访问外部资源的测试用例都失败了，报 network unreachable 的错误。只好在测试集中禁用外部 IPv6 的地址，只保持本地 loopback 接口的 IPv6 测试用例。  
微博位置: 无
发布时间: 2014-10-13 13:42
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

802:刚发布了 OpenResty 正式版 1.7.4.1. 下载位置是http://t.cn/aCdPzo 完整的变更列表在这里：http://t.cn/Rhs5Xnl 这个正式版相比上一个正式版拥有 SSL/TLS cosocket API，lua-resty-mysql 中的 SSL 支持，以及 resty 命令行工具这些亮点。当然，仍然有很多的 bug 修复和优化。感谢所有的贡献者！  原图 
微博位置: 无
发布时间: 2014-10-10 08:18
点赞数: 11   转发数: 17   评论数: 9
发布工具: 微博 weibo.com

803:这个月 21 号我将要在 nginx.conf 2014 大会上作一次题为“The Latest and Greatest from ngx_lua: New Features & Tools”的分享：http://t.cn/Rhe0qqY 幸好这个会就在三藩市开，不用作长途旅行了，呵呵。  
微博位置: 无
发布时间: 2014-10-07 13:22
点赞数: 16   转发数: 91   评论数: 10
发布工具: 微博 weibo.com

804:注意到*.google.com域名使用的 TLS 证书里指定的 OCSP URL （指向 Google 的服务器：clients1.google.com/ocsp ）在利用 OpenSSL 的 OCSP 客户端进行验证时，总是返回 404 HTTP 错误码。而该证书的上一级来自GeoTrust的证书里的 OCSP URL（指向 Symantec 的服务器）则很正常。难道Google犯低级错误了？  
微博位置: 无
发布时间: 2014-09-21 14:25
点赞数: 3   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

805:我们公司这两天发布了 Keyless SSL 服务：http://t.cn/RhoE0gz 使用我司 https 代理服务的客户可以不必再把 SSL 证书私钥提供给我司了。我最近也在弄这块的东西。涉及到 SSL 方面的开发，就是很多层的证书和私钥和加解密搞来搞去，测试起来比较辛苦。  
微博位置: 无
发布时间: 2014-09-20 01:52
点赞数: 10   转发数: 32   评论数: 14
发布工具: 微博 weibo.com

806:有趣的是，一些程序员为公司编写的闭源代码的质量远不及他写的开源项目，有时简直判若两人。或许是因为开源出去的东西更关乎声誉吧。 King St  显示地图 
微博位置: King St
发布时间: 2014-09-19 09:26
点赞数: 17   转发数: 36   评论数: 13
发布工具: iPhone客户端

807:使用 Valgrind 测试 OpenSSL 应用时，需要记得改用 -DPURIFY 重新构造 OpenSSL，否则一堆的 Valgrind 误报，烦得紧。OpenSSL 的 FAQ 专门解释了这一条：http://t.cn/Rhflz23  
微博位置: 无
发布时间: 2014-09-11 14:02
点赞数: 2   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

808:OpenSSL 1.0.2 beta 新引入的 SSL_CTX_set_cert_cb 这个 API 函数真是一个好东西，竟还支持在 C 回调里搞 yield，方便搞非阻塞 IO。我正在基于这个 API 为 ngx_lua 模块实现 ssl_certificate_by_lua 配置指令，以便支持使用 Lua 来从外部数据源非阻塞地动态按需加载 https 服务器所需的 SSL 证书。  
微博位置: 无
发布时间: 2014-09-11 13:53
点赞数: 5   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

809:Gnu make 的“order-only prerequisites”特性实在是好用，经常可以救命   
微博位置: 无
发布时间: 2014-09-09 11:10
点赞数: 4   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

810:刚刚发布了 OpenResty 1.7.4.1 RC2 版供大家测试。下载链接是：http://t.cn/Rhy5Nh8 发布公告（含更动列表）在这里：http://t.cn/Rhy5NhR 欢迎大家反馈测试效果。这个 RC 发布的亮点是全新的 resty 命令行工具。  
微博位置: 无
发布时间: 2014-09-03 12:57
点赞数: 9   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

811:今天我给 OpenResty 写了一个命令行工具，叫做“resty”，可以直接运行指定的 .lua 文件或者通过 -e "" 选项指定 one-liner！大部分 ngx_lua 提供的 Lua API 和 lua-resty-* 库都可以在命令行上使用了  见 openresty-en 邮件列表里的试用方法和更多示例：http://t.cn/RPn8zdo  原图 
微博位置: 无
发布时间: 2014-08-21 08:46
点赞数: 18   转发数: 53   评论数: 11
发布工具: 微博 weibo.com

812:刚发布了 OpenResty 1.7.4.1 RC1 供大家测试：http://t.cn/RPH4FEZ 发布公告在此：http://t.cn/RPH4FEw 升级了 nginx 核心到最新的 1.7.4 版。同时升级了 ngx_lua 模块到 0.9.11，包含有新实现的 SSL cosocket API. 同时更新了很多其他组件。更动列表现在是越写越长了，这得感谢越来越多的贡献者。  
微博位置: 无
发布时间: 2014-08-17 14:48
点赞数: 8   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

813:两天前手贱把我的 FreeBSD 9.0 系统升了一下级，结果内核又变成没有 dtrace 支持的了，于是又忙着去重新编译内核（4 核 CPU 花了 13 分钟，还成）。然后主分区空间又不足了，又用 gpart 去腾空间。。。以后还是尽量不要折腾了。。。  
微博位置: 无
发布时间: 2014-08-17 14:41
点赞数: 5   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

814:很多年前在学校里学的一些东西，偶尔会变得非常有用。比如我在雅虎时做基于视觉信息的自动化网页抽取时，意外地发现我的一些算法最后可以划归到一类初中平面几何问题，而有的则与实验物理学里的一些方法有些类似。这是我预想不到的。或许这也是做职业程序员工作中难得能体会到的一种乐趣和惊喜所在吧。  
微博位置: 无
发布时间: 2014-08-17 03:20
点赞数: 8   转发数: 16   评论数: 3
发布工具: 微博 weibo.com

815:当我们可以把一个看似复杂和凌乱的业务系统很好地映射到一个优美的经过充分研究的形式化模型（或者说数学模型）上时，不仅业务逻辑的表达可以得到极大的简化，我们也有机会轻松实现很多原来都不敢想的很高层次上的优化和一致性约束。抽象的力量远远不止像 OO 或 API 这样低层面上的小东西。  
微博位置: 无
发布时间: 2014-08-14 08:59
点赞数: 13   转发数: 103   评论数: 22
发布工具: iPhone客户端

816:注意到 GitHub 上统计说我在过去一年中提交了 2,224 个 commit，想想平均每天（连节假日）竟有 6 个。这个数字还不算我在公司的私有仓库里面的提交。。。貌似有些伤不起。。。估计@罗翅膀716 又要骂我“垃圾批量制造”了，哈哈！  
微博位置: 无
发布时间: 2014-08-13 04:22
点赞数: 22   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

817:去除sigsetjmp和Python Unicode转换之后，我又对性能提升了近100%的lgcstat命令重新采样出了一张火焰图。从图上可以看到下一个性能瓶颈是 GDB 核心中的 resolve_dynamic_type_internal 这个 C 函数。从语义上看，应当可以对它的结果进行 LRU 缓存，这样又有望进一步砍掉 30% 的 CPU 时间！@teawater_z  原图 
微博位置: 无
发布时间: 2014-08-12 08:23
点赞数: 2   转发数: 9   评论数: 5
发布工具: 微博 weibo.com

818:on-CPU 火焰图可以显示 CPU 时间在 gdb/python 所有 C 代码路径上的相对分布，这使我可以集中力量于那些耗时最多的代码路径。而这些代码路径一般也是最核心的代码路径（否则一般就是有低级错误了），从而可以指导源码阅读，避免通读所有代码而不得要领。故也不失为一种可以偷懒的捷径；事半功倍   
微博位置: 无
发布时间: 2014-08-11 13:14
点赞数: 4   转发数: 14   评论数: 6
发布工具: 微博 weibo.com

819:在把 sigsetjmp（即 TRY_CATCH）从 gdb 的 python C 扩展的 C 源码中去除后，我又对新编译的 gdb 运行我们自己的 lgcstat 命令的进程重新采样了一组 on-CPU 火焰图（见下）。原先的“大头”sigprocmask 和 __sigjmp_save 已完全看不到了（我喜欢！），下一个“大头”则是 Python 的Unicode字符串转换。  [组图共2张] 原图 
微博位置: 无
发布时间: 2014-08-11 12:55
点赞数: 1   转发数: 16   评论数: 5
发布工具: 微博 weibo.com

820:受@teawater_z 提醒，我对 lgcstat 这个 python 实现的 gdb 命令使用 on-CPU 火焰图工具进行了 profile，得到的图如下所示（第二张是反转后火焰图，方便看 exclusive time 分布）。从第二张图上可以看到最明显的热点是 sigsetjmp() 调用，很奇怪为什么 gdb/python 的所有基本操作都调用这个昂贵调用。  [组图共2张] 原图 
微博位置: 无
发布时间: 2014-08-11 12:33
点赞数: 5   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

821:前几天，我使用 ngx_lua 最新实现的 SSL cosocket 接口为 lua-resty-mysql 库添加了以 SSL 方式连接 MySQL 的功能。MySQL 的普通连接和加密连接共享一个端口的设计有点儿意思，它把自己的握手和 SSL 握手揉合在了一起。幸好我的SSL cosocket 单独实现了 handshake 方法，而并没有合并进 connect 里去。  
微博位置: 无
发布时间: 2014-08-10 12:19
点赞数: 3   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

822:我的 mockeagain 工具可以高效地摸拟一次只能读写一个字节的极端网络环境，从而可以捕捉非阻塞 I/O 应用中的一大类较隐秘的 bug. 最近发现 OpenSSL 1.0.1e 可以通过 mockeagain 读模式的测试，而更新一些的 1.0.1i 版本则失败得很惨。后面得空了再仔细追踪一下 OpenSSL 内部，看看到底哪儿出了问题。  
微博位置: 无
发布时间: 2014-08-10 12:09
点赞数: 1   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

823:前不久又请书鑫老师帮我写了一个gdb扩展命令，叫做lgcpath: http://t.cn/RPtfnTj 它可以查询出当前进程空间里符合条件的活着的LuaJIT GC对象（比如字符串、协程、表之类的），并打印出从GC roots出发的引用关系路径。配合他更早写的 lgcstat 命令，可以有效地分析 Lua 空间里的内存使用（包括泄漏）。  
微博位置: 无
发布时间: 2014-07-28 07:59
点赞数: 2   转发数: 19   评论数: 5
发布工具: 微博 weibo.com

824:这家叫做 Wingify 的印度创业公司又撰文分享了一下他们的 OpenResty 实践：http://t.cn/RPtfArO  原图 
微博位置: 无
发布时间: 2014-07-28 07:45
点赞数: 8   转发数: 14   评论数: 1
发布工具: 微博 weibo.com

825:我的同事 JGC 很久之前用纯 Lua 实现过 Aho-Corasick 算法，我后来给他提了一个很小的补丁，让其热代码路径能完全被 LuaJIT 2.1 的 JIT 编译器所编译：http://t.cn/RPtcHI4 使用线上真实的模式串测试，性能立马全面提升 2x ~ 3x. 虽然 LuaJIT 的解释器已经很快了，但 JIT 编译还是可以更上一层楼的。  
微博位置: 无
发布时间: 2014-07-28 07:08
点赞数: 6   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

826:有些 bug 可以隐藏很久，所以即使已经在线上稳定运行几年的代码也可能藏有比较大的 bug. 前一阵子就遇到这样的例子：一个同事几年前写的一个私有 nginx C 模块在处理请求内存池清理程序时错误地假设所有清理都针对文件。这个 bug 直到 ngx_lua 模块创建它自己的内存池清理程序时才最终暴露出来。  
微博位置: 无
发布时间: 2014-07-27 10:12
点赞数: 12   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

827:ngx_lua 模块的用户偶尔会在运行自己的 Lua 代码时撞见 nginx 核心里的 bug，当然他们一般是作为 ngx_lua 的 bug 报告给我。然后就轮到我整理好补丁提给 nginx 官方了，嘿嘿。比如最近这一次用户报告：http://t.cn/RP5yogG 而与之对应的我提给 nginx 官方的补丁在这里：http://t.cn/RP5yogq  
微博位置: 无
发布时间: 2014-07-27 03:55
点赞数: 15   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

828:刚刚终于把 ngx_lua 模块的 SSL/TLS cosocket API 的实现提交到了 GitHub 上面的 git 分支“ssl-cosocket”。细节见 http://t.cn/RPyUlds 欢迎感兴趣的朋友试用并反馈。忙了好几天，大部分时间和精力都花在测试各种异常情况上面了，呵呵。  
微博位置: 无
发布时间: 2014-07-22 12:31
点赞数: 22   转发数: 15   评论数: 11
发布工具: 微博 weibo.com

829:我刚刚发布了 OpenResty 1.7.2.1 正式版。下载地址：http://t.cn/aCdPzo 完整的更动列表：http://t.cn/RPv0S56 这是第一个包含了全双工 cosocket 支持的正式版。同时和往常一样包含了很多新的 bug 修复。来自中英文社区的用户邮件和贡献者的补丁总是让我的每一天都很忙碌   原图 
微博位置: 无
发布时间: 2014-07-13 11:47
点赞数: 13   转发数: 29   评论数: 9
发布工具: 微博 weibo.com

830:刚刚发布了 OpenResty 1.7.2.1 RC2 版供大家测试：http://t.cn/RvDb6q9 发布公告见这里：http://t.cn/RvDb6qC 包含了很多 bug 修复，包括对一个 RC1 中引入的内存泄漏的衰退的修复。欢迎大家测试并反馈。多谢！  
微博位置: 无
发布时间: 2014-07-09 07:59
点赞数: 8   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

831:我刚发布了 OpenResty 1.7.2.1 RC1 版供大家测试：http://t.cn/Rvm1oc0 发布公告在这里：http://t.cn/Rvm1ocY 这次发布的亮点是全双工 cosocket 支持、nginx 1.7.2 核心（带原生的 syslog 日志支持）和 ngx.thread.kill() 函数：http://t.cn/Rvm1ocW  
微博位置: 无
发布时间: 2014-07-01 14:02
点赞数: 5   转发数: 7   评论数: 5
发布工具: 微博 weibo.com

832:我们公司开始考虑引入使用 64 位 ARM（ARMv8）芯片的低功耗服务器。从程序员个人的角度来说，多玩一些体系结构还是挺有趣的，毕竟如@万雨-大米 经常挂嘴边的所谓“艺不压身”。不过相关软件的支持跟进（比如 LuaJIT, PCRE JIT, Go 等等）还是需要做很多额外的工作。或许 Intel Atom 更有前途一些？  
微博位置: 无
发布时间: 2014-07-01 08:06
点赞数: 5   转发数: 6   评论数: 13
发布工具: 微博 weibo.com

833:原先分析 C 级别火焰图时，很容易倾向于优化那些较热的 VM 原语，比如 LuaJIT 的 lj_str_new 之类。而优化这些原语效果甚微，毕竟 Mike Pall 已下了很大工夫。但一旦对照对应的 Lua 级别的火焰图，我就发现其实更简单的做法是减少或完全避免某些业务代码路径上对这些昂贵的基本操作的调用。立竿见影。  
微博位置: 无
发布时间: 2014-07-01 07:56
点赞数: 5   转发数: 13   评论数: 8
发布工具: 微博 weibo.com

834:每天盯着线上业务系统的 Lua 级别火焰图看一会儿，经常都会发现新的可以优化的地方。积少成多，在过去的一二个月里，我又已经把我们的 Lua CDN 系统的平均每请求的 CPU 计算时间砍掉了 30% ~ 40%  今天看了一眼，发现其实还可以再干掉至少 30%，后面几天再弄一弄。现在多是在微秒级别上优化了。  
微博位置: 无
发布时间: 2014-07-01 07:31
点赞数: 23   转发数: 47   评论数: 4
发布工具: 微博 weibo.com

835:OpenResty 1.7.0.1 正式版发布！下载位置是：http://t.cn/aCdPzo 完整的更动列表在这里：http://t.cn/RviMBnR 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2014-06-08 07:44
点赞数: 21   转发数: 11   评论数: 2
发布工具: 微博 weibo.com

836:我刚刚发布了 OpenResty 1.7.0.1 RC1 版供大家测试：http://t.cn/RvVfHYv 发布公告在这里：http://t.cn/RvVfHYP 欢迎反馈！  原图 
微博位置: 无
发布时间: 2014-06-01 14:52
点赞数: 6   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

837:我刚刚提交了一个 C 补丁到 nginx-devel 邮件列表：http://t.cn/8sFY3Va 可显著改善 NGINX 核心中的 slab 分配器对于多页内存块的碎片化问题。有了它，我们线上使用的 ngx_lua 模块的共享内存字典不再会出现“no memory”错误了  感谢杨书鑫先前帮我审查这个补丁并发现了两个 bug（都已修正）。  
微博位置: 无
发布时间: 2014-05-12 13:29
点赞数: 16   转发数: 7   评论数: 3
发布工具: 微博 weibo.com

838:最近我编写了一个 lua-resty-lrucache 库，用纯 Lua 实现了一个简单的 LRU 缓存，适合在 Lua 空间里直接缓存较为复杂的 Lua 数据结构：http://t.cn/8sF62EW 它相比 ngx_lua 共享内存字典可以省去较昂贵的序列化操作，相比 memcached 这样的外部服务又能省去较昂贵的 socket 操作。我们已应用到线上。  
微博位置: 无
发布时间: 2014-05-12 08:23
点赞数: 22   转发数: 80   评论数: 33
发布工具: 微博 weibo.com

839:我刚刚发布了 OpenResty 1.5.12.1 正式版。下载位置是：http://t.cn/aCdPzo 完整的更动列表在这里：http://t.cn/8smxDUN  原图 
微博位置: 无
发布时间: 2014-04-30 06:09
点赞数: 13   转发数: 10   评论数: 6
发布工具: 微博 weibo.com

840:我刚发布了 OpenResty 1.5.12.1 RC4 版供大家测试。下载位置是：http://t.cn/8s8AbEl 发布公告在这里：http://t.cn/8s8AbET  
微博位置: 无
发布时间: 2014-04-25 13:11
点赞数: 5   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

841:感谢我的好哥们 @kindylin 取得了 GitHub 上的 openresty 帐户的所有权：http://t.cn/8sQf5kM @chaoslawful 和我已经把 OpenResty 相关项目的仓库都迁移到这个统一帐户了。好多项目呀！迁完之后我自己个人的 GitHub 帐户一下空了很多  @0597虾 你把你的 no-pool-nginx 仓库也迁移过来吧？  
微博位置: 无
发布时间: 2014-04-24 15:19
点赞数: 6   转发数: 11   评论数: 6
发布工具: iPhone客户端

842:我刚发布了 OpenResty 1.5.12.1 RC3 版供大家测试。下载位置是：http://t.cn/8sjWiOR 发布公告在这里：http://t.cn/8sjWiO8 主要包含了 LuaJIT v2.1 里所有最新的 bug 修复。欢迎大家反馈！  原图 
微博位置: 无
发布时间: 2014-04-20 11:17
点赞数: 8   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

843:我们正在尝试增强我们的 Systems 团队，我们将会有多个不同领域的专家，比如 Linux 内核和动态追踪领域的专家、编译器方面的专家、分布式存储和数据库方面的专家，等等。一个背景多样化的优秀工程师组成的小团队更有利于协作和相互学习。如果都是同一领域的，时间更容易花在一些无谓的争论和比较上面。  
微博位置: 无
发布时间: 2014-04-20 10:15
点赞数: 19   转发数: 16   评论数: 4
发布工具: 微博 weibo.com

844:杨书鑫最近使用 Python 把我的 systemtap 工具 lj-gc-objs（http://t.cn/8sjXFgt ）改写为了一个 gdb 扩展命令，叫做 lgcstat: http://t.cn/8sjXFgc 这样我们也可以在 gdb 里面分析当前 LuaJIT VM 里面所有的 Lua GC 对象的内存使用细节。这适合分析死了的进程（即 core dump）。  原图 
微博位置: 无
发布时间: 2014-04-20 04:20
点赞数: 9   转发数: 27   评论数: 3
发布工具: 微博 weibo.com

845:随着研究的问题越来越多和越来越深，我已经不能再像从前那样把所有重要细节都放在脑袋里面了，而且在整理成文（或幻灯片）时，我也不可能直接从脑袋里复制和粘贴原始的工具输出数据和原始图片。得开始借助于一些软件和设备了，这样也更容易和他人分享，容易按特定主题整理成文。  
微博位置: 无
发布时间: 2014-04-13 15:25
点赞数: 6   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

846:我越来越觉得有耐心是我作为一个程序员的最重要的职业素养之一。虽然 Perl 程序员们会把没有耐心作为美德之一，但那显然是针对那些可以自动化的机械性的工作。真正宝贵的耐心需要放在解决一些困难的问题以及学习一些艰深的技术和理论上面。许多真正重要的事情其实都需要耐心，而且是很大的耐心。  
微博位置: 无
发布时间: 2014-04-13 14:12
点赞数: 37   转发数: 58   评论数: 13
发布工具: 微博 weibo.com

847:Mozilla 的 rr 工具是很有前途的东西，可以高效地记录大型 C/C++ 进程的执行过程，然后再回放。首页在这里：http://t.cn/8Fko63j Mozilla 主要使用 rr 来用于调试 Firefox 里的各种诡异问题（我曾经弄过 Firefox 庞大的 C++ 代码基，我很能理解调试的痛）。官方声称 record 的开销只有 1.2x！  
微博位置: 无
发布时间: 2014-04-13 12:55
点赞数: 16   转发数: 215   评论数: 18
发布工具: 微博 weibo.com

848:我刚发布了 OpenResty 1.5.12.1 RC2. 下载位置在这里： http://t.cn/8sClIfH 发布公告在这里： http://t.cn/8sClIfT 欢迎大家测试和反馈！  
微博位置: 无
发布时间: 2014-04-12 12:27
点赞数: 8   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

849:Google Groups 现在做得真叫一个烂。难以相信这是 Google 的产品。原先多好的一个东西给糟踏了。难道 Google 只是找了几个实习生在开发和维护它？  
微博位置: 无
发布时间: 2014-04-10 13:01
点赞数: 2   转发数: 5   评论数: 11
发布工具: 微博 weibo.com

850:刚刚发布了 OpenResty 1.5.12.1 RC1. 下载位置在这里： http://t.cn/8sapTgq 发布公告在这里： http://t.cn/8sapTg5 欢迎大家测试和反馈！  
微博位置: 无
发布时间: 2014-04-07 08:40
点赞数: 7   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

851:我刚刚发布了 Test::Nginx 0.23 到 CPAN 网络：http://t.cn/8sXmbDd 这个测试台框架驱动着我们所有 NGINX 模块和针对 OpenResty 的 Lua 库的测试集 [呵呵]  
微博位置: 无
发布时间: 2014-04-06 12:15
点赞数: 12   转发数: 6   评论数: 0
发布工具: 微博 weibo.com

852:Intel 的 IPP zlib 在我们的应用中很不稳定，容易发生难以复现的崩溃。Intel 的工程师跟我们调了半天也无果。书鑫老师来了之后直接扔掉 IPP，对开源的 zlib 的 C 代码进行了微调，以便让 gcc 生成更好的机器指令。目前在线上的采样结果显示，平均有 16% 的提升。他还有一些 pending 的优化补丁在测试中  
微博位置: 无
发布时间: 2014-04-05 13:59
点赞数: 8   转发数: 20   评论数: 8
发布工具: 微博 weibo.com

853:原 Apple 公司的编译器后端工程师杨书鑫老师前不久加入了我们团队。他在 Apple 做了好几年的 LLVM 后端，先前在 hp 公司也一直做 C 编译器（号称比 Intel 的 ICC 还要快）。他对机器指令和编译器相关的算法实现都了如指掌。我真高兴身边又多了一位老师可以学习  他业余时间酷爱拳击……  原图 
微博位置: 无
发布时间: 2014-04-05 13:28
点赞数: 19   转发数: 20   评论数: 15
发布工具: 微博 weibo.com

854:我在 Amazon EC2 上定时运行着规模庞大的测试集，经常会发现我自己代码里的衰退。有时也会捕捉到参与测试的其他组件，比如 NGINX 和 LuaJIT 里的衰退。前两天集群就捕捉到 Mike 近期一次 bug 修复补丁里引入的衰退（即 http://t.cn/8sigIxU ），然后 Mike 很快就修复了问题： http://t.cn/8sigIxy  
微博位置: 无
发布时间: 2014-04-04 13:09
点赞数: 1   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

855:昨晚准备上线一个 Lua 应用时突然遇到 LuaJIT 里的一个疑似 Lua stack overwrite 的 bug. 我还没来得及整理和报告，今儿一早 Mike 突然主动给我们发了封邮件，说他刚修了一个 Lua stack overwrite 的 bug. 我们一试 git 仓库里的最新版，果然好了！Mike 真乃神人也！补丁在这里：http://t.cn/8sidphf  
微博位置: 无
发布时间: 2014-04-04 12:52
点赞数: 5   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

856:我刚刚发布了 OpenResty 1.5.11.1: http://t.cn/aCdPzo 升级了 NGINX 核心到 1.5.11. 包含了众多组件里的众多更动，包括 LuaJIT. 同时包含了新组件 lua-resty-upstream-healthcheck 库和 ngx_lua_upstream 模块。完整的更动列表在这里：http://t.cn/8sM4IKk 感谢所有的贡献者和用户！[呵呵]  原图 
微博位置: 无
发布时间: 2014-03-31 13:46
点赞数: 8   转发数: 14   评论数: 11
发布工具: 微博 weibo.com

857:我刚刚为即将到来的 ngx_openresty 1.5.11.1 发布准备了一个 RC1 下载包：http://t.cn/8szdHQq 升级了 NGINX、LuaJIT、ngx_lua、lua-resty-core、lua-resty-redis、lua-cjson 等众多组件，包含了两个新的组件。更多细节见这里：http://t.cn/8szdHQt 欢迎大家试用并反馈测试结果。多谢，多谢！  原图 
微博位置: 无
发布时间: 2014-03-13 08:14
点赞数: 7   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

858:这几个月我一直致力于让公司的 Lua 应用能尽可能多地被 JIT 编译。根据我的 lj-vm-states 工具（http://t.cn/8szdA1o ）的线上采样结果，目前我们的 Lua WAF 应用已经有 60% 的 CPU 时间花在了被编译的 Lua 代码上。根据我们全球网络的统计结果，相比去年 12 月，Lua WAF 的平均请求延时下降了 50%.  
微博位置: 无
发布时间: 2014-03-13 07:56
点赞数: 5   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

859:好吧。。。我们公司的 CEO 在 twitter 上帮我打了一个小广告，然后我的 twitter followers 人数就过千了。。。  
微博位置: 无
发布时间: 2014-03-13 07:51
点赞数: 5   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

860:我跑在 Amazon EC2 上的测试集群今天又立功了，其 Valgrind memcheck 测试模式分别捕捉到了 NGINX 核心和 LuaJIT 核心中的一共两处内存 bug. 这两个问题对应的失败用例如果手动运行，怎么也无法复现错误，所以完全是靠运气了，哈哈！NGINX 的维护者 Maxim 和 LuaJIT 的作者 Mike 很快就修复了问题。  
微博位置: 无
发布时间: 2014-03-06 13:23
点赞数: 13   转发数: 9   评论数: 5
发布工具: 微博 weibo.com

861:今年的 Lua Workshop 将在莫斯科举行，好想去讲一场，可惜我的美国签证过期了，不回中国续起来很麻烦  我发现欧洲有很多这样的有趣聚会，以后有机会得带着老婆孩子多去欧洲走一走   
微博位置: 无
发布时间: 2014-02-28 17:18
点赞数: 11   转发数: 4   评论数: 13
发布工具: iPhone客户端

862:昨晚我按照 Mike Pall 的建议对我的 lua-resty-core 库的 Lua 源码进行了微调，效果很显著，我们的 Lua WAF 系统在我的几轮本地 ab 压测中，整体性能提升了 8% 至 13%. 很值   
微博位置: 无
发布时间: 2014-02-28 16:16
点赞数: 11   转发数: 4   评论数: 5
发布工具: iPhone客户端

863:goto fail 是 goto 少数几种值得推荐的用法之一，可以简化错误处理流程，同时也没什么不好的副作用。NGINX 和 Linux 内核的源码中都随处可见这种用法。一些不懂 C 的人非要把 Apple 的那个和 goto 没啥直接关系的 bug 作为 goto 有害的证据，怎么不去吐槽 Linux 内核去？真是笑话。  
微博位置: 无
发布时间: 2014-02-24 13:35
点赞数: 33   转发数: 135   评论数: 49
发布工具: 微博 weibo.com

864:DWARF 调试信息是从冰冷的二进制世界提取高层语义信息的关键。它给各种非侵入式的调试工具提供了在任意用户进程的地址空间内导航的详尽地图。DWARF 信息是我们最好的向导  下图是我根据 DWARF 调试格式的 logo，结合《指环王》里矮人的造型手绘的。因为时间有限，细节上还是处理得比较粗糙。  原图 
微博位置: 无
发布时间: 2014-02-24 12:32
点赞数: 8   转发数: 16   评论数: 8
发布工具: 微博 weibo.com

865:ngx_lua 模块自己基于 Lua 的 coroutine 实现了一个轻量级线程调度器。其工作过程有些类似一个人去推很多辆小车：每辆车都有自己独立的轨道，而这个人需要交替着去把这些车逐一往前推。当一个“轻线程”有新的 IO 事件时它就可以继续往前执行一段，而当它遇到无法立即完成的 IO 操作时，它就暂停一会。  原图 
微博位置: 无
发布时间: 2014-02-24 07:37
点赞数: 6   转发数: 15   评论数: 6
发布工具: 微博 weibo.com

866:先前和 ktap 的作者 Jovi 面聊时谈到我的众多基于 systemtap 和 gdb 的高级调试工具的一大共性是大部分的代码都放在了解释进程空间里的各种复杂的二进制数据结构上。其实我们在调试时感兴趣的大部分信息都可以通过（安全地）遍历这些数据结构来取得（或重建）。这就像一张大网，囊括了核心态和用户态。  原图 
微博位置: 无
发布时间: 2014-02-23 15:43
点赞数: 4   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

867:Valgrind memcheck 这样的工具一般工作在系统内存分配器的级别上，而 NGINX 自己的内存池一般会通过系统分配器预分配一个大块，然后再自己从中分发出小块，所以大多数小块的越界读写错误都不能被 Valgrind 捕捉到。我们的 no-pool 补丁可以在测试时暂时禁用掉 NGINX 的内存池，从而解决这里的限制。  原图 
微博位置: 无
发布时间: 2014-02-23 14:20
点赞数: 3   转发数: 17   评论数: 5
发布工具: 微博 weibo.com

868:类似地，mockeagain 也可以模拟非阻塞 socket 写不动的情形，包括在写出的数据流中遇见事先指定的字节序列时就制造写超时，或者一次只让写出一个字节。这也经常能捕捉到事件驱动的上层应用的状态机里的另外一些 bug. 毕竟有些程序员会忘记正确处理非阻塞的写操作返回 EAGAIN 的特殊情形。  原图 
微博位置: 无
发布时间: 2014-02-23 10:13
点赞数: 3   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

869:我的 mockeagain 工具（http://t.cn/8FEGmAd ）可以通过拦截 glibc 的系统调用包裹函数，模拟非阻塞 socket 的读取操作频频返回 EAGAIN 的情形（一次只让上层应用读取一个字节）。这可以捕捉上层应用的流式解析状态机在各种数据流分块边界上的 bug.  原图 
微博位置: 无
发布时间: 2014-02-23 10:03
点赞数: 6   转发数: 12   评论数: 4
发布工具: 微博 weibo.com

870:在严格非缓冲（或者说“流式”）代理模式下，最重要的是实现上游 socket 的读取速度和下游 socket 的写出速度保持同步。在 ngx_lua 模块中很容易在 Lua 代码级别上通过 cosocket API 和 ngx.flush(true) 来实现。  原图 
微博位置: 无
发布时间: 2014-02-23 09:53
点赞数: 4   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

871:好吧。。。我没想到 memcached 的 logo 居然是一群奔跑的带围巾的“火星兔”。我于是在我的 ngx_memc 模块（http://t.cn/8FRf5Ma ）的宣传画里自己设计了两种比较安静的姿势。。。呵呵。  原图 
微博位置: 无
发布时间: 2014-02-22 14:02
点赞数: 8   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

872:刚又给 Piotr 和我的 ngx_postgres 模块(http://t.cn/8FR5om8 )画了一个幅类似风格的，嘿嘿。我把 PostgreSQL 的 logo 也稍微改了改   原图 
微博位置: 无
发布时间: 2014-02-22 12:48
点赞数: 6   转发数: 1   评论数: 9
发布工具: 微博 weibo.com

873:在 Cintiq 13HD 上给@chaoslawful 和我的 ngx_drizzle 模块画了一副极简单的“宣传画”，哈哈！http://t.cn/8FR5PPn  原图 
微博位置: 无
发布时间: 2014-02-22 12:38
点赞数: 1   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

874:最近弄了一台 Wacom Cintiq 13HD Pen Display 的设备，又在 Macbook Air 里面下载了一个 Sketchbook Pro 6 的软件，准备画点东西。今晚终于胡乱画了下面这幅很简单的图，没想到最后勉强还能拿出来 show 一下。还是太习惯真正的水彩笔和颜料了，电子笔刷的画法还需要慢慢摸索和适应。后面好好练习。。。  原图 
微博位置: 无
发布时间: 2014-02-18 13:35
点赞数: 13   转发数: 3   评论数: 8
发布工具: 微博 weibo.com

875:前些日子我用 Python 给 gdb 实现了扩展命令“lbt full”，可以在 gdb 里打印出当前 Lua 协程（或者指定的 Lua 协程）的完整的 Lua 调用栈轨迹，包括各个 Lua 函数帧里所有的 Lua 局部变量（包括函数参数）的名字和当前取值。该命令既可用于活进程，也能用于 core dump. 文档在：http://t.cn/8Fj9KpN  原图 
微博位置: 无
发布时间: 2014-02-17 10:00
点赞数: 6   转发数: 33   评论数: 11
发布工具: 微博 weibo.com

876:有的人自己没本事也不愿解决问题，因此自己拒绝新技术也就罢了，还对有能力解决问题并致力于创造和实践新技术的人指手划脚的。试问这种人不可恶，谁可恶？！  
微博位置: 无
发布时间: 2014-02-14 15:33
点赞数: 15   转发数: 18   评论数: 14
发布工具: iPhone客户端

877:前几周一直和 Mike Pall 一起追踪 LuaJIT 的一个很诡异很难复现的 bug. 为了追踪它，我在LuaJIT内部植入了一个用于在内存里记最近几百条调试日志的 ring buffer，同时用python写了很多针对 LuaJIT 的 gdb 分析命令。最后我们终于定位了问题：JIT 编译器的寄存器分配在一个特殊条件下会出现寄存器冲突。  
微博位置: 无
发布时间: 2014-02-14 10:21
点赞数: 20   转发数: 14   评论数: 5
发布工具: iPhone客户端

878:"Java programs allocate like there's no tomorrow." -- Mike Pall  原图 
微博位置: 无
发布时间: 2014-02-01 03:51
点赞数: 0   转发数: 48   评论数: 4
发布工具: 微博 weibo.com

879:Amazon EC2 的新一代的实例类型真是不错，性能更高且价格又更加便宜。刚刚把我的 EC2 测试集群中的 x86_64 实例都切换到了 c3.large 类型。可惜 i386 实例还是得老老实实用 c1.medium :P  
微博位置: 无
发布时间: 2014-01-31 09:29
点赞数: 7   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

880:最近在@Qunar_谢昕 的敦促下用 Lua 实现了一个对 nginx upstream 组进行健康检查的库：http://t.cn/8FJjLnt 用户界面的设计参考了@淘文景 的 nginx upstream check 模块，但目前只支持 http 协议（其他协议也好添加）。不用对 nginx 打补丁；依赖 ngx_lua 和 ngx_lua_upstream 模块。欢迎大家试用！  原图 
微博位置: 无
发布时间: 2014-01-31 08:00
点赞数: 13   转发数: 17   评论数: 7
发布工具: 微博 weibo.com

881:受 Nginx 公司的邀请，我将在下个月下旬由 Nginx 公司主办的第一届 Nginx User Summit 聚会上做一次关于 Nginx 开发、测试和调优的分享。见 http://t.cn/8FJlnY4 以及 http://t.cn/8FJlnYU 到时候又可以和 Igor Sysoev 老大见面了，嘿嘿。不知道 Maxim Dounin 到时候会不会过来。又要好好做幻灯片了  原图 
微博位置: 无
发布时间: 2014-01-31 07:42
点赞数: 36   转发数: 64   评论数: 16
发布工具: 微博 weibo.com

882:昨天给 ktap 贡献了一个基于 Perl 的 Test::Base 模块的测试台，Test::ktap. Jovi 也喜欢这种声明性的数据驱动的测试方式。后面 ktap 官方的测试集就由它来组织了，开心！相比之下，systemtap 官方的基于 Tcl/expect 的测试集实在太难看太难用了。我的 Test::Nginx 测试模块也是基于 Test::Base 的。  
微博位置: 无
发布时间: 2014-01-16 10:04
点赞数: 2   转发数: 10   评论数: 5
发布工具: iPhone客户端

883:这几天有幸和 ktap 动态追踪框架的作者 Jovi 大牛坐在一起 hack ，真是爽死了。用过 ktap 以后真有点不想再回去用 systemtap 了，嘿嘿。  
微博位置: 无
发布时间: 2014-01-15 10:16
点赞数: 10   转发数: 12   评论数: 14
发布工具: iPhone客户端

884:最近我在戴冠兰的补丁的基础上，给 ngx_lua 模块添加了 init_worker_by_lua 配置指令：http://t.cn/8F2vzXV 它允许在每一个 Nginx worker 进程启动时通过 Lua 来运行每 worker 的初始化工作，比如创建每 worker 的定时器用于后端服务的健康检查（或者其他 cron job 性质的清理和检查工作）。  原图 
微博位置: 无
发布时间: 2014-01-13 08:44
点赞数: 4   转发数: 38   评论数: 6
发布工具: 微博 weibo.com

885:我刚刚发布了 ngx_openresty 新的主线版 1.5.8.1: OpenResty - Scalable Web Platform based on NGINX 包含了最新的 nginx 主线版 1.5.8 核心。同时升级了众多的组件，包括 LuaJIT v2.1 引擎。完整的更动列表请见这里：http://t.cn/8Fw4Iq5 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2014-01-11 13:57
点赞数: 5   转发数: 12   评论数: 8
发布工具: 微博 weibo.com

886:多学几门语言有助于摆脱 Language War 的层次，更有助于向更多的开源项目贡献代码。回想过去一年，我给许多不同语言编写的项目提过补丁，比如 Lua, C, C++, Perl, Python, Ruby 等等（当然，我其实还并不能编写成文的 Ruby 代码）。命令式的语言都大同小异，翻翻语言手册就好了。其实都那么回事。。。  
微博位置: 无
发布时间: 2014-01-11 12:41
点赞数: 11   转发数: 78   评论数: 14
发布工具: 微博 weibo.com

887:刚刚把我的 stap++ 项目中那些分析 LuaJIT 行为细节的工具都改成了通用的，可以支持标准的 luajit 命令行程序以及其他在名为“globalL”的 C 全局变量里存放 LuaJIT VM 的 lua_State 指针的任意程序。于是我把这些工具的名字里的“ngx- ”前缀都给去掉了，比如 lj-lua-bt 工具：http://t.cn/8kkomvN  
微博位置: 无
发布时间: 2014-01-04 13:32
点赞数: 5   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

888:这两天重写了戴冠兰先前用 Python 编写的打印 Lua 代码调用栈的 gdb 扩展脚本，放在了我们的 Nginx GDB Utils 项目里的 luajit21.py 文件中：http://t.cn/8kDG872 现在新的 lbt 这个 gdb 扩展命令支持 LuaJIT 2.1，能同时分析解释执行的 Lua 代码和 JIT 编译后的栈，还能自动定位当前的 Lua 协程。  原图 
微博位置: 无
发布时间: 2014-01-03 11:48
点赞数: 5   转发数: 13   评论数: 7
发布工具: 微博 weibo.com

889:今天又用 stap++ 语言编写了一个新工具，ngx-lj-lua-bt: http://t.cn/8kgD6Sq 能打印出当前 LuaJIT 2.1 VM 里的 Lua 代码调用栈。可以同时分析被解释的 Lua 代码和被编译的 Lua 代码。适合用于定位 Lua 代码中的无限循环或者超热循环。PCRE JIT 里的正则热回溯也能处理。  原图 
微博位置: 无
发布时间: 2014-01-02 10:50
点赞数: 0   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

890:在 CloudFlare 工作的一个挑战是我们的许多客户（不论大小）都有自己的 IT 团队，有些团队的技术实力还是比较强的。这些工程师没事就盯着各种日志看问题。所以即使是发生频率很小的问题也会被客户报告上来。追踪和分析这些小频率事件和小概率问题，没有比较高级的动态追踪工具的话，这日子真没法过了。  
微博位置: 无
发布时间: 2014-01-01 14:11
点赞数: 5   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

891:使用 ngx-lua-exec-time 工具在线上的采样统计显示，我们公司的 Lua CDN 系统的 Lua 代码的纯执行时间是百微秒级别（不包括非阻塞 IO 的时间），但是请求的总处理延时一度存在极少量秒级的病态样本。于是我编写了 ngx-lua-tcp-recv-time 和 ngx-lua-udp-recv-time 等动态追踪工具对 IO 延时进行分析。  原图 
微博位置: 无
发布时间: 2014-01-01 13:54
点赞数: 2   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

892:最近还用 stap++ 写了一个 ngx-lj-vm-states 工具，可以通过高频采样的方式统计正在运行中的 LuaJIT 2.1 的各种 VM 状态的分布情况。比如 VM 正在执行 JIT 编译后的 Lua 代码的样本的比例和数量，VM 正在解释执行 Lua 代码的样本比例和数量，以及 VM 正在进行垃圾回收的样本比例。适合线上采样统计。  原图 
微博位置: 无
发布时间: 2014-01-01 13:39
点赞数: 1   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

893:这两天用 stap++ 语言针对 LuaJIT v2.1 实现了一个 Lua 代码调用栈的实时采样工具，叫做 ngx-lj-lua-stacks. 我给写了比较详尽的文档：http://t.cn/8kdsSFv 这个工具可以用于绘制 Lua 语言级别的 on-CPU 火焰图。它同时支持解释执行的 Lua 代码和编译执行的 Lua 代码。这个小东西也就 300 来行代码。  原图 
微博位置: 无
发布时间: 2014-01-01 13:26
点赞数: 1   转发数: 9   评论数: 2
发布工具: 微博 weibo.com

894:这两天湾区的 PM2.5 貌似有些夸张。。。但我还是去海边跑步了。。。  
微博位置: 无
发布时间: 2014-01-01 10:20
点赞数: 0   转发数: 0   评论数: 7
发布工具: iPhone客户端

895:Mike Pall 在我们公司的赞助下刚刚在 LuaJIT 的 v2.1 分支上实现了所谓的“stitching around NYI items”特性。这意味着 LuaJIT 的 JIT 编译器现在可以自动绕过包括 lua_CFunction 在内的绝大部分不能编译的原语，对其前后两段 Lua 代码路径分别进行 JIT 编译。这样 coroutine.yield() 也能被编译了！  原图 
微博位置: 无
发布时间: 2013-12-26 09:09
点赞数: 7   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

896:在 openresty 中文邮件列表里借回复的机会写了一篇非正式的小教程，比较具体地介绍了 LuaJIT 的 JIT 编译器的工作方式，以及如何通过工具对其行为进行细致分析。这些工具可以用于调整用户 Lua 代码以便让尽可能多的 Lua 代码被成功地 JIT 编译。教程的地址：http://t.cn/8kaR4gj （国内可能需要翻墙）  原图 
微博位置: 无
发布时间: 2013-12-16 04:37
点赞数: 6   转发数: 44   评论数: 13
发布工具: 微博 weibo.com

897:今天我发布了两个 ngx_openresty 的主流版本，1.4.3.7 和 1.4.3.9. 后者包含了对前者的一处紧急修复。下载位置在这里：http://t.cn/aCdPzo 我的发布公告在这里：http://t.cn/8kXdv9x 这是第一个包含了 LuaJIT 2.1 和 lua-resty-core 的 openresty 版本。亮点自然是较显著的全面的性能提升   原图 
微博位置: 无
发布时间: 2013-12-15 11:32
点赞数: 6   转发数: 22   评论数: 5
发布工具: 微博 weibo.com

898:加入一家发展较快挑战较大的小公司，用自己的技术或者自己最喜爱的技术接管公司的一个或多个核心系统，然后借助开源社区的力量不断完善，慢慢做到极致，也是件其乐无穷的事情。尽量把我自己的技术梦想和公司的业务梦想统一起来，做起重要的事情来就不会束手束脚，反过来还会得到许多资源和支持。  
微博位置: 无
发布时间: 2013-12-09 12:38
点赞数: 48   转发数: 85   评论数: 23
发布工具: iPhone客户端

899:旧金山的大螃蟹就是好，加上我老丈人的啤酒蟹做法简直就是人间美味。可惜我自己贪心吃了太多，现在只能在医院里躺着了   我在这里:http://t.cn/8kIDLYh  显示地图 
微博位置: 无
发布时间: 2013-12-09 11:49
点赞数: 0   转发数: 5   评论数: 19
发布工具: iPhone客户端

900:今天我们的产品经理在线上采样了一张 Lua 代码级别的 on-CPU 火焰图（见下），结果发现有一个 Lua 模块在线上竟然是用调试模式运行的，在图上显示的开销甚大。这个问题是我们的 Lua 工程师在最近一次重构中引入的衰退。火焰图就是一目了然啊。产品经理看了图自己就去找责任工程师“算帐”了，哈哈！  原图 
微博位置: 无
发布时间: 2013-12-06 09:26
点赞数: 2   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

901:用 stap++ 编写了一个名为 ngx-lua-exec-time 的工具：http://t.cn/8kcFjWg 可以实时统计指定的 nginx worker 中每个请求里纯 Lua 代码的执行时间（排除 nginx 自己的执行时间和非阻塞 IO 时间）。使用这个工具可以较为精确地测量和比较 Lua 代码本身的 CPU 执行效率，微秒精度，不受 IO 时间的影响。  原图 
微博位置: 无
发布时间: 2013-12-06 09:22
点赞数: 7   转发数: 7   评论数: 3
发布工具: 微博 weibo.com

902:看来出门必须准备一堆的 coin，今天在用一个破机器付停车费时，发现不能用信用卡，纸币也老吐回来。最后还是两位白人老太太拿出她们用白纸包得好好的一长串 coin 帮我解了围。果然是经验啊。汗。  
微博位置: 无
发布时间: 2013-12-03 08:57
点赞数: 1   转发数: 0   评论数: 3
发布工具: iPhone客户端

903:这两天重新实现了 ngx_lua 模块禁用代码缓存的模式，即配置了 lua_code_cache off 的模式。新模式为每个 Lua 代码服务的请求都创建一个独立、干净的 Lua 虚拟机实例，以确保不会再出现卸载 FFI 时的各种问题。老模式仍然是共享一个 Lua 虚拟机实例，只是在每个请求的开始清空几乎所有加载的 Lua 模块。  
微博位置: 无
发布时间: 2013-11-30 14:00
点赞数: 2   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

904:最近忙着把我们线上的 LuaJIT 2.0.2 升级到了最新的 LuaJIT v2.1 分支。这两天已经把 LuaJIT v2.1 推到了公司分布在全球的机房。根据生产环境里的采样统计结果（使用 systemtap 工具），Lua WAF 系统整体就有平均 40% 的请求处理速度的提升，而 Lua CDN 也有 10% 的提升。而 lua-resty-core 还没上线。  
微博位置: 无
发布时间: 2013-11-28 09:19
点赞数: 4   转发数: 5   评论数: 12
发布工具: 微博 weibo.com

905:我在 lua-resty-core 库中使用 LuaJIT FFI 重新实现了一遍 ngx_lua 模块中用于获取所有请求头的 API 函数 ngx.req.get_headers(). 测试显示，在 JIT 编译时，新的 FFI 实现比 ngx_lua 模块自己的实现快了 54%. 真是开心！这个接口的 FFI 实现代码在这里：http://t.cn/8kyU0Kk  
微博位置: 无
发布时间: 2013-11-27 13:13
点赞数: 4   转发数: 19   评论数: 2
发布工具: 微博 weibo.com

906:刚在 lua-resty-core 库中为 ngx.re.match 添加了可选的第 5 个参数，允许用户自己传入作为第一个返回值的用来存放 capture 的 Lua 表（如果有匹配的话）。这里我就使用了 LuaJIT 2.1 全新的 table.clear() 来清空用户提供的 captures 表。性能测试显示，对于很简单的正则匹配，有 40% ~ 50% 的提升。  原图 
微博位置: 无
发布时间: 2013-11-26 12:34
点赞数: 0   转发数: 4   评论数: 8
发布工具: 微博 weibo.com

907:Mike Pall 周末在 LuaJIT 的 v2.1 分支中实现了 table.clear(tb) 这个新的 API，可以清空 Lua 表中的所有数据（但不释放 table 本身的内存）。这个原语比手动遍历 Lua 表清空数据要高效得多，而且也可以被 JIT 编译，特别适合循环复用 Lua table，避免反复的分配内存和 GC 丢弃的表。  原图 
微博位置: 无
发布时间: 2013-11-26 12:30
点赞数: 2   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

908:在我的 Core i7 CPU 的本上对使用了 IPP zlib 库的 Nginx 进行了一些真实的网页样本的测试，效果很显著（见下图）。使用的是 l_ipp_8.0.0.061.tar 和 l_ipp_8.0.0.005_legacy_samples.tgz 这两个从 Intel 官网下载的软件包。我的本上的 CPU 对应的 IPP e9 体系结构的实现，见 http://t.cn/8kAvG1n  原图 
微博位置: 无
发布时间: 2013-11-24 08:58
点赞数: 3   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

909:Nginx 的 gzip 压缩过滤器模块一直是我们线上 nginx 的主要 CPU 热点之一，在 on-CPU 火焰图上一直都占据主要位置。所以我们最近在尝试从标准的 zlib 库迁移到 Intel 的 IPP zlib 库。我给 nginx 打了一个补丁，添加了对 IPP zlib 的支持：http://t.cn/8kwsjO1  
微博位置: 无
发布时间: 2013-11-24 08:40
点赞数: 5   转发数: 12   评论数: 8
发布工具: 微博 weibo.com

910:刚刚发布了 ngx_openresty 新的稳定版 1.4.3.6：http://t.cn/aCdPzo 包含了 Nginx 官方最新发布的针对 Nginx 核心中的安全问题 CVE-2013-4547 的补丁。建议 OpenResty 的所有用户都进行更新。  原图 
微博位置: 无
发布时间: 2013-11-21 13:20
点赞数: 3   转发数: 14   评论数: 7
发布工具: 微博 weibo.com

911:LuaJIT 支持把纯 Lua 编写的模块直接编译成字节码并导出到 .o 文件，然后直接链接到宿主应用的可执行文件中去。这样就完全没有外部的 .lua 文件依赖，同时也可以在一定程度上实现某些应用场景下的“闭源”要求。我把 OpenResty/ngx_lua 上下文中的这种有趣的玩法写进了官方文档：http://t.cn/8k7tIM5  
微博位置: 无
发布时间: 2013-11-20 13:20
点赞数: 8   转发数: 16   评论数: 6
发布工具: 微博 weibo.com

912:用 stap++ 编写了一个分析工具，可以在线统计指定的 nginx worker 进程中在 rewrite 请求处理阶段里的延时分布。文档在 http://t.cn/8k75kiR 这里的 rewrite 阶段延时包括（非阻塞）I/O 时间。公司的 CDN 调度器是完全用 Lua 编写的，它就是运行在 rewrite 阶段的。该工具能单独测量此阶段的延时。  原图 
微博位置: 无
发布时间: 2013-11-20 13:14
点赞数: 4   转发数: 5   评论数: 0
发布工具: 微博 weibo.com

913:最近一直在把玩我们的 Lua Web 防火墙（WAF）系统。通过许多本地的性能测试发现，单纯把 LuaJIT 从 2.0.2 升级到最新的 2.1 分支，WAF 的整体性能就能提高 30% ~ 40% 之多。如果接着在 init_by_lua 里面加载 lua-resty-core 库，则 WAF 的整体性能相比最初可以提高 60% ~ 80%. 看来得进行线上升级了！  原图 
微博位置: 无
发布时间: 2013-11-14 12:43
点赞数: 11   转发数: 20   评论数: 5
发布工具: 微博 weibo.com

914:我刚刚发布了 ngx_openresty 新的稳定版 1.4.3.4: http://t.cn/aCdPzo 下面我可以放开手脚升级 LuaJIT 以及整合 lua-resty-core 了，哈哈！我目前的工作重心是提升性能，特别是运行在 OpenResty 之上的较复杂的 Lua 应用的性能   原图 
微博位置: 无
发布时间: 2013-11-13 14:43
点赞数: 9   转发数: 13   评论数: 5
发布工具: 微博 weibo.com

915:刚刚我在 lua-resty-core 库中用 Lua + FFI 重新实现了 ngx_lua 模块读写 Nginx 变量的 API，即 ngx.var.VARIABLE 这个接口。使用最简单的测试用例，在 Lua 代码被 JIT 编译的情况下，写 Nginx 变量的效率提升了 6.45 倍，而读的效率也提高了 3.9 倍。这一操作一直在我们 Lua CDN 的火焰图中很“热”。  
微博位置: 无
发布时间: 2013-11-11 13:53
点赞数: 10   转发数: 17   评论数: 11
发布工具: 微博 weibo.com

916:Brendan Gregg 最近为 LISA '13 大会搞了一套幻灯片，很好地总结了各种不同的“火焰图”。其中的 off-CPU 时间火焰图和内存泄漏火焰图算是我的贡献。我的偶象 Brendan 很给面子地专门给了一页幻灯帮我打广告并在 twitter 上向我表示了感谢  幻灯片在这里：http://t.cn/zRYl4PS  原图 
微博位置: 无
发布时间: 2013-11-10 13:24
点赞数: 14   转发数: 33   评论数: 6
发布工具: 微博 weibo.com

917:Lily 老师 @Miss渣 曾经把我的（程序员）职业戏称为“弹小黑框”的。现在我自己看看我的微博配图，确实有好多的“小黑框”耶。。。  
微博位置: 无
发布时间: 2013-11-10 05:23
点赞数: 1   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

918:我刚刚发布了 ngx_openresty 新的主线版 1.4.3.3: http://t.cn/aCdPzo 包含了最新的 ngx_lua 0.9.2. 完整的更动列表在这里：http://t.cn/zRo4W0L 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2013-11-07 07:32
点赞数: 9   转发数: 7   评论数: 5
发布工具: 微博 weibo.com

919:刚提交了一个补丁，给 ngx_lua 模块添加了 ngx.re.find() 这个新函数，只返回 PCRE 正则匹配的起始和终止位置（1 起始的字符串内部位置）：http://t.cn/zR0iCcI 在使用 LuaJIT 2.0 测试简单的正则匹配时，相比返回 table 的 ngx.re.match() 性能提升 40% 以上。只要可能的话，应尽量使用 ngx.re.find.  原图 
微博位置: 无
发布时间: 2013-11-05 15:04
点赞数: 1   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

920:刚刚把我的 Amazon EC2 测试集群上的 Valgrind 都升级到了最新的 3.9.0，同时从我在 GitHub 上建的 LuaJIT 的 fork 仓库直接构造 LuaJIT 2.0，并在使用 Valgrind memcheck 运行测试集时禁掉 LuaJIT 自己的内存分配器。新集群正通过十几台机器重新回归 ngx_lua 等组件的测试集，希望能有所发现   
微博位置: 无
发布时间: 2013-11-04 14:56
点赞数: 8   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

921:昨晚刚看到 Valgrind 3.9.0 新版发布：http://t.cn/S269KU 我赶紧升级去～～  
微博位置: 无
发布时间: 2013-11-04 06:13
点赞数: 1   转发数: 29   评论数: 2
发布工具: 微博 weibo.com

922:应用自己的内存分配器会干扰 Valgrind memcheck 这样的工具检测内存非法读写的问题，比如 Nginx 自己的内存池，还有 LuaJIT 自己的分配器。对于前者，我们有 no-pool-nginx 补丁（http://t.cn/aKTUiW ）；而对于后者，LuaJIT 2 不支持在 x86_64 上使用系统分配器，即 -DLUAJIT_USE_SYSMALLOC 选项。  原图 
微博位置: 无
发布时间: 2013-11-03 14:18
点赞数: 3   转发数: 12   评论数: 6
发布工具: 微博 weibo.com

923:这两天用 stap++ 编写了一个 ngx-single-req-latency 工具，可以实时测量 nginx 服务的单个请求的延时在几个重要的请求处理阶段上的分布情况。文档在这里：http://t.cn/zRNxeoF 默认它会分析它遇到的第一个请求，也可以让它只捕捉包含某个指定的特殊请求头的请求。后面可以再输出更多的细节   原图 
微博位置: 无
发布时间: 2013-11-03 11:25
点赞数: 2   转发数: 17   评论数: 1
发布工具: 微博 weibo.com

924:今天用 stap++ 语言编写了一个 ngx-lua-shdict-writes 工具，可以实时打印出指定的 nginx worker 进程对某一个或所有的 ngx_lua 共享内存字典的写入操作的细节。文档在这里：http://t.cn/zRKq1ck 实现不过寥寥几十行代码而已：http://t.cn/zRKq1cD 刚才我就用这个工具在生产上确认了一个问题。  原图 
微博位置: 无
发布时间: 2013-10-31 08:26
点赞数: 2   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

925:我刚刚发布了 ngx_openresty 新的主线版 1.4.3.1: http://t.cn/aCdPzo 包含了过去一个月以来很多组件里的很多修复和优化。完整的更动清单在这里：http://t.cn/zRo4W0L 我现在每天都被一堆的中英文用户邮件给推着向前冲呀。。。呵呵。原来周末是没什么邮件的，但最近开始周末都是一堆新邮件。。汗啊。。  原图 
微博位置: 无
发布时间: 2013-10-30 05:01
点赞数: 7   转发数: 13   评论数: 7
发布工具: 微博 weibo.com

926:这周末我一口气给 Nginx 官方提了三个补丁：http://t.cn/zRS52aQ ，http://t.cn/zRS52aT 和 http://t.cn/zRS52aH 其中两个问题比较严重，会导致请求无限挂起。这几个补丁至少将包含在下一次 ngx_openresty 发布中。  
微博位置: 无
发布时间: 2013-10-29 06:53
点赞数: 10   转发数: 16   评论数: 1
发布工具: 微博 weibo.com

927:前一阵子我们一台生产机上的 nginx 出现请求延时普遍很长的问题。我们的产品经理 Dane 给我展示了他针对其中一个 nginx 进程采样出来的 off-CPU 火焰图：http://t.cn/zRMir2p 他很奇怪为什么他分明使用的是 sample-bt-off-cpu 工具，但生成的却非常类似 on-CPU 火焰图。其实就是因为 CPU 争用是瓶颈。  原图 
微博位置: 无
发布时间: 2013-10-21 14:03
点赞数: 0   转发数: 11   评论数: 5
发布工具: 微博 weibo.com

928:CPU 是很有限的一种资源，当系统有很多进程或线程争夺 CPU 资源时，单个进程（线程）便会被别的进程（线程）“偷走”很多 CPU 时间。被偷走的时间片从进程（线程）本身来看，其效果等价于阻塞在了某个系统调用（比如文件 IO 或者内核同步锁）上面，但阻塞的位置可以发生在任何地方，包括用户态代码里。  [组图共2张] 原图 
微博位置: 无
发布时间: 2013-10-21 11:08
点赞数: 6   转发数: 24   评论数: 6
发布工具: 微博 weibo.com

929:我在技术工作中最怕遇见两种人：一是遇到技术困难总是绕着走，不敢直面，想尽办法偷懒（这里不是指通过自动化实现的“高级偷懒”）；二是非常浮躁，对技术细节没有耐心，不停地重复犯各种低级错误。我自己也曾经是这两种人，所以知道利害，一定要躲得远远的。。。  
微博位置: 无
发布时间: 2013-10-20 14:25
点赞数: 22   转发数: 166   评论数: 31
发布工具: 微博 weibo.com

930:最近用 stap++ 改写了我原来的 leaks.stp 脚本，取名为 sample-bt-leaks: http://t.cn/zRIXim5 可以用于绘制 C 级别上的“内存泄漏”火焰图。它会追踪和统计进程中对 glibc 的内存分配和释放函数 malloc/calloc/realloc/free 的调用，能捕捉 valgrind 无法检测的泄漏。  原图 
微博位置: 无
发布时间: 2013-10-20 07:38
点赞数: 6   转发数: 44   评论数: 17
发布工具: 微博 weibo.com

931:昨天晚上我脑袋一热，在我的 ThinkPad W530 上面从源码编了一个最新的 3.11.6，结果在启动的时候巨慢无比（大约在 init 的 sendmail 服务之后），虽然最后也能跑起来，但 systemtap 无法正常使用，最后关机时也巨慢。于是退回到 3.10.16 版本编了一个内核，用到现在一切正常。有 uretprobes 就好  
微博位置: 无
发布时间: 2013-10-19 10:36
点赞数: 3   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

932:我原来在淘宝时招的“金童”，@calio，现在每天就坐在我旁边帮我干活儿  我上班时间又可以更轻松一些了～哈哈！  
微博位置: 无
发布时间: 2013-10-19 10:15
点赞数: 3   转发数: 23   评论数: 12
发布工具: 微博 weibo.com

933:由于 wiki.nginx.org 网站出了问题（出现了页面截断，同时也不能登入修改了），我把我那些模块在 GitHub 上渲染的 markdown 格式的文档进行了改进，现在里面的链接都不再指向 wiki.nginx.org 网站了，比如 ngx_lua 的文档现在是这个样子的：http://t.cn/zRVvNCj 推荐大家阅读 GitHub 上渲染的文档。  
微博位置: 无
发布时间: 2013-10-17 08:28
点赞数: 3   转发数: 13   评论数: 14
发布工具: 微博 weibo.com

934:最近我在和 Mike Pall 讨论 LuaJIT 的 JIT 编译器在 loop unroll 条件上的一个问题时，把我一个测试用例对应的字节码（BC）片段和中间码（IR）片段贴给了他，以便寻找更好的启发公式。结果他注意到我的用例中有一个很昂贵的中间码操作 NEWREF，便自己在网上扒拉出我的 Lua 代码，提了一个单行的补丁。  
微博位置: 无
发布时间: 2013-10-16 13:33
点赞数: 1   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

935:在两种 web 应用构建技术都使用了 100% 非阻塞 IO 之后，在性能上比拼的其实就是 CPU 的执行效率和内存使用效率了。  
微博位置: 无
发布时间: 2013-10-16 10:21
点赞数: 3   转发数: 27   评论数: 7
发布工具: 微博 weibo.com

936:Caltrain 下午撞到行人了，晚上下班的车也晚点了。到现在都还没开动。人生啊。。。  
微博位置: 无
发布时间: 2013-10-15 09:34
点赞数: 0   转发数: 1   评论数: 6
发布工具: iPhone客户端

937:在能预知 Lua table 的数组部分和哈希表部分的大小的时候，为 table 预分配空间是很重要的优化，无论是在 C 级别上调用 Lua 标准C API函数 lua_createtable，还是在 Lua 级别上调用 LuaJIT 2.1 新添的 table.new 函数。毕竟内存动态分配是高代价操作，特别是当 LuaJIT 把其他东西都优化得很快的时候。  
微博位置: 无
发布时间: 2013-10-14 00:55
点赞数: 1   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

938:Mike Pall 太给力了！刚看到 LuaJIT 的 v2.1 分支上两天前就实现了我最需要的那几个特性！我们公司赞助的第三期开发工作中的相当一部分都已经实现  我可以继续开发新一代的更高性能的 OpenResty 了！  原图 
微博位置: 无
发布时间: 2013-10-12 11:13
点赞数: 5   转发数: 15   评论数: 8
发布工具: iPhone客户端

939:今天俄国一位工程师给我发了一封邮件，询问是否可以把我的那些 Nginx 教程译成俄文发表到网上。他们公司基于 OpenResty 搞了很多东西，他们想通过翻译我的教程，在俄国推广基于 Nginx 构建完整的 web 应用的技术。我自然乐观其成。看来我应该把教程继续写下去，而且应该直接拿英语来写   
微博位置: 无
发布时间: 2013-10-09 13:52
点赞数: 22   转发数: 18   评论数: 27
发布工具: 微博 weibo.com

940:刚给我的 epoll-loop-blocking-distr 工具添加了较正式的文档：http://t.cn/zR4wxpL 这个工具可以实时统计任意指定的进程中连续两次 epoll_wait 系统调用中间的延时的分布情况，从而可以确定 epoll 事件循环的阻塞效应（比如密集的 CPU 计算或者阻塞 IO 等东西对事件循环的阻塞）。这是极有用的工具。  
微博位置: 无
发布时间: 2013-10-09 08:31
点赞数: 4   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

941:前一阵子曾写过一个很简单的 stap++ 工具，可以快速确定任意指定的用户进程究竟使用的是 epoll 边沿触发（ET），还是水平触发（LT）：http://t.cn/zR47Qkc 从工具的样本输出中可以看到 nginx 总是使用 ET，而 KyotoTycoon 则使用的是 LT. 这个工具的开销远小于使用 strace.  [组图共2张] 原图 
微博位置: 无
发布时间: 2013-10-09 07:08
点赞数: 4   转发数: 15   评论数: 7
发布工具: 微博 weibo.com

942:这两天我终于把我的 ngx-lj-gc-objs 工具给改好了，现在我自己的 GC 对象遍历工具按各个对象的空间占用累加出来的总空间使用量终于和 LuaJIT 自己维护的全局计数器 g->gc.total 精确相同了！一个字节也不差！对于参与 GC 的 trace 和 cdata 类型的对象也提供了支持。下面是在生产机上得到的两种结果。  [组图共2张] 原图 
微博位置: 无
发布时间: 2013-10-06 12:45
点赞数: 7   转发数: 10   评论数: 11
发布工具: 微博 weibo.com

943:基于 systemtap 编写各种有趣的动态追踪工具，用于在线调试生产环境中的各种困难问题，已经成为我不断熟悉 Nginx、LuaJIT、Linux 内核等软件的内部实现的最主要动力  我觉得 systemtap 或 dtrace 应成为计算机专业的教具之一。如果我在学生时代就知道这种东西，我的很多课程就可以学得更好一些。  
微博位置: 无
发布时间: 2013-10-06 01:12
点赞数: 12   转发数: 24   评论数: 8
发布工具: iPhone客户端

944:这两天我用 stap++ 语言编写了一个小工具，名为 ngx-lj-gc-objs: http://t.cn/zR2x5vu 可以实时打印出指定的 nginx worker 进程中所有参与 GC 的 Lua 对象的空间使用信息，根据这些 Lua 对象的值类型（比如 string, table, userdata, function 等等类型）进行分类统计。目前仅支持 LuaJIT 2.0 [呵呵]  原图 
微博位置: 无
发布时间: 2013-10-05 07:34
点赞数: 5   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

945:Edwin Cleton 同学在 Windows 环境里拿微软的编译器工具链构造了一个微型版的 openresty，包含了 ngx_lua、ngx_devel_kit 和 ngx_array_var 等模块。他把构造过程和构造结果（即二进制文件）都分享出来了：http://t.cn/zRAW5CF 在他的帮助下我修复了这3个模块在用 VC 编译器编译时的所有警告和错误。  
微博位置: 无
发布时间: 2013-10-04 10:29
点赞数: 5   转发数: 9   评论数: 1
发布工具: 微博 weibo.com

946:花了几行 stap++ 代码写了一个 ngx-lj-gc 工具，可以打印出指定的 nginx worker 进程中 LuaJIT GC 目前已经分配了的内存大小。工具的文档在这里：http://t.cn/zRAOX0C 源码实现在这里：http://t.cn/zRAOX09 stap++ 的模块系统使起来太爽了；用户态追踪代码现在终于可以方便地复用了   原图 
微博位置: 无
发布时间: 2013-10-04 10:09
点赞数: 5   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

947:以色列一家互联网公司一下子砸了一堆补丁给 ngx_lua：http://t.cn/zRwNzYv 里面实现了包括 SSL cosocket、全双工 cosocket（即允许一个读线程和一个写线程同时操作一个 cosocket 对象）、流式子请求响应读取 API、BSD 风格的 socket 读取 API 在内的许多新功能。  
微博位置: 无
发布时间: 2013-10-03 07:36
点赞数: 15   转发数: 42   评论数: 11
发布工具: 微博 weibo.com

948:一条命令实时分析任意用户进程中的 TCP 读操作，检查多少是阻塞模式，多少是非阻塞模式：stap -x <pid> -e 'global n, t probe tcp.recvmsg{if(target()==pid()){if($nonblock)n++ t++}}probe end{printf("%d nonblock, %d total\n",n,t)}' 用它分析我们线上的nginx进程能得到100%样本非阻塞的结果。  
微博位置: 无
发布时间: 2013-10-02 14:55
点赞数: 1   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

949:Go 编译器生成的调试信息无法让 systemtap 的 stack unwinder 得到有意义的用户态调用栈（即 Go 程序调用栈），但这并不影响我们使用 systemtap 在内核级别上对 Go 进程的行为进行许多有趣的分析，毕竟无论 Go 编译器在用户态里搞多少名堂，最终都还是要使用内核提供的各种标准的系统调用的   
微博位置: 无
发布时间: 2013-10-02 14:44
点赞数: 1   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

950:刚给我的用于生成 off-CPU 时间火焰图的 sample-bt-off-cpu 工具添加了对多线程用户进程的支持：http://t.cn/zRZ8uIi 这样就可以对 KT 和 Go 程序等多线程应用进行分析。比如下图是我们用 Go 写的 DNS 服务器的 off-CPU 火焰图（OS 内核级别）：http://t.cn/zRZ8uIJ 从图上看 UDP 读操作竟是阻塞的。  原图 
微博位置: 无
发布时间: 2013-10-02 14:27
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

951:刚刚我把 Nginx Systemtap Toolkit 中很通用的工具进行了重命名，比如把 ngx-sample-bt 更名为 sample-bt，毕竟它可以用于任意的 Linux 用户进程。类似地，ngx-sample-bt-off-cpu 现在叫 sample-bt-off-cpu，而 ngx-accept-queue 现在叫 tcp-accept-queue，等等。先前统一的 ngx- 前缀容易误导用户 :)  
微博位置: 无
发布时间: 2013-10-01 14:28
点赞数: 5   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

952:刚刚发布了 ngx_openresty 新的主线版本 1.4.2.9: http://t.cn/aCdPzo 包含了新的 lua-resty-websocket 库和 lua-resty-lock 库以及许多其他的新特性、bug 修复和性能优化。完整的更动列表在这里：http://t.cn/zQHOqDV 我们还修了 ngx_lua 和 ngx_devel_kit 这两个组件对微软 VC 编译器的兼容性  原图 
微博位置: 无
发布时间: 2013-09-30 15:25
点赞数: 5   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

953:人们在构造软件时喜欢用一层层的封装把很多实现细节和状态数据都“藏”起来。而使用动态追踪技术对生产系统进行问题诊断时则需一层一层地把这些封装剥开来看五脏六腑。比如会需要看某一个特殊的线上请求对应的某一次 Lua 函数调用所操作的文件描述符所对应的某个内核数据结构里的某个字段的当前值。  原图 
微博位置: 无
发布时间: 2013-09-30 11:13
点赞数: 2   转发数: 17   评论数: 8
发布工具: 微博 weibo.com

954:一行命令实时流水打印出任意单线程进程中耗时超100毫秒的系统调用：stap++ -x <pid> -e 'global b,c probe syscall.*{if(target()==pid()){b=gettimeofday_ms() c=probefunc()}}probe syscall.*.return{if(target()==pid()&&b){e=gettimeofday_ms()-b if(e>100)printf("%s: %dms\n",c,e)}}' 输出见下图  原图 
微博位置: 无
发布时间: 2013-09-30 07:28
点赞数: 5   转发数: 54   评论数: 5
发布工具: 微博 weibo.com

955:Dane 和 Piotr 向我求助线上的一个诡异问题，即用于 nginx proxy 缓存文件清理的 HTTP PURGE 请求时常存在秒级别的延时。于是我在法国巴黎的一台生产机上使用一系列 systemtap 脚本对这些问题请求进行了动态追踪，很快便定位了问题原因，原来仍是病态的硬盘延时对 Nginx 事件循环的阻塞过大导致的。  [组图共4张] 原图 
微博位置: 无
发布时间: 2013-09-30 04:29
点赞数: 6   转发数: 12   评论数: 7
发布工具: 微博 weibo.com

956:最近注意到 Google 已经可以正确地索引我基于 TiddlyWiki 的 openresty.org 网站了。TiddlyWiki 是纯 JS 驱动的一个静态 HTML 文件，各个站内页面只是对应一个 #anchor. 而现在不同 #anchor 对应的内部页面在 Google 搜索结果里显示为独立的条目，太牛逼了！莫非 Google 的爬虫已经能跑 JS 了？  
微博位置: 无
发布时间: 2013-09-28 08:50
点赞数: 6   转发数: 7   评论数: 5
发布工具: 微博 weibo.com

957:MoonScript 语言和 Lapis 开发框架的作者 leafo 同学最近写了一篇博客介绍基于 OpenResty/Lua + ImageMagick 构建图片处理服务器：http://t.cn/z8u2tWb 这篇东西发表之后给我的 openresty.org 网站带了很多流量   
微博位置: 无
发布时间: 2013-09-28 08:46
点赞数: 8   转发数: 13   评论数: 5
发布工具: 微博 weibo.com

958:我刚刚给 ngx_lua 新的 ngx.req.socket(true) API 添加了正式的文档：http://t.cn/zO8yu4E 基于这个接口可以实现像 WebSocket 这样的 HTTP 升级协议。lua-resty-websocket 库正是使用了这个接口。当然，利用这个接口还可以绕过 Nginx 的输出过滤器链，直接发送原始的 HTTP 响应头和响应体数据   
微博位置: 无
发布时间: 2013-09-28 08:41
点赞数: 7   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

959:我们线上的 CDN 系统使用 KyotoTycoon（KT）来同步客户配置相关的元数据，同时基于 ngx_lua 实现的 CDN 调度器使用的是 ngx_lua共享内存字典来缓存这些元数据，以减轻对 KT 的访问压力。但当共享内存字典中的数据过期时，可能会有多个并发请求触发对 KT 中同一个 key 的访问，对 KT 造成不必要的压力。  
微博位置: 无
发布时间: 2013-09-27 13:27
点赞数: 2   转发数: 11   评论数: 5
发布工具: 微博 weibo.com

960:我发现自己在微博上回复最多的一句话是：“请加入 openresty 邮件列表讨论这样的问题，谢谢合作！见 http://t.cn/zOctexB” 我很不喜欢通过微博评论、微博 @ 或者微博私信回答别人任何具体的技术问题。提问自然有提问的地方 [呵呵]  
微博位置: 无
发布时间: 2013-09-25 14:06
点赞数: 3   转发数: 13   评论数: 6
发布工具: 微博 weibo.com

961:我刚刚发布了 ngx_openresty 新的稳定版 1.4.2.8: http://t.cn/aCdPzo 完整的更动列表在这里：http://t.cn/zQHOqDV 相比前一个主线版本 1.4.2.7 并没有重要的变化。下一次主线版本的发布将包含 Lua 的 WebSocket 支持以及其他一些新功能。  原图 
微博位置: 无
发布时间: 2013-09-23 06:51
点赞数: 8   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

962:我们又对 KyotoTycoon 的 ktserver 服务器进程进行了线上 on-CPU 火焰图分析：http://t.cn/z81EeYr 从图上可以清楚地看到，gzip 压缩和解压操作统治着该进程的 CPU 时间，是统治性的瓶颈。既然知道了瓶颈所在，着手优化工作也就变得很容易了。最怕的是稀里糊涂地对只占 1% 的操作进行各种无谓的优化。  原图 
微博位置: 无
发布时间: 2013-09-22 11:37
点赞数: 4   转发数: 11   评论数: 8
发布工具: 微博 weibo.com

963:公司使用了基于 KyotoTycoon 实现的一个 FUSE 文件系统，叫 KTFS。最近使用 C 级别的火焰图工具对 KTFS 客户端进行了线上性能分析，结果发现 KyotoTycoon 的 RPC 实现的 base64 解码操作（即 koytocabinet::basedecode 函数）占了绝大部分 CPU时间。这个瓶颈实在太搞笑了。相关工程师已着手优化工作。  原图 
微博位置: 无
发布时间: 2013-09-22 11:12
点赞数: 1   转发数: 31   评论数: 7
发布工具: 微博 weibo.com

964:好想 10 月份去瑞士现场聆听一下 Mike Pall 大神关于 LuaJIT VM 实现的分享啊：http://t.cn/z81YMFv 可惜宝贝女儿马上快来了，等以后有机会再去欧洲朝圣吧，哈哈！  
微博位置: 无
发布时间: 2013-09-22 10:20
点赞数: 5   转发数: 2   评论数: 14
发布工具: 微博 weibo.com

965:Mike Pall 正在从事 CloudFlare 公司赞助的 LuaJIT 2.1 第三期开发工作。这一期工作包括 table.new(narr, nrec) 这个新 Lua API、JIT 编译 getfenv(0)、JIT 编译 TSETM 字节码、JIT 编译将 lightuserdata 类型隐式或显式 cast 为 void* cdata 类型的操作、以及绕过不能编译的原语进行分段 JIT 编译。  
微博位置: 无
发布时间: 2013-09-22 09:56
点赞数: 2   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

966:有意思，直接把 LuaJIT 2.0.2 替换成 LuaJIT 的 v2.1 分支，lua-resty-redis 的一个很简单的先 set 再 get 的例子在 ab 压测下，整体性能便提高了近 16%. 在我的笔记本上，ab 压出了 23000 qps 以上的好成绩。目前这个例子中许多 Lua 代码仍是解释执行的，所以可能还有很大的进一步提速的空间   原图 
微博位置: 无
发布时间: 2013-09-22 02:04
点赞数: 7   转发数: 16   评论数: 3
发布工具: 微博 weibo.com

967:昨天写了一个很简单的基于 stap++ 的工具，叫做 ctx-switches，可以实时统计指定的用户进程内部每秒钟发生的上下文切换的次数。切入和切出事件都被计算在内。工具的源码实现在这里：http://t.cn/z8n8aRS 下图给出了一个使用实例。  原图 
微博位置: 无
发布时间: 2013-09-20 07:00
点赞数: 4   转发数: 30   评论数: 3
发布工具: 微博 weibo.com

968:几天前用一点点 stap++ 代码写了一个叫做 ngx-req-latency 的工具，可以实时统计指定的 nginx worker 进程中所有请求的延时分布（不包含请求头的读取时间）。工具的源代码在这里：http://t.cn/z8nHNWD 这个工具还支持通过 --arg method=POST 选项按指定的请求方法对统计延时的请求进行筛选。  [组图共2张] 原图 
微博位置: 无
发布时间: 2013-09-20 06:31
点赞数: 4   转发数: 24   评论数: 2
发布工具: 微博 weibo.com

969:Wingify 公司的工程师写了一遍文章介绍了他们的 OpenResty 实践：http://t.cn/z8Ke6uX 记得一二年前他们还在折腾 PHP 和 Varnish 优化的时候，我就跟他们的 CTO 同学讲：“别闹了，还是换 Nginx Lua 吧！”  原图 
微博位置: 无
发布时间: 2013-09-18 07:21
点赞数: 3   转发数: 21   评论数: 7
发布工具: 微博 weibo.com

970:自从搬到 Millbrae 住之后，每天中午就不能回家午睡了。。。那叫一个困啊。。。我的同事 Tom 于是给我看了一个名为 SleepingChinese.com 的网站，太搞了：http://http://t.cn/hVT1f  原图 
微博位置: 无
发布时间: 2013-09-18 07:12
点赞数: 0   转发数: 11   评论数: 7
发布工具: 微博 weibo.com

971:今天我发布了 ngx_openresty 新的主线版本 1.2.4.7: http://t.cn/aCdPzo 包含了 ngx_lua 模块和 ngx_echo 模块在过去一周之内积累的所有 bug 修复：http://t.cn/zQHOqDV 这次发布只是例行的维护版，并没有包含 ngx_lua 新的 websocket 支持。我打算先基于 1.2.4.7 发布一个新的稳定版出来 :)  原图 
微博位置: 无
发布时间: 2013-09-16 11:15
点赞数: 6   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

972:经过一周的努力，我为 ngx_lua 模块实现了较完整的WebSocket支持，主要通过lua-resty-websocket这个Lua库：http://t.cn/z8liYo9 目前需要配合使用 ngx_lua 的 websocket这个 git 分支：http://t.cn/z8liYoa 感谢德国一家互联网公司主动赞助这一块的开发工作。在 Chrome, Firefox和Opera 上测试通过。  原图 
微博位置: 无
发布时间: 2013-09-15 09:32
点赞数: 11   转发数: 71   评论数: 16
发布工具: 微博 weibo.com

973:原先我只有写 C 的时候才会脑海中不自觉地浮现对应的 x86 机器指令。现在发现我写 Lua 代码的时候也会不自觉地浮现对应的机器指令了，或许是因为我现在经常喜欢查看 LuaJIT 的 JIT 编译器生成的机器码的缘故。。。不知道这究竟是进步了还是退步了。。。  原图 
微博位置: 无
发布时间: 2013-09-13 11:01
点赞数: 9   转发数: 11   评论数: 15
发布工具: 微博 weibo.com

974:自从 Nginx 添加了对 SPDY 的支持以后，很多人都关注 ngx_lua 模块对 Nginx SPDY 模式的兼容性，包括 Nginx 公司。由于 Nginx 的 SPDY 实现本质上 fork 了很多现有代码，所以如果第三方模块想直接操纵下游连接的话，也需要专门为 SPDY 模式 fork 许多代码，很纠结。我得跟 Nginx 公司的人好好聊聊。。  原图 
微博位置: 无
发布时间: 2013-09-13 10:25
点赞数: 3   转发数: 6   评论数: 7
发布工具: 微博 weibo.com

975:今天在 Josh Stone 从前写的一个 stap 脚本的基础上用 stap++ 语言编写了一工具，叫做 vfs-page-cache-misses 可以实时统计指定的单线程进程上下文中所有 vfs_read 调用对应的 page cache 的命中率：http://t.cn/z8CexPq 当然，用户也可以在命令行上指定统计其他的内核函数或系统调用。见下图的例子。  [组图共2张] 原图 
微博位置: 无
发布时间: 2013-09-12 07:33
点赞数: 4   转发数: 18   评论数: 2
发布工具: 微博 weibo.com

976:先前我们的网络工程师向我反映一个机房的一种类型的网络超时错误的频率比较高，对于某些客户达到百分之几的水平。然后我通过一系列 systemtap 工具确定是一处共享内存相关的锁和文件 IO 对 nginx 的阻塞而导致的。前者很容易在软件层面搞定，而后者则通过更换硬盘解决。然后那种网络超时就几乎绝迹了。  原图 
微博位置: 无
发布时间: 2013-09-09 14:11
点赞数: 4   转发数: 18   评论数: 11
发布工具: 微博 weibo.com

977:我刚发布了新的 ngx_openresty 1.4.2.5 开发版：http://t.cn/aCdPzo 包含了最近 5 天所有的 bug 修复和新特性：http://t.cn/zQHOqDV 其实 OpenResty 的开发版也是按生产质量来测试的，我们公司线上跑的其实就是开发版。或许我应该仿照 Nginx 的做法，把“开发版”重命名为“主线版”（mainline）。  原图 
微博位置: 无
发布时间: 2013-09-09 08:27
点赞数: 2   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

978:热烈庆祝 dtrace 十岁生日：http://t.cn/z8I5vYV （稍微晚了两三天。。。）这确实是真正的二十一世纪的神器啊，彻底改变了我调试各种线上问题的视角和方式。  原图 
微博位置: 无
发布时间: 2013-09-07 02:40
点赞数: 4   转发数: 21   评论数: 23
发布工具: 微博 weibo.com

979:Mike Pall 最近向 LuaJIT 的 v2.1 分支提交了一系列补丁，为 LuaJIT 的解释器部分实现了原生 Lua 代码性能分析器。其中一个更动我特感兴趣，即把当前正在运行的 lua_State 保存到 g->cur_L 这个位置，这意味着当前运行的 lua_State 终于放到堆上了！我的 Lua 语言火焰图工具终于可以克服现有的限制了！  
微博位置: 无
发布时间: 2013-09-05 08:49
点赞数: 7   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

980:@陈小玉 我们公司办公室的 wifi 速度还不错。实测了一下，下行有 87Mbps 以上，上行也有 69Mbps  我自己家的 comcast 下行也有 58Mbps，而上行只有 11Mbps.  
微博位置: 无
发布时间: 2013-09-05 02:13
点赞数: 4   转发数: 11   评论数: 9
发布工具: 微博 weibo.com

981:我刚刚发布了 ngx_openresty 新的开发版 1.4.2.3: http://t.cn/aCdPzo 包含了各组件最近几周所有的 bug 修复和新特性。完整的更动列表在这里：http://t.cn/zQHOqDV 一如既往地感谢所有的贡献者！  原图 
微博位置: 无
发布时间: 2013-09-03 15:48
点赞数: 3   转发数: 9   评论数: 8
发布工具: 微博 weibo.com

982:我继续推动公司赞助 Mike Pall 进行 LuaJIT 2.1 的开发工作。我这几日根据 OpenResty 的实际需要和与 Mike Pall 的邮件讨论，基本确定了未来两期的开发内容，主要是 JIT 编译 getfenv(0), TSETM 字节码、coroutine.yield() 和 pairs() 这些原语，以及新增 table.new(narr, nrec) 和 string.buffer API.  原图 
微博位置: 无
发布时间: 2013-09-01 09:26
点赞数: 5   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

983:未来一个月内我将为 ngx_lua 模块实现比较完整的 WebSocket 协议支持。这是 OpenResty 社区最近几个月呼声最高的 feature requests 之一。  
微博位置: 无
发布时间: 2013-08-30 06:21
点赞数: 24   转发数: 7   评论数: 13
发布工具: iPhone客户端

984:我开始尝试使用 LuaJIT 2.1 对公司 Lua WAF 系统中的 Lua 代码基进行 JIT 编译。当使用 ngx_lua 的 ffi 分支以及 lua-resty-core 库，同时再对我们的业务 Lua 代码进行了少许修改之后，相当一部分较热的 Lua 代码路径都能被 JIT 编译了。ab 压测显示，对于最简单的 GET 请求，WAF 性能整体提升了 62%！  原图 
微博位置: 无
发布时间: 2013-08-29 09:30
点赞数: 2   转发数: 46   评论数: 10
发布工具: 微博 weibo.com

985:今儿融合了戴冠兰编写的 ngx-phase-handlers 工具到 Nginx Systemtap Toolkit：http://t.cn/z8AAO08 利用这个工具，可以从任意运行着的 nginx worker 进程中得到当前注册到 nginx 的所有阶段处理程序的列表，并按其实际运行顺序输出。这极大简化了调试那些因 nginx 配置指令的执行顺序而导致的问题。  原图 
微博位置: 无
发布时间: 2013-08-27 13:01
点赞数: 3   转发数: 16   评论数: 5
发布工具: 微博 weibo.com

986:昨天在全公司的啤酒周会（beer meeting）上，我作了一次关于“off-CPU 火焰图”的分享。幻灯片在这里：http://t.cn/z8hg8Ca 其实我特别喜欢把幻灯片当作是连贯性更好的微博，毕竟我的每一张幻灯片也就一两句话或一张图，可近似于一条微博，嘿嘿。在幻灯片中我还顺带着介绍了其他动态追踪工具。  原图 
微博位置: 无
发布时间: 2013-08-25 03:23
点赞数: 6   转发数: 36   评论数: 15
发布工具: 微博 weibo.com

987:我之所以特别青睐“火焰图”这种可视化方法，是因为它是少数几种可以直接指导行动（actionable）的可视化形式，特别是直接指导软件系统的优化工作。而反观许多外表很华丽但却不能指导实际行动的各种性能指标图，会发现它们至多只能作为参考和辅助旁证罢了。  
微博位置: 无
发布时间: 2013-08-23 09:22
点赞数: 4   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

988:当用户态的火焰图指示出系统调用是瓶颈时，一方面我们可以通过节约不必要的系统调用来优化，另一方面我们也可以尝试对系统调用本身进行优化。比如，我们可以通过绘制内核空间的“off-CPU 火焰图”来分析 open(), pread64() 等系统调用具体是在内核里的哪些代码路径上阻塞住的：http://t.cn/zQslTvX  原图 
微博位置: 无
发布时间: 2013-08-23 09:02
点赞数: 1   转发数: 12   评论数: 4
发布工具: 微博 weibo.com

989:开源系统各层的软件一般都会提供很多的配置参数。我们前面已经看到如何通过 systemtap 实现的动态追踪工具来指导 nginx 的某些参数的配置。一个不起眼的参数的大与小，可能便会让系统性能有成倍乃至成数量级的差别。工具不仅能告诉我们在多如繁星的参数里最应去调哪一个，而且还能指导具体调整的数值。  原图 
微博位置: 无
发布时间: 2013-08-23 08:12
点赞数: 4   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

990:启用 nginx 的 open_file_cache 指令可以对打开的文件句柄进行缓存，从而节约昂贵的 open() 系统调用。前面我们已使用 ngx-open-file-cache-missses 工具看到通过扩大这个缓存的容量可以提高线上的实际命中率。但是缓存容量并不是越大越好，比如当达到 20000 个元素的容量时，共享内存的锁就成了瓶颈。  原图 
微博位置: 无
发布时间: 2013-08-23 07:01
点赞数: 1   转发数: 11   评论数: 5
发布工具: 微博 weibo.com

991:自从实现了 stap++ 解释器之后，开发新工具的速度就大大加快了。前些天我还实现了一个 ngx-open-file-cache-misses 工具，可以实时统计某个 nginx worker 进程中 open_file_cache 这个文件句柄缓存的命中率（见下图）。使用 nginx 官方文档中的默认配置，对于我们的一台生产机来说，只有 9% 的命中率。  原图 
微博位置: 无
发布时间: 2013-08-21 14:46
点赞数: 2   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

992:当我们知道了 open 和 read 这些系统调用的延时分布之后，我们便可以很容易地确定“慢”的标准，从而进一步地对发生频率足够小的“慢样本”进行更为细致的分析，比如实时打印出每个“慢样本”的相关细节信息。slow-vfs-reads 这个工具便可以打印超过指定延时（ms）的文件读操作的相关细节（见下图）。  原图 
微博位置: 无
发布时间: 2013-08-21 14:16
点赞数: 2   转发数: 13   评论数: 6
发布工具: 微博 weibo.com

993:当 off-CPU 火焰图指示出文件 I/O 相关的系统调用是瓶颈时，可以对这些系统调用（或其调用的内核函数）的延时的分布进行线上实时统计。于是用一点 stap++ 代码写了一个通用的函数延时分布的统计工具，叫做 func-latency-distr: http://t.cn/zQDAWil 这里统计的函数可以自己指定，比如下图中的例子。  原图 
微博位置: 无
发布时间: 2013-08-21 13:54
点赞数: 1   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

994:我使用二三十行 stap++ 代码写了一个 epoll-loop-blocking-distr.sxx 工具，可以对 epoll_wait 驱动的事件处理循环的阻塞延时的分布进行实时统计：http://t.cn/zQDwJCi 下图是它在我们一台 SSD 硬盘有性能问题的生产机上的运行结果。  原图 
微博位置: 无
发布时间: 2013-08-21 13:40
点赞数: 1   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

995:前两天花了几行 stap++ 代码写了一个 ngx-rps 工具，可以实时统计指定的某个 nginx worker 进程中每秒种处理结束的请求数，一秒更新一个数（见下图中在一台生产机上的示例）。这个工具的源码在这里：http://t.cn/zQDzyhz 在生产环境追踪 nginx 相关的问题时，一般会选择一个比较繁忙的 worker 进程。  原图 
微博位置: 无
发布时间: 2013-08-21 13:13
点赞数: 2   转发数: 16   评论数: 6
发布工具: 微博 weibo.com

996:systemtap 和 dtrace 都可以运行多个实例，同时对一个用户进程进行各自独立的追踪分析，这是一个很有用的特性。比如对线上的同一个用户进程，我可以同时运行两个不同功能的 systemtap 工具，然后根据两个工具各自的输出，按时间点把各自统计的事件直接关联起来（如果真的存在关联的话），方便调试。  
微博位置: 无
发布时间: 2013-08-19 10:43
点赞数: 0   转发数: 6   评论数: 7
发布工具: 微博 weibo.com

997:我喜欢把运行中的软件系统本身直接看作是一个结构化的数据库，而 systemtap 或dtrace 就相当于这些数据库的查询接口。能否得到可以指导行动的结果取决于你能否写出漂亮的查询语句。本质上这是一个数据分析问题。dtrace 的一大特色便是在数据源上就地进行各种统计分析，而不是输出一个巨大的流水日志。  
微博位置: 无
发布时间: 2013-08-19 00:01
点赞数: 8   转发数: 33   评论数: 6
发布工具: iPhone客户端

998:最近注意到有一些朋友对我在 systemtap 方面的工作比较感兴趣，我推荐阅读 dtrace 社区的图书和网上资料，特别是 dtrace.org 上的博客文章，建议从几年前的文章读起，尤其是 Brendan Gregg 老师的。我最初就是这么学习的。dtrace 世界的很多思想、方法甚至于某些重要的细节都适用于 Linux + systemtap.  原图 
微博位置: 无
发布时间: 2013-08-18 15:20
点赞数: 5   转发数: 70   评论数: 17
发布工具: 微博 weibo.com

999:我一直把微博作为个人的工作笔记，最主要面向的读者其实是我自己。不使用twitter的原因是我只在那里使用英语，而140个英文字母的表达力显然远不及140个汉字。即便如此，我也无法在微博上展开所有细节，所以背景知识不足的读者如果希望能理解我说的，需要自己做许多功课，而且我一般会尽量提供超链接。  
微博位置: 无
发布时间: 2013-08-18 14:51
点赞数: 12   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

1000:在一个快速成长的创业公司里，我不太可能有时间和精力像 review 我的开源项目的每一个补丁那样仔细检查每一个工程师的每一次代码提交，所以我对线上系统的控制力便只能通过 systemtap 这样的动态追踪工具来实现，在出现问题时快速定位并找到相关责任人，然后推动他们去整改。"Ship early, fix later."  
微博位置: 无
发布时间: 2013-08-17 13:22
点赞数: 6   转发数: 29   评论数: 5
发布工具: 微博 weibo.com

1001:对于使用了http cache的 nginx 服务来说（无论是proxy_cache还是fastcgi_cache），读写文件系统上的 http 响应缓存数据的操作很容易成为阻塞事件循环的主要瓶颈，毕竟文件 I/O 在这里几乎总是阻塞的，无论是read系统调用还是sendfile*系统调用。所以下面这个工具能显示文件 IO 对事件循环的阻塞延时。  原图 
微博位置: 无
发布时间: 2013-08-17 12:49
点赞数: 1   转发数: 23   评论数: 5
发布工具: 微博 weibo.com

1002:nginx这样的事件驱动的服务，由 epoll_wait等系统调用驱动的事件循环是最核心的结构；这里影响到性能的东西几乎总是那些会长时间阻塞事件循环的操作。前几天使用 stap++ 语言花了18行代码（除去空行和注释）编写了一个名为epoll-loop-blocking的工具可以对阻塞时间进行定量统计：http://t.cn/zQ3WJlV  原图 
微博位置: 无
发布时间: 2013-08-17 12:33
点赞数: 1   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

1003:很荣幸地看到，我在“内存泄漏火焰图”方面的工作为 Brendan Gregg 老师的最近一篇博客所引用：http://t.cn/zQ32t8o Brendan 老师一如既往地用很生动的文笔对这个主题进行了全面而又深入的讨论。我在过去的一年多时间里经常能从他的博客中得到灵感，并应用到 Linux 环境中去，指导线上的优化和排错。  
微博位置: 无
发布时间: 2013-08-17 09:37
点赞数: 5   转发数: 17   评论数: 4
发布工具: 微博 weibo.com

1004:（接上条微博）在移除了那个引发 mutex 锁瓶颈的历史遗留监测点之后，我们可以得到下面这张新的针对 nginx 的 off-CPU time 火焰图：http://t.cn/zQ36tH5 从图上我们可以清楚地看到 open() 系统调用是下一个最明显的性能瓶颈，于是自然想到优化 nginx 的“文件句柄缓存”的配置：http://t.cn/zQ36tHG  原图 
微博位置: 无
发布时间: 2013-08-17 09:23
点赞数: 0   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

1005:（接上条微博）在相关责任工程师移除了我通过 off-CPU 火焰图捕捉到的历史遗留配置之后，那个曾经占据 70% 的 off-CPU 时间的代码路径就从火焰图上彻底消失了。随之而来的是线上超时请求的急剧下降。下图显示的是 Ashburn 机房响应时间超过 1 秒的请求数在修复前后的变化；我们看到下降了近一半之多。  原图 
微博位置: 无
发布时间: 2013-08-17 09:14
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1006:最近我使用 off-CPU time 火焰图工具捕捉到一个比较严重的线上瓶颈。线上通过 ngx-sample-bt-off-cpu 工具（http://t.cn/zQuLxDS ）采样 nginx 得到的火焰图在这里：http://t.cn/zQuLxD9 从图上可以看到有一个使用互斥锁的 http cache 检查代码让绝大部分的 off-CPU 时间（70%）都花在等待进程锁上。  原图 
微博位置: 无
发布时间: 2013-08-16 12:59
点赞数: 1   转发数: 19   评论数: 8
发布工具: 微博 weibo.com

1007:在追踪生产系统中的一些异常现象时，往往需要追踪那些千分之几甚至万分之几的小频率事件，此时使用 systemtap 等动态追踪工具进行分析时，应当先进行宏观统计，定量地确定目标事件在整体上的发生频率和相关指标的分布规律，因为这可以指导进一步筛选和分析目标事件的工作，同时确保大方向上没有偏差。  
微博位置: 无
发布时间: 2013-08-15 13:41
点赞数: 5   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

1008:这几天编写了一个 stap++ 解释器：http://t.cn/zQRQGgM 通过一些宏记法对 systemtap 标准的脚本语言进行了扩展，抽象掉了那些最恶心最不方便的东西，同时支持了一个更像样的模块系统，使得追踪用户态的代码复用变得真正可行。stap++ 其实集成了 Nginx Systemtap Toolkit 中那些工具内部的相似代码。  原图 
微博位置: 无
发布时间: 2013-08-14 09:24
点赞数: 3   转发数: 20   评论数: 5
发布工具: 微博 weibo.com

1009:systemtap 等动态追踪工具的最大威力体现在跨层面进行追踪的能力。最简单的跨层追踪可做成在多个层面上插入动态探针，然后通过自己的状态机进行调度。不过，还有一种重要的能力是在一个层面上的探针处理程序里直接读取其他层面上的当前状态。比如在用户态代码的某个探针上直接读取内核中的相关状态。  
微博位置: 无
发布时间: 2013-08-13 10:10
点赞数: 1   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1010:我刚刚发布了 ngx_openresty 新的开发版 1.4.2.1，将 nginx 核心升级到了最新的稳定版 1.4.2. 同时升级了 lua-resty-dns 库，使得在 DNS 服务器返回错误时也能像 dig 工具一样返回所有的应答记录。完整的更动列表在这里：http://t.cn/zQHOqDV 这个版本完整的 EC2 测试报告在：http://t.cn/zOjYAFN  原图 
微博位置: 无
发布时间: 2013-08-12 12:36
点赞数: 5   转发数: 9   评论数: 1
发布工具: 微博 weibo.com

1011:刚刚我发布了 ngx_openresty 新的开发版 1.4.1.3: http://t.cn/aCdPzo 包含了过去几周对多个组件模块的众多 bug 修复，其中一些 bug 由来已久，幸亏最近运气不错，都修好了。完整的更动列表在这里：http://t.cn/zQqmp0S 一如既往地感谢所有的贡献者！目前我在这个项目上的工作重心仍是确保正确性。  原图 
微博位置: 无
发布时间: 2013-08-07 11:50
点赞数: 6   转发数: 9   评论数: 9
发布工具: 微博 weibo.com

1012:两天前写了一个很简单的 systemtap 脚本，可以通过实时采样准确定位和统计任意 C 进程中的内存泄漏，并可以绘制出一种新类型的“火焰图”，即“内存泄漏火焰图”。比如下面这张图清晰地指示出了 Nginx 核心中的一处泄漏（Nginx 官方已经根据我的提示修正了这处泄漏）。图中一个样本对应泄漏的一字节。  原图 
微博位置: 无
发布时间: 2013-08-06 03:43
点赞数: 15   转发数: 99   评论数: 24
发布工具: 微博 weibo.com

1013:不知不觉我或许也进入了和当年晓哲老师类似的状态，即＂以解决各种诡异问题为乐＂。各种白痴问题就是需要强大的工具快速定位，而真正 NB 的问题还是需要通过各种蛛丝马迹慢慢去＂悟＂。而调试技术的进步就体现在把后者越来越多地变为前者。人总不免会犯错，于是排错也就无法逃避。  显示地图 
微博位置: 无
发布时间: 2013-08-04 08:44
点赞数: 5   转发数: 6   评论数: 5
发布工具: iPhone客户端

1014:刚刚融合了 Matthieu Tourne 同学的一个补丁，为 ngx_lua 模块的共享内存字典对象添加了 get_stale(key) 方法，可以返回已经过期了的值。文档在：http://t.cn/zQahXeg 当然，由于 ngx_lua 会主动释放一些已过期的键值对，所以这个方法不一定总能返回值。补丁在这里：http://t.cn/zQahXee  
微博位置: 无
发布时间: 2013-08-02 09:22
点赞数: 1   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

1015:在 Nginx 最新的官方开发版 1.5.3 中包含了我期待已久的一处修复，即现在 nginx 终于不会再将来自上游的发生截断的响应体作为完整无缺的响应发送给下游了。发生截断的原因有很多，比如网络超时，或者上游服务器提前断连接，或者上游服务器设置了错误的 Content-Length 响应头，等等。  原图 
微博位置: 无
发布时间: 2013-07-31 13:06
点赞数: 1   转发数: 9   评论数: 11
发布工具: 微博 weibo.com

1016:上周在生产环境拿到了我们的内核工程师新编的一个 3.10.1 的内核，我首先想到的是在上面跑一遍 systemtap 的测试集，结果跑到中间 kernel panic 了，立马报告给 fche 老大：http://t.cn/zQ6UEMY 在短短几分钟之内，fche 老大便在 IRC 上给了我一个修复此问题的补丁，哈哈！不怕出问题，就怕没人修啊。  
微博位置: 无
发布时间: 2013-07-31 10:23
点赞数: 1   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

1017:最新的 3.10 的主流 Linux kernel 整合了 uretprobes 支持，从而使得 systemtap 得以重新支持用户态函数的 return 探针了。这是好消息。坏消息是，最新的 kernel 移除了 C 级别火焰图工具所依赖的 timer hook API，只是因为 kernel 那帮哥们误以为没人在用：http://t.cn/zQMsY5K 这是坏消息   原图 
微博位置: 无
发布时间: 2013-07-27 10:28
点赞数: 1   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

1018:Google Chrome 浏览器的 DevTools 最近也跟风整合了针对 JavaScript 代码性能分析的“火焰图”工具：http://t.cn/zQMswcS Chrome 称之为 Flame Chart，其实就是 Flame Graph. 这玩意儿就是有用，哈哈！Twitter 上有一哥们问 Google 早干嘛去了，呵呵。  原图 
微博位置: 无
发布时间: 2013-07-27 10:14
点赞数: 4   转发数: 37   评论数: 6
发布工具: 微博 weibo.com

1019:systemtap 2.3 终于发布了！这次发布包含了我先前提交的那个大补丁，即让 @var() 支持几乎所有的上下文。发布公告在这里：http://t.cn/zQMFN9O 后面我得多多向这个项目贡献些新功能，比如浮点类型的支持，还有对 JIT 代码的 backtrace 支持，等等。我们生产环境的分析诊断越来越离不开这个框架了。  原图 
微博位置: 无
发布时间: 2013-07-27 10:01
点赞数: 2   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1020:我现在常鼓励用户为自己的服务进程生成“火焰图”，并把图贴出来给大伙看。然后我便可以“看图说话”，很惬意地一二三四地分析图上显示出来的真实的性能瓶颈，并提供优化建议。于是不再像原先那样经常围绕着用户自己想象出来的并不存在的性能瓶颈讨论上半天，白费工夫。按“火焰图”优化可谓屡试不爽。  
微博位置: 无
发布时间: 2013-07-26 13:44
点赞数: 4   转发数: 21   评论数: 6
发布工具: 微博 weibo.com

1021:前一阵子掉到了一坑里。我们的新内核是使用 gcc 4.7+ 编译的，但操作系统默认的 gcc 还是 4.4，而内核中的 struct module 在 gcc 4.4 和 4.7+ 这两种版本下的内存布局是不一样的（会根据 C 编译器是否支持 asm goto 特性而变化），便导致 systemtap 生成的内核模块和内核不匹配，从而无法卸载。  
微博位置: 无
发布时间: 2013-07-26 13:22
点赞数: 2   转发数: 12   评论数: 3
发布工具: 微博 weibo.com

1022:gcc 4.8 问题多多。我们的内核工程师先是用 gcc 4.8 编了一个 kernel 3.9，然后 xfs 很容易出现文件系统损坏。而后用 gcc 4.8 编了一个 gcc 4.7，结果再用这个 gcc 4.7 编译 kernel 3.10 的时候报莫名其妙的编译错误。不靠谱啊，哈哈！他现在终于老老实实地用纯纯的 gcc 4.7 了，嘿嘿。  
微博位置: 无
发布时间: 2013-07-20 09:02
点赞数: 0   转发数: 11   评论数: 8
发布工具: 微博 weibo.com

1023:由于 gdb 原生的命令语言实在太烂，我让戴冠兰同学转而使用 Python 来编写 gdb 的扩展命令脚本。虽然这种 Python 代码写起来还是有些臃肿，但已经能编写比较复杂的逻辑了，而且性能上也要快许多。冠兰这几天搞定了 lbt 命令：http://t.cn/zQ5AWd4 现在终于可以在 gdb 里直接得到 Lua 调用栈轨迹了！  原图 
微博位置: 无
发布时间: 2013-07-19 14:37
点赞数: 3   转发数: 15   评论数: 3
发布工具: 微博 weibo.com

1024:我刚刚发布了 ngx_openresty 新的开发版 1.4.1.1：http://t.cn/aCdPzo 主要包含了 Nginx 新的稳定版 1.4.1 以及 ngx_lua 模块近一个月以来所有的 bug 修复和新特性。完整的更动列表在这里：http://t.cn/zQqmp0S 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2013-07-19 08:02
点赞数: 5   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

1025:最近我们的 Lua WAF 系统在升级了规则库之后，因为一个拙劣的正则发生疯狂回溯，而出现 nginx worker 进程 CPU 占用长时间 100% 的情形。定位这个问题颇费了一些周折，因为 PCRE 正则库的 JIT 编译器动态生成的机器指令在运行时没有调试符号，所以现有的 gdb 和 systemtap 工具链都无法得到 C 调用栈。  
微博位置: 无
发布时间: 2013-07-18 14:34
点赞数: 0   转发数: 6   评论数: 7
发布工具: 微博 weibo.com

1026:根据我们线上 Lua CDN 系统的 C 级别“火焰图”，Redis 的作者编写的 lua-cmsgpack 库的 unpack 函数是性能瓶颈。而且从图上可以看到该库引发的 lj_tab_newkey 函数（及 resizetab 函数）调用耗时很多，这意味着该库并没有恰当地为 Lua table 预分配空间，而导致 table 动态增长：http://t.cn/zQqACyN  原图 
微博位置: 无
发布时间: 2013-07-18 14:02
点赞数: 1   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

1027:今天给我的 Nginx Systemtap Toolkit 添加了一个叫做 check-debug-info 的新工具，可以检查按 pid 指定的进程所对应的所有可执行文件（包括已经加载的动态链接库）是否包含有 DWARF 调试信息。文档在这里：http://t.cn/zQqveqC 我们用来验证生产环境。  
微博位置: 无
发布时间: 2013-07-18 11:40
点赞数: 1   转发数: 4   评论数: 1
发布工具: iPhone客户端

1028:刚给 Nginx Systemtap Toolkit 中的两个火焰图采样工具，ngx-sample-bt 和 ngx-sample-lua-bt，添加了一个新功能，即自动加载目标进程中所有动态链接库的调试信息。实现方法很简单，就是自动扫描 /proc/<pid>/maps 取得 DSO 文件的路径列表，然后通过 -d <path> 选项传递给 stap: http://t.cn/zQGe6Ta  
微博位置: 无
发布时间: 2013-07-18 09:45
点赞数: 2   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1029:在分析一个线上 core dump 文件时，使用戴冠兰在 Nginx GDB Utils 项目（http://t.cn/zQyED8d ）中实现的 gdb 命令对 Lua registry 表的内容进行分析，发现 ngx_lua 的 ngx.ctx 表存在内存泄漏。结合源码定位了一条特殊的代码路径确实存在泄漏，便很快在测试集中复现并修复了它：http://t.cn/zQb2PVR  原图 
微博位置: 无
发布时间: 2013-07-16 10:06
点赞数: 1   转发数: 11   评论数: 2
发布工具: 微博 weibo.com

1030:gdb原生的脚本语言有一大优点是它的变量（即所谓的“convenience variables”）可以自动携带被调试程序里的类型信息，这相比systemtap 的脚本语言是一大优势。但gdb脚本的劣势也很明显，即所有的 convenience variables 都是全局的，没有任何作用域可言。也没有可以分割和复用逻辑并返回值的“函数”。  
微博位置: 无
发布时间: 2013-07-13 13:26
点赞数: 2   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1031:最近和冠兰同学一起编写了一系列比较复杂的 gdb 扩展命令，自动化了对 nginx 和 luajit 中的许多数据结构的解释工作，为了简化对 core dump 文件的分析：http://t.cn/zQyED8d 遇到的一个突出问题是 gdb 的脚本语言里不支持作用域和局部变量，也没有函数这样的东西，在编写较为复杂的逻辑时非常痛苦。  
微博位置: 无
发布时间: 2013-07-13 13:08
点赞数: 1   转发数: 12   评论数: 2
发布工具: 微博 weibo.com

1032:今天在 IRC 上和 systemtap 的大佬们聊了一下给 stap 添加对 core dump 文件的分析支持。fche 同学建议为此给 stap 添加一个微型的 runtime，独立于现有的 kernel 和 dyninst 这两个 runtime，只需支持 probe begin 就可以了。我打算后面得空了搞一搞看。  
微博位置: 无
发布时间: 2013-07-10 16:27
点赞数: 2   转发数: 0   评论数: 0
发布工具: iPhone客户端

1033:昨晚使用 AddressSanitizer编译 nginx 来运行 ngx_lua 模块的测试集，结果捕捉到 nginx核心中的一处缓冲区越界读的问题（见下面中 ASan 工具的输出），于是我很快弄了一个补丁提交到了 nginx-devel 邮件列表：http://t.cn/zQAQKDi Valgrind 一直都未能捕获这个问题。当然，这仍然需要 no-pool 补丁。  原图 
微博位置: 无
发布时间: 2013-07-10 09:55
点赞数: 1   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1034:这几天利用 clang 的 AddressSanitizer （ASan）工具定位了 ngx_lua 模块中 ngx.var.VARIABLE 接口里的一处栈越界读的内存问题，很快便修复了它：http://t.cn/zQwRbt3 像这样的栈缓冲区的内存问题是无法通过 valgrind 捕获的  ASan 的报告如下所示。  原图 
微博位置: 无
发布时间: 2013-07-09 08:33
点赞数: 6   转发数: 27   评论数: 4
发布工具: 微博 weibo.com

1035:从 gcc 4.8 系列开始，整合了 Google 的 AddressSanitizer 工具，可以像 Valgrind 那样检测许多内存非法读写的问题，同时还能检测 Valgrind 无法检测的栈数据和全局数据的内存问题。而且 AddressSanitizer 的运行时效率要比 Valgrind 高出很多，从而使用线上采样运行变得可行。  
微博位置: 无
发布时间: 2013-07-09 07:58
点赞数: 1   转发数: 69   评论数: 14
发布工具: 微博 weibo.com

1036:最近请戴冠兰同学给我的 Nginx Systemtap Toolkit 添加了一个新的工具，名为 ngx-lua-conn-pools，可以打印出指定的 nginx worker 进程中 ngx_lua 模块所有的 cosocket 连接池的内部细节，包含池内和池外的连接数和连接复用次数的分布统计，可以指导连接池相关配置参数的调整：http://t.cn/zHsTxkO  
微博位置: 无
发布时间: 2013-07-01 00:31
点赞数: 1   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

1037:看到不少计算世界里比较有身份的人都称复杂性为敌人。确实，软件复杂度的提高通常意味着人们对软件的理解力和控制力的相对下降，是滋生各种问题的温床。不幸地是，对于很多重要的优化来说，总会不可避免地增加复杂度；而这些优化如果不做，则对应的软件会因为跑得不够快而丧失实用价值。这是很无奈的。  
微博位置: 无
发布时间: 2013-06-30 13:54
点赞数: 4   转发数: 25   评论数: 8
发布工具: 微博 weibo.com

1038:今天在用我的 ngx-shm 工具对 nginx worker 进程中的共享内存区域进行分析时遇到了read fault. 原来在 nginx reload 之后，新 fork 出来的 worker 进程里的共享内存页是按需映射的，即通过进程实际访问时产生 page fault 来实际加载数据到进程空间。如果在此之前使用 systemtap 访问是读不出数据的。  
微博位置: 无
发布时间: 2013-06-29 15:28
点赞数: 1   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

1039:最近我有幸招到了在美留学的戴冠兰同学跟着我混。这孩子非常给力！我的工作节奏被这位 90 后小朋友带得越来越快了，许多有趣的 systemtap 实时分析工具和 Lua 相关的优化工作都可以分分钟搞定了，真是好！我打算将他训练成十项全能，这样我就不用干活，只需要像 Linus 那样每天处理一下邮件了，哈哈！  
微博位置: 无
发布时间: 2013-06-28 10:21
点赞数: 8   转发数: 7   评论数: 13
发布工具: 微博 weibo.com

1040:刚刚我面试了一位来自 Apple 的内核工程师，聊得非常开心。我希望他能帮助我推进公司在 systemtap 和更一般的动态追踪方面的实践，特别是从 Linux 内核的层面。  
微博位置: 无
发布时间: 2013-06-28 10:09
点赞数: 8   转发数: 5   评论数: 13
发布工具: 微博 weibo.com

1041:开源世界的最大魅力之一就在于其多样性，而且是全球尺度上的多样性。这里有各式各样不同背景不同职业的人，有各式各样的想法和项目，就像一个巨大的 DNA 池，有很多不同基因汇聚其中，从而有机会产生一些很不了起的东西，就像自然选择的过程。虽然也会有大量垃圾和半成品，但也像自然界一样优胜劣汰。  
微博位置: 无
发布时间: 2013-06-26 13:18
点赞数: 8   转发数: 34   评论数: 12
发布工具: 微博 weibo.com

1042:systemtap 拥有一个初具规模的测试集，目前拥有 3000 多项测试，300 多个测试文件。有些奇怪的是，这个测试集是用 Tcl/Expect 驱动的，所以每个测试文件都是一个 Tcl 脚本，它一般会对应一个或多个 .stp 文件（即 stap 脚本文件）。而涉及用户态的测试一个或多个 .c 文件，作为被分析的用户态程序。  
微博位置: 无
发布时间: 2013-06-26 12:58
点赞数: 0   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

1043:systemtap 目前尚不支持读取和打印浮点数字段，所以目前只好用 user_long(&obj->field) 来直接读取对象 obj 的 double 类型的字段 field 里面的二进制值（即原始的编码过的浮点数），然后再在 perl 里面通过 print unpack("d", pack("q", $val)) 对这个二进制数进行解码，从而得到浮点数表示。  
微博位置: 无
发布时间: 2013-06-26 07:29
点赞数: 1   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1044:刚在 IRC 上跟 systemtap 的两个主要作者 jistone 和 fche 聊了很久，很开心。fche 给了我 systemtap 官方仓库的提交权限，让我在里面建分支玩  我 show 了一下我的 YAPC::NA 演讲的幻灯片，他们非常感兴趣。我还跟 jistone 同学聊了一下给 stap 语言添加一种新的带 DWARF 类型信息的变量类型。  原图 
微博位置: 无
发布时间: 2013-06-21 09:59
点赞数: 4   转发数: 4   评论数: 7
发布工具: 微博 weibo.com

1045:今天写了一个基于 systemtap 的工具用于实时捕捉线上 Lua 代码对共享内存字典中指定的 key 的所有写操作：http://t.cn/zH1XYJ4 Matthieu 在线上一运行这个工具就立马定位了他们 CDN 系统中的一处很傻的与缓存相关的 bug. 我们的技术老大 Lee 如是评论：“Systemtap saves the day again!”  原图 
微博位置: 无
发布时间: 2013-06-20 09:51
点赞数: 4   转发数: 11   评论数: 6
发布工具: 微博 weibo.com

1046:这两天给我的 sregex 正则库的 Pike VM 实现了一项优化，即在 NFA 的开始状态下，直接搜索正则允许的首字节，从而跳过那些不可能匹配的字节。例如正则 /a|ab/ 允许的首字节只可能是 a，于是可以用 memchr 直接定位，从而节约时间。对于某些用例有10 ~ 37 倍的性能提升。补丁在 http://t.cn/zH3aT1T  原图 
微博位置: 无
发布时间: 2013-06-19 10:03
点赞数: 1   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1047:昨天有幸在办公室里见到了姚伟斌同学 @淘文景 和另一位淘宝交易系统的朋友。同时把 Matthieu Tourne 和 Piotr Sikora 介绍给了他们。我已经和姚伟斌同学在 nginx 社区里神交多年了，现在终于见到真身了   
微博位置: 无
发布时间: 2013-06-19 09:17
点赞数: 3   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

1048:在开源世界混得越久便越是“惜问如金”，因为如果不做足功课就草率提问，对方会感觉没得到基本的尊重，因为等于是在浪费他的时间。而相反，如果自己已经充分思考过某个问题，并事先进行过学习和研究，则对方常会热情地回复和解答，这样我就可以得到更多更深入的帮助。大牛多是寂寞的；他们渴望知音。  
微博位置: 无
发布时间: 2013-06-16 13:13
点赞数: 21   转发数: 122   评论数: 22
发布工具: 微博 weibo.com

1049:在 EC2 上跑 Amazon Linux (kernel 3.2.39, CONFIG_UTRACE=y)，发现用 systemtap 去追踪系统调用的时候，每次系统调用都会触发两次 systemtap 的探针处理程序。或许这是 paravirtualization 技术导致的问题？  
微博位置: 无
发布时间: 2013-06-14 09:06
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1050:刚刚在调试一个 systemtap 测试集里的失败用例时，竟然使用了三重嵌套的 systemtap 分析树。即先用 stap 启动了一个进程 A，然后再用 stap 启动一个进程 B 去分析 A，最后再用 stap 启动进程 C 去分析 B，这样很快就定位了我的补丁中的一个 bug. 实际使用的 shell 命令序列>可以参见下面这张图   原图 
微博位置: 无
发布时间: 2013-06-13 13:20
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1051:上周末无聊给我的个人网站 agentzh.org 手绘的两个傻傻的 logo 贴到了下面。因为用工具转换成 16x16 的大小之后一片模糊，所以不能作为 favicon 了，但不影响放到这里供大伙乐一乐   [组图共2张] 原图 
微博位置: 无
发布时间: 2013-06-12 09:33
点赞数: 2   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

1052:在 LuaJIT 邮件列表里面看到 Declan White 同学直接使用 LuaJIT FFI 编写了一些 Lua 代码来自省 LuaJIT FFI 自身，很是有趣：http://t.cn/zH8lxA1 我其实一直想在 LuaJIT FFI 之上添加 DWARF 调试信息自省的功能，这样都不用自己声明 C 数据结构和函数原型了   原图 
微博位置: 无
发布时间: 2013-06-12 07:05
点赞数: 1   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

1053:我的 sregex 正则库的测试集中来自 PCRE 8.32 的测试用例捕捉到了 perl 5.18.0 的正则引擎中的一处衰退：http://t.cn/zH8lwSA 然后我在 YAPC::NA 2013 大会上面吸引到的资深 perl 开发者 Reini Urban 同学将之报告给了 perl 5 官方团队（即 p5p）：http://t.cn/zH8lwS2 现已在 blead perl 中修复。  
微博位置: 无
发布时间: 2013-06-12 06:52
点赞数: 2   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1054:刚刚发布了我的 Nginx 测试模块 Test::Nginx 0.22 到 CPAN 网络：http://t.cn/zHQHAYa 这次发布积累了过去 9 个月以来的所有 bug 修复和新特性。这个测试台驱动着我开发的所有 Nginx C 模块和 lua-resty-* 库的测试集：http://t.cn/zOjYAFN  原图 
微博位置: 无
发布时间: 2013-06-11 08:02
点赞数: 3   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

1055:今天我发布了 ngx_openresty 新的稳定版 1.2.8.6: http://t.cn/aCdPzo 将 LuaJIT 升级到了最新的稳定版 2.0.2. 完整的更动历史在这里：http://t.cn/zTK7GF2 感谢所有的贡献者和用户！下一次 openresty 的发布将基于新的 nginx 1.4.x 稳定版系列。  原图 
微博位置: 无
发布时间: 2013-06-11 07:52
点赞数: 3   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1056:刚刚给 openresty.org 和 agentzh.org 这两个网站分别画了一个 favicon 图标。在 pixel 的级别上画 16x16 的东西真是不容易呀，好在 MyPaint 勉强还能胜任工作   原图 
微博位置: 无
发布时间: 2013-06-10 09:55
点赞数: 4   转发数: 10   评论数: 13
发布工具: 微博 weibo.com

1057:这几年间我时不时都会有一种冲动，想把四五年前我所做的基于视觉信息进行自动化网页抽取的工作做成 Chrome 浏览器插件这样的每个人都可以方便使用的产品，而且事实上我自己在每天的上网活动中时不时也需要有这样的识别和抽取工具在手边  @珣新 @不如归零 @青青记录  [组图共3张] 原图 
微博位置: 无
发布时间: 2013-06-09 13:32
点赞数: 4   转发数: 7   评论数: 10
发布工具: 微博 weibo.com

1058:Oracle 世界的人们也开始使用 Brendan Gregg 的延时可视化技术来分析 Oracle 数据库的延时了：http://t.cn/zHlqJSq “Oracle Events' Latency Visualization and Heat Maps in SQL*plus” 我也有意为我们的在线系统采样绘制出各种延时热力图来   原图 
微博位置: 无
发布时间: 2013-06-08 15:20
点赞数: 2   转发数: 16   评论数: 6
发布工具: 微博 weibo.com

1059:现在连 Nginx 官方都会主动写邮件 push 我做 ngx_lua 等模块的一些开发和修复工作，感觉压力好大啊。。。不过，被别人 push 比自己去 push 别人要感觉好多了，毕竟主动权在自己手里，呵呵。  
微博位置: 无
发布时间: 2013-06-08 11:33
点赞数: 5   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1060:"Ken Thompson expressed his disappointment at the complexity of modern Linux, pointing to its 1000+ syscalls compared to the original Unix’s 200." -- Dave Pacheco, "ACM Turing Centenary Celebration": http://t.cn/zWwKoXn  
微博位置: 无
发布时间: 2013-06-07 10:24
点赞数: 1   转发数: 14   评论数: 8
发布工具: 微博 weibo.com

1061:软件和代码本身可以很优美很迷人，但其实更吸引人的是那些软件背后的那个人，那个人的思想和哲学。读代码也像读书一样，其实是在和作者进行交谈，在读“心”。扩展和改写别人的代码时，就像续写或修订别人没有完稿的小说。如果总是试图自己另起炉灶，便易失去许多和其他优秀工程师进行心灵沟通的机会。  
微博位置: 无
发布时间: 2013-06-05 13:59
点赞数: 5   转发数: 84   评论数: 22
发布工具: 微博 weibo.com

1062:图解 systemtap 是如何工作的。为简单起见，这里省略了 stap 和 staprun 的相关细节。  原图 
微博位置: 无
发布时间: 2013-06-04 13:56
点赞数: 2   转发数: 9   评论数: 3
发布工具: 微博 weibo.com

1063:今天在 YAPC::NA 大会上作了“Streaming regex matching and substitution by the sregex library”的闪电分享。第一次在那么大的会议厅里面对那么多国际友人作分享。会议厅的投影仪分辨率很大，早知道我就不必按800x600来设计幻灯了。5 分钟讲了 30 张幻灯，很爽！幻灯在这里：http://t.cn/zHCrPQg  原图 
微博位置: 无
发布时间: 2013-06-04 12:08
点赞数: 3   转发数: 18   评论数: 10
发布工具: 微博 weibo.com

1064:我开始在 MyPaint 里面尝试先用 2B 铅笔的笔刷勾勒出草图轮廊，然后再定义更高的图层来正式作画。这样就更接近真正的纸上绘画了，而且我可以在最后完工后整体去掉“草图”图层。其实把草图贴出来 show 一下也挺有趣的   原图 
微博位置: 无
发布时间: 2013-06-03 03:22
点赞数: 4   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1065:MyPaint 使得我可以在 Linux 上面使用 Bamboo 绘图板，但它的 GUI 界面里的画笔光标在大分辨率下几乎看不见，于是只好去翻它的源码，在 gui/cursor.py 源文件的 draw_brush_cursor 函数里把 width1 和 width2 这两个 python 变量的初始化值调大，再重启一下 mypaint 进程就 OK 了！开源软件就是好呀～  原图 
微博位置: 无
发布时间: 2013-06-03 02:44
点赞数: 2   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

1066:接触了 dtrace 和 systemtap 之后，我才开始把软件栈作为一个整体来进行考虑，因为在此之前，要想打通各个软件栈层次、对它们进行整体观察和分析是非常困难的事情。  原图 
微博位置: 无
发布时间: 2013-06-02 15:50
点赞数: 4   转发数: 6   评论数: 14
发布工具: 微博 weibo.com

1067:用 MyPaint 给“我的一天”画了一幅火焰图   原图 
微博位置: 无
发布时间: 2013-06-02 12:50
点赞数: 6   转发数: 6   评论数: 10
发布工具: 微博 weibo.com

1068:这两天我编写了一个基于 systemtap 的工具，叫做 pl-sample-bt，可以对指定的 perl 5 进程中的 Perl 代码调用栈进行高频采样（一般是 1k Hz），从而可以绘制出火焰图。下图是针对 ngx_lua 模块的测试台的一个 perl 进程采样 5 秒钟得到的火焰图，图中显示的函数帧都是 Perl 函数：http://t.cn/zHSeJkI  原图 
微博位置: 无
发布时间: 2013-06-01 14:54
点赞数: 2   转发数: 18   评论数: 2
发布工具: 微博 weibo.com

1069:刚才写stap脚本时掉一坑里了。@defined (@cast (ptr, "struct foo", "module")->bar)这个表达式中，若bar是struct foo的一个成员union，@cast 表达式是不能正确编译的（毕竟成员union并不是成员变量），但同时会导致@defined 表达式的值恒假，因为@defined 是根据其参数编译结果来判断是否解析成功的。  原图 
微博位置: 无
发布时间: 2013-06-01 10:44
点赞数: 1   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1070:"I have a very simple question to people... who seem to suffer from excessive narcissism: please name three other persons who are smarter and more capable than you, in the field you work in." -- Ingo Molnar (Linux kernel core developer)  原图 
微博位置: 无
发布时间: 2013-05-31 09:51
点赞数: 3   转发数: 21   评论数: 10
发布工具: 微博 weibo.com

1071:每次看 perl 解释器的 C 源都会感慨 Larry Wall 同学使用 C 宏的想象力。他几乎用 C 宏自创了一门 C 方言，所以我不禁惊呼自己不会 C 语言了。ctags 之类的东西在处理这样的东西时直接就残废了；我只能靠人肉 grep 了  原图 
微博位置: 无
发布时间: 2013-05-31 07:51
点赞数: 1   转发数: 12   评论数: 13
发布工具: 微博 weibo.com

1072:在 openresty-en（英文）邮件列表中，一哥们为 openresty 贡献了非阻塞的 lua-resty-rabbitmq 客户端库：http://t.cn/zHXB1I7 确实我也不该把“重要的事情”一鼓脑地都做完；给社区一些发挥的空间才是“可伸缩的”，哈哈！  原图 
微博位置: 无
发布时间: 2013-05-31 07:36
点赞数: 2   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1073:忙了一天一夜，终于给 systemtap 打了一个 200 多行的 C++ 补丁：http://t.cn/zH6Ho4t 现在我们可以在任意上下文中访问当前用户态进程中指定的全局变量，比如在 stap 函数和 timer.profile 探针等上下文里。这个功能非常重要，比如可以让 Perl、Lua、Java 等高级语言的“火焰图”工具变得很容易实现。  原图 
微博位置: 无
发布时间: 2013-05-30 12:44
点赞数: 12   转发数: 48   评论数: 8
发布工具: 微博 weibo.com

1074:在这几年仔细编写了许多 Nginx C 模块和 Lua 库之后，我的一个突出感受是，内存分配和缓冲区管理策略很容易成为Web接口本身的性能瓶颈（这里不考虑后端 DB 之类）。这也是为什么在 Nginx 核心中，经常宁可遍历计算两遍（其中第一遍计算所需的目标缓冲区的准确大小），也要避免多次分配内存和拷贝数据。  
微博位置: 无
发布时间: 2013-05-28 12:28
点赞数: 8   转发数: 26   评论数: 3
发布工具: 微博 weibo.com

1075:我这两天在和 LuaJIT 的作者 Mike Pall 讨论扩展 Lua 语言以便让它更加适合Web开发的需要。Mike 有意在 LuaJIT 中给 Lua 添加 table.new 和 io.buffer 这两个功能扩展，前者可以为 Lua table 指定数组和哈希表空间的预分配大小，后者则提供原生的 string buffer API（从而不再依赖 table + concat）。  原图 
微博位置: 无
发布时间: 2013-05-28 12:16
点赞数: 4   转发数: 16   评论数: 14
发布工具: 微博 weibo.com

1076:Mike Pall最近已经在 LuaJIT公开的 v2.1 git分支上面基本完成了我们公司（CloudFlare）赞助的第二期开发工作，包括 string.find函数（纯文本模式）、string.format函数（除了浮点数到字符串的转换）、ffi.new（变长及超过128字节的cdata创建）、ffi.gc(cdata, nil)等原语的 JIT 编译支持。真是神速呀！  原图 
微博位置: 无
发布时间: 2013-05-26 10:48
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1077:刚刚在 lua-resty-core 库中用 LuaJIT FFI 重新实现了 ngx_lua 模块的 ngx.re.gsub 函数。对于除了“多 submatch + 函数类型的替换参数”之外的各种情形，在 JIT 编译时相比 ngx_lua 模块的标准实现一般都有 30% ~ 70% 的性能提升   原图 
微博位置: 无
发布时间: 2013-05-26 09:32
点赞数: 1   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1078:刚刚发布了 ngx_openresty 新的开发版 1.2.8.5: http://t.cn/aCdPzo 主要包含了 ngx_lua 0.8.2、ngx_srcache 0.21 等组件模块的新版本。完整的更动列表在这里：http://t.cn/zTK7GF2 感谢所有的贡献者和用户！[呵呵]  原图 
微博位置: 无
发布时间: 2013-05-24 09:24
点赞数: 2   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

1079:dtrace 和 systemtap 这类框架的神奇之处就在于可以鼓励我们不断深入地去了解各种软件（包括操作系统内核）的内部实现，而且很多时候随便了解个一二分的源码便可以发挥出五六分的威力，做出很了不起的实时活体分析工具，使得我们可以直接去观察和测量许多原来只存在于教科书和静态源码中的抽象概念。  原图 
微博位置: 无
发布时间: 2013-05-23 14:17
点赞数: 4   转发数: 79   评论数: 6
发布工具: 微博 weibo.com

1080:最近做工具做上瘾了，今天又弄了一个新工具，叫做 ngx-accessed-files，可以打印出指定的某一个用户进程（不仅是 nginx！）在当前指定的一段时间内读写最多的文件的名字，可以和我的“文件 I/O 火焰图”工具配合在一起使用。该工具已添加到我的 Nginx Systemtap Toolkit 项目中：http://t.cn/zH4EfwN  原图 
微博位置: 无
发布时间: 2013-05-23 13:34
点赞数: 6   转发数: 31   评论数: 12
发布工具: 微博 weibo.com

1081:好吧。。。玩 Windows 的哥们也开始用 Xperf 工具来采样调用栈，从而绘制出 Windows 系统上的“火焰图”（flamegraph）了！http://t.cn/zHySckv Brendan Gregg 在下面的评论也是亮点，他介绍了他发明的“Hot Cold Graph”，把 on-CPU 样本和 off-CPU 样本同时画在了一张图上！[花心]  原图 
微博位置: 无
发布时间: 2013-05-22 14:24
点赞数: 2   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1082:对于“off-CPU 火焰图”来说，更有趣的是找出导致当前用户进程离开CPU的原因。做法是同时对用户级调用栈和内核调用栈进行统计。刚刚我给 ngx-sample-bt-off-cpu 工具添加了 -u 和 -k 选项，同时指定二者时就会同时采样用户态和核心态。下图是一张此种模式的“off-CPU 火焰图”：http://t.cn/zHAsLsA  原图 
微博位置: 无
发布时间: 2013-05-21 09:24
点赞数: 1   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1083:利用 DWARF 调试信息中的 DW_AT_producer 这一项的值可以确定二进制程序是用什么版本的编译器生成的，比如 DW_AT_producer 值可以是“GNU C 4.4.5”。刚刚我们的内核工程师给了我一个据称是用 gcc 4.8 编译的内核安装包，结果我用 dwarfdump 查看了一下它的 vmlinux 文件，发现还是用的 gcc 4.4.5   原图 
微博位置: 无
发布时间: 2013-05-21 08:46
点赞数: 1   转发数: 5   评论数: 0
发布工具: 微博 weibo.com

1084:刚写了一个基于 systemtap 的小工具，叫做 ngx-sample-bt-off-cpu，可以对一个用户进程离开 CPU 的时间（即 off-CPU time）进行统计，绘制出相应的用户态“火焰图”。图中的一个“样本”就对应该进程一微秒的离开 CPU 的时间。下图是 lua-resty-mysql 库访问 mysql 时的采样结果：http://t.cn/zHwKvwb  原图 
微博位置: 无
发布时间: 2013-05-20 15:39
点赞数: 1   转发数: 41   评论数: 8
发布工具: 微博 weibo.com

1085:在构造软件系统时，良好的封装和抽象能力是非常重要的；而在调试软件系统在生产环境中的各种行为和问题时，又需要能方便地打破那些封装的边界，深入到整个软件栈的任何一个层面上进行分析。幸运的是，经过良好设计和仔细构造的系统，一般也是易于调试的，特别是自解释的函数与变量命名和好的模块划分。  
微博位置: 无
发布时间: 2013-05-20 10:59
点赞数: 4   转发数: 17   评论数: 5
发布工具: 微博 weibo.com

1086:我在 FreeBSD 上的一位用户开始咨询在那个系统上运行 Nginx Systemtap Toolkit 里的工具的问题。显然我需要再搞一个 Nginx DTrace Toolkit，而且由于 FreeBSD 的 dtrace 比 Solaris 上的还要弱许多，所以难免我还要去 hack FreeBSD 上的 dtrace 实现。。。工程量大呀，而且只能在业余时间玩了   原图 
微博位置: 无
发布时间: 2013-05-20 10:45
点赞数: 1   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1087:好吧，果真有人把 Lua 解释器嵌入到自己的一个 Linux 内核模块中实现了一个基于 Lua 脚本语言的简化版 systemtap，名叫 ktap：http://t.cn/zH7L2Ek 这哥们还计划把一个修改过的 LuaJIT 给嵌进内核，哈哈！  
微博位置: 无
发布时间: 2013-05-19 02:27
点赞数: 4   转发数: 27   评论数: 11
发布工具: 微博 weibo.com

1088:最难诊断的一类问题就是 TCP 连接的超时错误，因为可能导致超时的各种因素很多，有应用层面的，有 kernel 层面的，还有网络链路上的。我基于 @chaoslawful 提供的 stap 脚本弄的 ngx-accept-queue 工具是一个很好的开始。下面我打算接着开发 ngx-tcp-receive-queue 工具，分析内核中的 TCP 接收队列。  原图 
微博位置: 无
发布时间: 2013-05-17 09:51
点赞数: 3   转发数: 21   评论数: 5
发布工具: 微博 weibo.com

1089:作为比较，我的 Fedora 17 自带的使用 gcc 4.7.2 编译的内核中，内联函数 tcp_openreq_init 在内联时对应的 DWARF 调试信息如下图所示。可以看到，在每一个 DW_TAG_formal_parameter 条目下面都有对应的 DW_AT_location 条目。systemtap 等调试器就是依赖 DW_AT_location 来定位函数参数的位置的。  原图 
微博位置: 无
发布时间: 2013-05-17 09:33
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1090:昨天尝试在公司产生用的系统上运行我的 ngx-accept-queue 工具，结果 systemtap 报告说无法定位内核函数 tcp_openreq_init 的参数。使用 dwarfdump2 工具检查了一下这个内核的 vmlinux，发现是因为 gcc 4.4.5 在编译内核源码时没有为内联函数的参数生成完整的调试信息，缺少 DW_AT_location 这个东西。  原图 
微博位置: 无
发布时间: 2013-05-17 09:24
点赞数: 0   转发数: 9   评论数: 2
发布工具: 微博 weibo.com

1091:在 VFS 的层面以下，越往底层去（即往块设备和磁盘驱动的方向去），就越难追踪 I/O 请求所对应的应用层（即用户进程）的上下文。毕竟来自不同进程的 IO 请求可能会被合并，同时由于page cache的存在，磁盘写操作也是异步分批运行，再加上文件元数据的读写、readahead 等很多因素的干扰，就更加复杂了。  原图 
微博位置: 无
发布时间: 2013-05-15 09:47
点赞数: 1   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

1092:Terra 语言看起来很有意思：http://t.cn/zTdw9LT 直接把 Clang/LLVM 和 LuaJIT 集成为一个统一的语言和平台，同时不再受限于 LuaJIT 的 FFI 访问 C 时依赖 ABI 的问题。这种思路看起来很有趣。我后面得好好想想如何把 Terra 集成进 OpenResty 里面去   原图 
微博位置: 无
发布时间: 2013-05-15 09:32
点赞数: 2   转发数: 20   评论数: 5
发布工具: 微博 weibo.com

1093:今天给我的 Nginx Systemtap Toolkit 添加了新工具 ngx-accept-queue: http://t.cn/zTg1eV4 使用此工具可以对监听在指定端口的服务所对应的 TCP 半连接队列和 accept 队列进行监视。当队列溢出时，会导致SYN包丢弃和重传，从而可能会导致连接超时。  原图 
微博位置: 无
发布时间: 2013-05-15 08:40
点赞数: 5   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1094:昨天我发布了 ngx_openresty 新的稳定版 1.2.7.8 和开发版 1.2.8.3，为 nginx 核心应用上了官方最近发布的针对安全问题 CVE-2013-2070 的补丁：http://t.cn/aCdPzo 更多细节请参见 http://t.cn/zTg3e2v  原图 
微博位置: 无
发布时间: 2013-05-15 08:30
点赞数: 0   转发数: 5   评论数: 0
发布工具: 微博 weibo.com

1095:Boss vs. Leader (from amix.dk)   原图 
微博位置: 无
发布时间: 2013-05-12 10:57
点赞数: 2   转发数: 45   评论数: 6
发布工具: 微博 weibo.com

1096:今天又给我的“文件 IO 火焰图”工具添加了对 I/O 延时的支持。在延时分析模式下，1 个样本对应 1 微秒的I/O 时间（使用 vfs_read或者 vfs_write调用的延时来近似），而不像原先的模式下，1个样本对应读或写的1个字节。针对 nginx 进程采样出来的一个“文件IO延时分布火焰图”：http://t.cn/zTnp1nw  原图 
微博位置: 无
发布时间: 2013-05-11 10:24
点赞数: 0   转发数: 8   评论数: 7
发布工具: 微博 weibo.com

1097:下面这张针对 nginx 进程的“文件写 IO 火焰图”中，我关闭了 nginx 的调试日志：http://t.cn/zTRQRSd 同时访问的 http 接口也不会自己去写文件。此时，我们可以在图中看到几乎所有的文件写 IO 都集中在了 Nginx 记访问日志的模块上面了（即对应 ngx_http_log_handler 这个函数帧）。完全符合预期！  原图 
微博位置: 无
发布时间: 2013-05-10 09:48
点赞数: 1   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

1098:现有的火焰图（flamegraph）工具都是针对 CPU 时间进行分析，其实也可以换成文件 I/O 等其他资源。我刚刚写了一个简单的 systemtap 脚本，在虚拟文件系统的层面上对文件写操作进行统计，从而可以得到了 Nginx 的文件写 I/O 对应的火焰图：http://t.cn/zTRHJzD 在这个例子里启用了 nginx 调试日志。  原图 
微博位置: 无
发布时间: 2013-05-10 09:33
点赞数: 0   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1099:我刚刚在 lua-resty-core 库中使用 LuaJIT FFI 重新实现了 ngx_lua 模块的 ngx.re.match 这个接口函数（基于 PCRE 的正则匹配）。完全使用 Lua 代码直接访问 ngx_lua 暴露出来的 C API，比原先的操纵标准 Lua C API 的纯 C 实现简洁清晰了许多，同时在 JIT 编译模式下性能也比老接口提升 30% ~ 6 倍。  
微博位置: 无
发布时间: 2013-05-08 12:35
点赞数: 6   转发数: 14   评论数: 3
发布工具: 微博 weibo.com

1100:"The assembler code of the (LuaJIT 2) interpreter has been globally scheduled by hand for each architecture. And, yes, it makes a difference. But the main pay-off of the assembler code comes from the global manual register allocation." - Mike Pall  
微博位置: 无
发布时间: 2013-05-08 06:55
点赞数: 1   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1101:我们公司（CloudFlare）开始赞助 Mike Pall 进行 LuaJIT v2.1 的第二期开发工作，主要内容包括给 JIT 编译器添加对下列原语的 JIT 编译支持： string.format、string.find 的纯文本模式、ffi.gc(cdata, nil)、ffi.new 的变长 cdata 创建和大于 128 字节的静态长度的 cdata 创建，等等。近期便有惊喜！  原图 
微博位置: 无
发布时间: 2013-05-07 09:36
点赞数: 6   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

1102:在用 v.dump 模块检查 LuaJIT v2.1 的 JIT 编译器生成的 x86_64 机器指令时又被惊到了：Lua 语句 if c == string.byte("o") 会直接被编译为指令“cmp ebx, +0x6f”，即 string.byte("o") 这个东西会直接被 JIT 编译器展开为常量 0x6f，即字符 o 的 ASCII 码。同时，只有实际用到的条件测试才会被编译。  原图 
微博位置: 无
发布时间: 2013-05-07 08:14
点赞数: 1   转发数: 4   评论数: 12
发布工具: 微博 weibo.com

1103:我现在都喜欢通过在邮件里面贴“火焰图”（flamegraph）来向 Mike Pall 展示 LuaJIT 对某些例子的性能瓶颈。这是演示 CPU 热点分布的最自然最直接的可视化方法。Mike 也通过这些图来对 LuaJIT 进行有针对性的优化。据我们的产品经理 Dane 介绍，他在和 Mike 电话沟通中，Mike 也表达了对火焰图的欣赏。  [组图共2张] 原图 
微博位置: 无
发布时间: 2013-05-05 01:47
点赞数: 6   转发数: 4   评论数: 7
发布工具: 微博 weibo.com

1104:我最近开始重新实现 ngx_lua 模块的 Lua API，基于 LuaJIT 的 FFI 接口。新版 API 通过外部 Lua 库的形式引入，库名叫lua-resty-core: http://t.cn/zTjCLgl 新 API 的大部分实现代码都使用Lua来编写，相比现有的纯 C 实现简洁了许多，同时在 JIT 编译时也可以跑得更快。更好的模块化设计是另一优势。  原图 
微博位置: 无
发布时间: 2013-05-05 00:41
点赞数: 4   转发数: 12   评论数: 7
发布工具: 微博 weibo.com

1105:Packt 出版社的几个编辑经常会发邮件问我是否有意撰写他们的一些微型技术图书的主题，有 Nginx 相关的，也有 Lua 相关的。他们一般会自己定好一些比较具体的标题，然后去 GitHub、邮件列表等地方物色合适的作者。无奈我工作一直很忙，要不花时间多写一些英文的东西也挺有意思的   原图 
微博位置: 无
发布时间: 2013-05-04 13:14
点赞数: 1   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

1106:性能优化和可调试性经常是一对矛盾。在将越来越多的 Lua 代码被 JIT 编译的过程中，一个较大的问题是我们现有的基于动态追踪技术的工具链（如“火焰图”）不再能取得 C 级别和 Lua 级别的调用栈信息了。幸运的是，Mike 指出即使是 JIT 后的 Lua 代码，其调用栈信息也还是在 VM 内部的某些数据结构里。  
微博位置: 无
发布时间: 2013-04-30 09:12
点赞数: 0   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1107:最近我都在思考 ngx_lua 模块迎合 LuaJIT 的 JIT 编译器的新架构。目前 ngx_lua 基于标准 Lua 的 C API 无法和 LuaJIT 的 JIT 编译器协作。新架构将把 Nginx 的 C API 先封装一层 ABI（因为 Nginx 自己没有 ABI），然后再写一层 Lua，通过 FFI 将这个 ABI 导出到 Lua 层面，重新实现现有的 Lua API.  原图 
微博位置: 无
发布时间: 2013-04-28 10:38
点赞数: 0   转发数: 16   评论数: 5
发布工具: 微博 weibo.com

1108:在我们公司的赞助下，Mike Pall 已经在 LuaJIT 仓库的 v2.1 分支上实现了 string.len, string.upper, string.lower, string.rep, string.reverse, string.char 以及字符串拼接运算符 .. （即 CAT 字节码）的 JIT 编译支持。我刚刚拿简单的循环例子测试了这些原语，相比原先的解释模式性能提升巨大！  原图 
微博位置: 无
发布时间: 2013-04-28 08:26
点赞数: 7   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

1109:我刚刚发布了 ngx_openresty 新的开发版 1.2.8.1: http://t.cn/aCdPzo 包含了 Nginx 1.2.8 核心，同时包含了 ngx_lua 模块全新的定时器 API，另外默认启用 Lua 实现的调试符号，以便能和 Nginx SystemTap Toolkit 一起工作。完整的更动列表在这里：http://t.cn/zTK7GF2 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2013-04-27 09:55
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

1110:Google Analytics 的报告显示 openresty.org 的流量这周狂涨，或许是因为 MoonScript 的作者 leafo 同学发布了基于 OpenResty + MoonScript 的 Web 框架 Lapis: http://t.cn/zTaH5ba 并且上了Hacker News：http://t.cn/zTS8wDf 话说我不得不佩服 leafo 同学的美工啊！  原图 
微博位置: 无
发布时间: 2013-04-26 08:02
点赞数: 1   转发数: 44   评论数: 11
发布工具: 微博 weibo.com

1111:刚刚尝试在 Amazon Linux 上从默认的 yum 源把 kernel 从 3.2.39 升级到了最新的 3.4.37，结果发现 Amazon 维护的这个 kernel 包竟把 utrace 补丁去掉了，打上了一个不能和 systemtap 一起工作的 uprobes 补丁，我汗啊。。于是立马丢弃了当前的虚机，并把 kernel 加进了 yum 配置文件的升级黑名单。  
微博位置: 无
发布时间: 2013-04-25 14:01
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1112:今天在公司一周一次的 Beer Meeting 上作了一次以“The Way of Optimizing and Troubleshooting Our Lua Waf”为主题的分享。幻灯片在这里：http://t.cn/zTJMlA7 后面我打算多做一些这样比较正式的讲演   原图 
微博位置: 无
发布时间: 2013-04-20 09:04
点赞数: 2   转发数: 12   评论数: 1
发布工具: 微博 weibo.com

1113:两天前我们的 Ops 发现我们的 Lua WAF 系统中有极少数的 nginx worker 陷入了热循环，CPU 总是保持在 100%. 产品经理针对这些 worker 采样出来的“火焰图”（flamegraph）都是类似这个样子：http://t.cn/zTJ58AP 显然，线上的 Lua 代码在某个 string.find() 调用附近陷入了无限循环，堵住了 Nginx.  原图 
微博位置: 无
发布时间: 2013-04-20 03:54
点赞数: 0   转发数: 9   评论数: 3
发布工具: 微博 weibo.com

1114:接前一条微博：从同一台机器采样到的Lua语言级别的“火焰图”（flamegraph）是这个样子的：http://t.cn/zTJ5STV 我们可以注意到 ngx_http_lua_re_gsub 和 ngx_http_lua_re_match 这两个函数（分别对应 ngx.re.gsub 和 ngx.re.match 这两个函数）占用了 80% 以上的样本（即对应相同比例的 CPU 时间）。  原图 
微博位置: 无
发布时间: 2013-04-20 03:31
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1115:前一阵子产品经理给我看了线上的 Lua WAF 系统最新的 C 语言级别的“火焰图”（flamegraph）：http://t.cn/zTJ5MlV 显然，大部分调用栈都不能正确取得。开始我还以为是调用栈采样工具的问题，或者是 gcc 生成了不正确的 DWARF 调试符号。后来我对照着看了 Lua 语言级别的“火焰图”才终于恍然大悟！  原图 
微博位置: 无
发布时间: 2013-04-20 03:23
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1116:社区用户把 openresty 加入了一个所谓的“Web Framework Benchmarks”竞赛项目中：http://t.cn/zTxtdst 可供一乐。可惜没有内存占用方面的比较。  
微博位置: 无
发布时间: 2013-04-19 08:07
点赞数: 0   转发数: 7   评论数: 5
发布工具: 微博 weibo.com

1117:刚刚发布了 ngx_openresty 新的稳定版 1.2.7.6: http://t.cn/aCdPzo 完整的更动列表在这里：http://t.cn/zYpvmjc 这是 1.2.7.x 系列中最后一次发布了。下面我终于可以放手开搞基于 Nginx 1.2.8 核心的 1.2.8.x 系列了   原图 
微博位置: 无
发布时间: 2013-04-19 00:45
点赞数: 6   转发数: 5   评论数: 8
发布工具: 微博 weibo.com

1118:Solaris 真是慢呀。在同一个 VirtualBox 里面，FreeBSD 9 完整地编译三遍 ngx_openresty 需要只需要 1m29s（在宿主操作系统 Linux 上需要 1m11s），而 Solaris 11 上编三遍则需要 2m54m. 两个虚机都分配了 4 个 CPU 核，内存也都足够大。难怪有些人喜欢戏称 Solaris 为 Slowris 了，呵呵。  
微博位置: 无
发布时间: 2013-04-17 09:32
点赞数: 0   转发数: 14   评论数: 10
发布工具: 微博 weibo.com

1119:公司特别想邀请 LuaJIT 的作者 Mike 到我们旧金山的办公室继续全职开发 LuaJIT，无奈 Mike 喜欢更充分的自由。现在公司准备了一笔较大的预算专门赞助 Mike 的 LuaJIT 项目的开发。开源作者的开价一般比较低，毕竟赞助的开发工作也是作者自己迟早要弄的。所以对于公司来说是非常划算的买卖   原图 
微博位置: 无
发布时间: 2013-04-16 09:30
点赞数: 2   转发数: 21   评论数: 8
发布工具: 微博 weibo.com

1120:最近我在 ngx_lua 项目的"timer" git 分支中实现了 Lua 语言级别的定时器 API，可以用于创建脱离当前请求执行的定时器。详细的描述发到了 openresty 邮件列表中：http://t.cn/zTfcqAA (从中国境内访问可能需要翻墙），欢迎多提意见！  原图 
微博位置: 无
发布时间: 2013-04-16 02:35
点赞数: 1   转发数: 18   评论数: 5
发布工具: 微博 weibo.com

1121:对于使用了大量正则的 ngx_lua 在线应用，实时统计出最耗时的正则匹配并有针对性地对正则进行优化是很重要的一种能力。我刚刚向我的 Nginx Systemtap Toolkit 添加了一个 ngx-pcre-stats 工具，可以对任意一个运行中的 nginx worker 进程进行这种实时采样统计：http://t.cn/zTtGwRt 支持多个维度。  原图 
微博位置: 无
发布时间: 2013-04-12 13:40
点赞数: 1   转发数: 12   评论数: 3
发布工具: 微博 weibo.com

1122:6 月 4 日我将在 Austin, Texas 举办的 YAPC::NA 2013 大会上作“Flame Graphs for Online Performance Profiling”的分享：http://t.cn/zT5AUQ2 公司报销我的行程和门票，正好带着老婆去 Austin 玩一玩  听大会委员会的一哥们说，Perl 教主 Larry Wall 也会出席，终于有机会一睹教主真容啦！  原图 
微博位置: 无
发布时间: 2013-04-11 07:05
点赞数: 11   转发数: 5   评论数: 11
发布工具: 微博 weibo.com

1123:我一直在期待 Anton Arapov 同学的 uretprobes 补丁能够合并进主流 Linux 内核，这样 systemtap 就可以挂载用户态函数返回时的事件了。在经历了很多次 review 和修改之后，貌似 Oleg Nesterov 同学终于给这个补丁开绿灯了，哈哈！http://t.cn/zTq4mvw  
微博位置: 无
发布时间: 2013-04-10 09:45
点赞数: 2   转发数: 11   评论数: 1
发布工具: 微博 weibo.com

1124:我刚刚发布了 ngx_openresty 软件包新的开发版 1.2.7.5: http://t.cn/aCdPzo 包含了最近两周所有的 bug 修复和很小的新特性。完整的更动列表在这里：http://t.cn/zYpvmjc 感谢所有的贡献者和用户！[呵呵]  原图 
微博位置: 无
发布时间: 2013-04-10 09:24
点赞数: 5   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

1125:我正在积极促成公司赞助 Mike Pall 同学开发 LuaJIT 2.1 分支，特别是完善字符串操作的支持，让 LuaJIT 的 JIT 编译器能编译 CAT 字节码、table.concat、string.*等函数。等 LuaJIT 一侧的工作完成之后，我就可以尝试用 FFI 改写 ngx_lua 的 Lua API，这样我们的 Lua 代码就能被真正 JIT 编译了！  原图 
微博位置: 无
发布时间: 2013-04-10 03:56
点赞数: 8   转发数: 16   评论数: 6
发布工具: 微博 weibo.com

1126:今晚我和 Nginx 公司的 CEO Gus 同学以及负责业务发展的 Andrew 同学一起吃了顿饭。我们聊了很多关于 Nginx 和 ngx_lua 模块的话题，很开心。Andrew 还送了我一件 Nginx T-Shirt，哈哈！  原图 
微博位置: 无
发布时间: 2013-04-04 12:46
点赞数: 13   转发数: 10   评论数: 10
发布工具: iPhone客户端

1127:代码 review 很重要。而评价代码好坏的唯一标准是统计 reviewer 每分钟骂娘的次数   原图 
微博位置: 无
发布时间: 2013-04-02 03:42
点赞数: 6   转发数: 104   评论数: 16
发布工具: 微博 weibo.com

1128:我刚刚发布了 ngx_openresty 新的开发版 1.2.7.3: http://t.cn/aCdPzo 包含了过去一个多月以来所有的 bug 修复和小的新特性，主要集中在 ngx_lua 模块。同时也给软件包中的 LuaJIT 2.0.1 打上了官方最新的 hotfix #1 补丁。完整的更动列表请见这里：http://t.cn/zYpvmjc 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2013-03-25 15:16
点赞数: 0   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

1129:实际工作（包括开源工作）中遇到的一些头疼的问题常常也是促成自己技术进境的良机。这或许也是“no pain, no gain ”的一种诠释。许多时候，不被狠狠地纠结一下，也很难下决心去做一些新尝试，去做一些较大的改变。即便是技术新手提出的一些看似基础的问题，要提供足够傻瓜的工具也常常是不易的。  
微博位置: 无
发布时间: 2013-03-24 08:49
点赞数: 4   转发数: 10   评论数: 6
发布工具: 微博 weibo.com

1130:我一直在使用 clang 的静态代码分析器检查自己的 C 代码。这两天手贱从官方 SVN 仓库编译了一个最新版本的 clang，结果在分析 ngx_lua 模块最大的 C 源码文件 ngx_http_lua_util.c 的时候 clang 直接崩溃掉了。于是立马给官方报告了这个问题：http://t.cn/zYgHKzN  
微博位置: 无
发布时间: 2013-03-18 08:03
点赞数: 0   转发数: 7   评论数: 17
发布工具: 微博 weibo.com

1131:我的同事 Matthieu Tourne 今儿一早给我发了一小动画，并如是评论：“This is like training a new intern” 所以即便是招实习生，也得把眼睛擦亮了，哈哈！我现在都会要求候选者先搞一个命题开源项目，并放到 GitHub 上去。聊再多也不如现做一个小项目呀，哈哈！否则花时间培训别人还不如培训自己……  原图 
微博位置: 无
发布时间: 2013-03-14 03:29
点赞数: 0   转发数: 12   评论数: 8
发布工具: 微博 weibo.com

1132:测试用例写多了，写教程的时候也知道该举什么样的例子。无怪乎一些用户告诉我他们特别喜欢拿我的开源项目的测试集来作为官方文档的补充，毕竟测试用例演示的用法必然是可以工作的！   
微博位置: 无
发布时间: 2013-03-12 08:52
点赞数: 2   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1133:感谢@不如归零 为我的 Nginx 英文教程提供的 CSS 样式：http://t.cn/zYTJlE0 现在看起来比原来好多了，嘿嘿。我已经改写了“Nginx Variables (01)”和“Nginx Variables (02)”这两篇 @kai10k 贡献的英文译文，并添加了内部段落分割，这样结构更清楚些。我仍在继续改写后续的教程，然后再添加新章节。  
微博位置: 无
发布时间: 2013-03-12 08:05
点赞数: 4   转发数: 41   评论数: 6
发布工具: 微博 weibo.com

1134:如今在 Amazon EC2 上完整运行 ngx_lua 模块的测试集（包括 Linux x86_64 和 Linux i386 两种平台和各种测试模式），我的调度器已经需要分配 9 台实例并行跑，才能在 3 小时内出报表。9 台实例中有 4 台是 m2.xlarge 类型的配置，有 5 台是 m1.medium 类型。大部分计算时间都花在了 Valgrind 上   
微博位置: 无
发布时间: 2013-03-11 08:40
点赞数: 0   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

1135:ccache 确实是很不错的工具，可以显著提升 C/C++ 应用全量重新编译时的速度。我在 自己的开发工作中时常会进行全量重新编译（因为一些全局配置项的修改）。以 ngx_lua 为例，构造其测试台所需的 nginx，./configure && make -j8 在我的本上最多可节约 70% 的时间。后面也应用到我的 EC2 测试集群上去。  
微博位置: 无
发布时间: 2013-03-11 07:32
点赞数: 1   转发数: 19   评论数: 8
发布工具: 微博 weibo.com

1136:这两天应 Matthieu Tourne 的请求，为 ngx_lua 模块添加了两个小功能，一是 ngx.req.http_version() 可以访问当前 HTTP 请求所使用的 HTTP 协议版本号（1.0 或 1.1 之类）；二是 ngx.req.raw_header() 接口，可返回 nginx 实际接收到的原始的 HTTP 请求头字符串。文档在这里：http://t.cn/zYnMeAn  原图 
微博位置: 无
发布时间: 2013-03-08 09:32
点赞数: 2   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1137:今天我用 MyPaint + Wacom Bamboo Create 在 Fedora Linux 上面画了第一张教程插图，感觉挺有趣。为简单起见，没有使用太夸张的笔刷，也没去画太多细节。  原图 
微博位置: 无
发布时间: 2013-03-04 16:19
点赞数: 1   转发数: 11   评论数: 12
发布工具: 微博 weibo.com

1138:@沈容舟 同学跟我分享的这一组关于程序员的动画太逗了：http://t.cn/zYYwqNA 我最喜欢的是下面这一张：“When I'm told that the module on which I have worked all the week will never be used”   原图 
微博位置: 无
发布时间: 2013-03-03 10:07
点赞数: 2   转发数: 27   评论数: 4
发布工具: 微博 weibo.com

1139:一年前我用中文写了些 Nginx 教程，@kai10k 帮我几乎都译成英文。现在看来，我当时应该直接用英文写的，毕竟这些东西我本来就是用英语思考的。另外，“连载教程”这种形式限制也多，若使用独立的专题文章的形式或许更灵活更容易组织，而且也更接近书籍的结构。我已开始重新整理 @kai10k 的英文译文。  
微博位置: 无
发布时间: 2013-03-01 15:48
点赞数: 2   转发数: 13   评论数: 13
发布工具: 微博 weibo.com

1140:刚刚发布了 ngx_openresty 新的开发版 1.2.7.1: http://t.cn/aCdPzo 将 Nginx 核心升级到了最新的稳定版 1.2.7，同时把 LuaJIT 2.0 升级到了最新的 2.0.1 发布；另外，ngx_lua 模块也有一些微小的优化。更动细节可以参见：http://t.cn/zYpvmjc  原图 
微博位置: 无
发布时间: 2013-02-23 15:15
点赞数: 3   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

1141:老婆刚给我看了一个 TED 演讲视频，相当惊艳：http://t.cn/hb1Qww 这种用现绘简笔画的形式实现的“流式幻灯片”，至少非常符合我的思考和演讲方式。我得好好研究一下如何将这种表现形式用于讲解和总结复杂的技术问题   原图 
微博位置: 无
发布时间: 2013-02-23 14:18
点赞数: 3   转发数: 45   评论数: 5
发布工具: 微博 weibo.com

1142:我们的产品经理两天前为线上的 CDN 系统中的 nginx 进程采样了一张火焰图：http://t.cn/zYNHPoa 从图中可以清楚地看到 gzip 压缩和内嵌的 perl 代码是最大的两个热点，分别占了35%和20%的样本。这里的 perl 代码将很快会为 Matthieu 编写的纯 Lua 实现所取代；同时未显示在此图中的 php 也将被替代。  原图 
微博位置: 无
发布时间: 2013-02-23 07:22
点赞数: 0   转发数: 15   评论数: 6
发布工具: 微博 weibo.com

1143:今天一大早收到了以色列用户 Tzury 同学的邮件，他分享了一个链接，可以根据我的 GitHub 提交活跃度自动生成音乐：http://t.cn/zYNl2Q7 看来过去的一年里我的 GitHub 旋律几乎一直比较激昂呀，其中去年 4 月有一周我完全没有开过机上过网，所以算是短暂的停歇吧。  原图 
微博位置: 无
发布时间: 2013-02-23 03:52
点赞数: 1   转发数: 29   评论数: 6
发布工具: 微博 weibo.com

1144:这两天基于 sregex 正则引擎的新功能，为 ngx_replace_filter 模块添加了多 replace_filter 配置指令的支持，即多个（流式）替换操作将以 tokenizer 的方式协同工作。对应的补丁在这里：http://t.cn/zY9gDYX 目前的实现还是比较简单的，有巨大的优化空间；我眼下仍然处于“get things work”的阶段。  原图 
微博位置: 无
发布时间: 2013-02-21 14:41
点赞数: 1   转发数: 3   评论数: 0
发布工具: 代码贴

1145:这两日为我的 sregex 正则引擎添加了同时匹配多个用户正则的接口，即当用户提供正则 r1、r2、r3 时，sregex 会自动按照 /r1|r2|r3/ 的语义进行匹配，同时返回实际匹配的正则序号（从 0 开始，比如 r2 匹配就返回 1），同时还会返回对应正则的匹配位置及所有子匹配。补丁在这里：http://t.cn/zYoYWlg  
微博位置: 无
发布时间: 2013-02-19 16:04
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1146:Amazon EC2 现在确实可以直接把基于 EBS 的虚机快照（snapshot）在不同区域之间复制了，真是太爽了！据 EC2 支持我的工程师说，AMI（虚机镜像）的跨区域复制功能也将很快问世，同时跨区域传输数据的流量费用也已经下调了最高 83%：http://t.cn/zY4Ao62  原图 
微博位置: 无
发布时间: 2013-02-19 04:40
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1147:看到不少人一味追求光鲜的外部环境，而失了儿时的梦想，丢了那颗赤子之心。其实最宝贵的环境永远是我们的心境。拥有纯净的心境时，好的外部环境也会自然降临，或许这就是佛家人爱讲的“境随心转”吧。从事许多研究工作所需的客观条件经常被人想当然地夸大了，带着功利心从事研究是很可怕的一件事情。  
微博位置: 无
发布时间: 2013-02-18 15:09
点赞数: 11   转发数: 36   评论数: 16
发布工具: 微博 weibo.com

1148:我刚刚发布了 ngx_openresty 新的稳定版 1.2.6.6：http://t.cn/aCdPzo 该发布对应的 PGP 签名文件是 http://t.cn/zYSodBA 我同时为 OpenResty 下载页上所有的老发布包也都加上了 PGP 签名。后续的发布将基于最新的 Nginx 稳定版核心 1.2.7. 感谢所有的贡献者和用户！[呵呵]  原图 
微博位置: 无
发布时间: 2013-02-18 13:13
点赞数: 0   转发数: 9   评论数: 3
发布工具: 微博 weibo.com

1149:我开始为 ngx_openresty 的源码包添加我自己的 PGP（Pretty Good Privacy）数字签名了。我的 PGP key ID 是 A0E98066；对应的公钥已上传到了 pgp.mit.edu 和 keys.gnupg.net 这两个key server. 建议总是使用 gpg2 程序进行校验，因为我在一台linode主机上用 gnupg 1.4.5 校验竟会报“BAD signature”！  原图 
微博位置: 无
发布时间: 2013-02-18 10:59
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1150:DWARF 是使用 systemtap 和 gdb 等东西自省二进制机器程序的基础，无论是 C 等高级语言编写的东西，还是 LuaJIT 2.0 中用汇编编写的 Lua 解释器。不幸的是，时不时会撞见 gcc 生成 DWARF 时的 bug. 比如不久前我把 Linux 内核从 3.6 升级到 3.7 后就撞见了 gcc 4.7 的一个 bug: http://t.cn/zYSGklx  原图 
微博位置: 无
发布时间: 2013-02-18 07:17
点赞数: 0   转发数: 6   评论数: 8
发布工具: 微博 weibo.com

1151:目前基于 Linux kernel 3.5+ 的 uprobes，systemtap 缺少对用户态函数返回事件的支持（当然，基于打了 utrace 补丁的老 kernel 并无此限制），这是相比 dtrace 不爽的一个地方（我一直在我自己的工具脚本中用各种办法去绕开）。期待 Anton Arapov 同学的 uretprobes 补丁能早日合进主流 kernel   原图 
微博位置: 无
发布时间: 2013-02-17 15:33
点赞数: 2   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1152:这两天把我的 sregex 正则库和 ngx_replace_filter 模块添加进了我的 Amazon EC2 测试集群的回归列表中。这两个组件已经出现在了最新的测试报告中：http://t.cn/zOjYAFN  现在在我本机运行这两个组件的测试集的所有测试模式已经比较吃力了。  原图 
微博位置: 无
发布时间: 2013-02-17 08:57
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1153:庆祝 systemtap 2.1 发布！http://t.cn/zYXLvgi 我刚把 Nginx Systemtap Toolkit 所需的最低 systemtap 版本调高到了 2.1. 因为 2.0 及其之前的发布有一个比较严重的涉及 usymname 原语的 bug，会导致用户进程在被 ptrace 时崩溃。我们先前一直使的是 git 仓库里的版本，现在终于迎来新的正式发布了！  原图 
微博位置: 无
发布时间: 2013-02-16 13:03
点赞数: 1   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

1154:今天在公司周会上，我给所有同事分享了过去几周以来我们在生产上利用“火焰图”等基于动态追踪技术的工具，轻松捕捉和定位开发工程师犯的各种小错误而导致各种严重后果的有趣案例。会场上笑声不绝；好的工具和技术就是容易在实践中创造出各种秩事和传奇 [呵呵]  
微博位置: 无
发布时间: 2013-02-16 11:59
点赞数: 4   转发数: 16   评论数: 9
发布工具: 微博 weibo.com

1155:刚刚给我的 ngx_replace 模块提交了一个补丁：http://t.cn/zYi4dF3 为 replace_filter 配置指令的 replace 参数添加了内嵌 Nginx 变量的支持，这样每个请求都可以把正则匹配的部分替换为不同的内容，例如 replace_filter \w "$foo". 目前，$&、$1、$2 等 capture 变量还不支持，明天再接着搞   
微博位置: 无
发布时间: 2013-02-14 11:01
点赞数: 1   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1156:刚看到我在 GitHub 上的 follower 数过千了，看来我后面会更忙了。用户驱动的开发就是辛苦呀，呵呵。  原图 
微博位置: 无
发布时间: 2013-02-14 03:21
点赞数: 6   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1157:今天我们的产品经理给 lua-waf 生产系统生成了最新的 C 级别“火焰图”：http://t.cn/zYJ5D48 从图上可以看到 LuaJIT GC 已成为明显的热点之一，先前许多热点都已被 waf 工程师优化掉了。而特别地，GC 热点对应的是 CAT、FNEW、TNEW 这几个 LuaJIT 字节码，即拼串、闭包创建和表创建这三种操作。  原图 
微博位置: 无
发布时间: 2013-02-13 13:17
点赞数: 0   转发数: 18   评论数: 2
发布工具: 微博 weibo.com

1158:刚刚我们的产品经理 Dane 在一台 waf 生产机上使用我的 ngx-pcrejit 工具（http://t.cn/zYJyyjG ）对一个 nginx worker 进程进行活体分析，结果发现样本中所有的 ngx.re.gsub 调用都成功地把正则进行了 JIT 编译，而样本中所有的 ngx.re.match 调用却都没有。于是我们的 waf 工程师立马开始改代码了。  
微博位置: 无
发布时间: 2013-02-13 10:37
点赞数: 1   转发数: 14   评论数: 3
发布工具: 微博 weibo.com

1159:作为 Perl 迷，还在上大学的时候我就梦想着有一天能在北美 Perl 大会上用英语演讲，呵呵。现在我正考虑参加 YAPC::NA 2013 并在那里分享一下“火焰图”：http://t.cn/zYJw3Zx 当然，为了迎合大部分听众，我还得摸仿我的 ngx-sample-lua-bt 工具简单实现一下 Perl 5 语言级别的“火焰图”工具   
微博位置: 无
发布时间: 2013-02-13 08:35
点赞数: 3   转发数: 15   评论数: 9
发布工具: 微博 weibo.com

1160:很欣慰地看到我们的 waf 开发工程师已经可以自己通过“火焰图”工具继续深入优化他的 Lua 代码的 CPU 使用率了，我不用再操心了。做工具的好处就在于方便地检测和定位别人和自己的错误。人的天性就易犯错，即使已经非常小心，所以最好接受这个现实。真正可怕的是在犯了错的时候没有工具及时提醒我们。  
微博位置: 无
发布时间: 2013-02-11 05:40
点赞数: 2   转发数: 11   评论数: 7
发布工具: 微博 weibo.com

1161:Jose Diaz-Gonzalez 撰写了一篇题为“Yak Shaving: Adding OAuth Support to Nginx via Lua”的文章：http://t.cn/zjfrVhU 他还主动发了一封邮件给我，希望我把他这篇文章的链接添加到 openresty.org 官网上。他还说计划再写更多的 OpenResty/Lua 方面的教程。我经常会为这样的热心用户所感动   
微博位置: 无
发布时间: 2013-02-10 15:34
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1162:怎么感觉大家都在自己实现正则表达式啊！最近看到 systemtap 项目里也在紧锣密鼓地开发 re2c 这个正则编译器，以便用户可以直接在 systemtap 脚本语言中使用正则表达式。正则是少数几个最值得认真实现同时又被实现过无数遍的语言之一   
微博位置: 无
发布时间: 2013-02-10 14:24
点赞数: 0   转发数: 9   评论数: 10
发布工具: iPhone客户端

1163:我基于 systemtap 编写了许多用户态进程的实时分析工具，多放在了 Nginx Systemtap Toolkit 项目中。这些工具的基本结构是类似的，基本上都是在某些特定的 C 函数调用入口或者定时器事件上定义一个自己的动态探针，并对应一段自己的处理程序（使用 systemtap 自己的脚本语言），在 kernel 空间中运行。  
微博位置: 无
发布时间: 2013-02-09 11:05
点赞数: 0   转发数: 26   评论数: 5
发布工具: 微博 weibo.com

1164:刚刚我发布了 ngx_openresty 新的开发版 1.2.6.5: http://t.cn/aCdPzo 包含了最近几天所有新的 bug 修复：http://t.cn/zjEntGY 感谢所有的贡献者和用户！[呵呵]  原图 
微博位置: 无
发布时间: 2013-02-09 04:28
点赞数: 1   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1165:我们的产品经理 Dane 同学玩“火焰图”玩 high 了，他又在生产上运行我的 ngx-sample-bt 工具给使用 Go 语言编写的 Railgun 服务（http://t.cn/zYVUIT8 ）绘制了一幅火焰图：http://t.cn/zYVUITR 由于我对 Go 的实现细节所知甚少，所以我也不能解读出多少信息来。留给 Go 方面的专家看看吧！  原图 
微博位置: 无
发布时间: 2013-02-08 10:15
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1166:我们又进一步在线上为 WAF 系统绘出了一张 Lua 语言级别的“火焰图”以进一步分析 string.gsub() 这个调用在 Lua 代码基中的来源及分布：http://t.cn/zYVyMOR 这张图中的函数帧基本上都是 Lua 函数帧，因为这一次只对 Lua 调用栈进行高频采样。其中用 C 实现的 Lua 函数也可以正确显示 C 函数名  原图 
微博位置: 无
发布时间: 2013-02-08 09:51
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1167:在我们的 WAF 工程师为 ngx.re.gsub 调用加上了 "o" 选项（即启用了正则编译缓存），同时修正了一处 Lua 数据类型错误之后，新 WAF 系统在线上的 CPU 立马降了下来。我们还为线上的 LuaJIT 启用了调试信息（通过使用 make CCDEBUG=-g 构造）。此时生成的新的 C 级别“火焰图”是：http://t.cn/zYVLHRx  原图 
微博位置: 无
发布时间: 2013-02-08 09:35
点赞数: 1   转发数: 11   评论数: 2
发布工具: 微博 weibo.com

1168:我们开始使用“火焰图”工具对我们自己的生产系统进行在线性能分析。我们新的 WAF（Web App Firewall）是基于 ngx_lua 构造的一个 modsecurity 移植，在一些区域上线后注意到 CPU 占用比较高，于是使用 ngx-sample-bt 工具（http://t.cn/zj3s6E9 ）绘制出 C 级别的“火焰图”：http://t.cn/zYVL4Dy  原图 
微博位置: 无
发布时间: 2013-02-08 09:22
点赞数: 1   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1169:刚刚给我的 ngx-sample-lua-bt 工具（http://t.cn/zYcMGzm ）添加了对 LuaJIT 2.0 的支持，现在我们可以使用该工具对运行在 LuaJIT 2.0 + Nginx 中的 Lua 代码进行调用栈轨迹的高频采样，并绘制出“火焰图”（flamegraph）了。世界上第一张采自 LuaJIT 2.0 的 Lua 火焰图在这里：http://t.cn/zYcMGzu  原图 
微博位置: 无
发布时间: 2013-02-07 14:39
点赞数: 1   转发数: 8   评论数: 0
发布工具: 微博 weibo.com

1170:今天向我的 Nginx Systemtap Toolkit 添加了 ngx-sample-lua-bt 和 fix-lua-bt 这两个工具，可用于绘制 ngx_lua 中运行的Lua代码的“火焰图”（flame graph），工具文档在这里：http://t.cn/zYttSMv 用此工具生成的一样图在此：http://t.cn/zYttSIs  原图 
微博位置: 无
发布时间: 2013-02-06 13:47
点赞数: 0   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1171:Amazon Web Service 的一位工程师这些日子主动联系了我，愿意为我在 AWS 特别是 EC2 方面的使用提供技术支持。这哥们非常给力！我觉得 Amazon 应当是希望 CloudFlare 能越来越多地使用他们的服务和基础设施，我们毕竟是潜在的一个大客户。在 AWS 上跑一些像回归测试这样的离线任务还是很方便的   
微博位置: 无
发布时间: 2013-02-06 13:37
点赞数: 2   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1172:解决用户的 bug 报告就像解一道道考题；而回复来自用户的问询邮件又像写作一篇篇的命题作文。今天我又花了一天时间处理 OpenResty 社区里的用户邮件，修复了我的三个组件中一共 3 处小 bug  这便是“邮件人生”了，哈哈！  
微博位置: 无
发布时间: 2013-02-05 14:07
点赞数: 1   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1173:我刚刚发布了 ngx_openresty 新的开发版 1.2.6.3: http://t.cn/aCdPzo 包含了 ngx_lua、ngx_echo、ngx_srcache、ngx_form_input 等多个组件模块的很多变更。完整的更动列表在这里：http://t.cn/zjEntGY 感谢所有的贡献者和用户！  原图 
微博位置: 无
发布时间: 2013-02-04 15:34
点赞数: 0   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

1174:现在的动态追踪技术（比如 dtrace 和 uprobes/kprobes 之类）可以深入用户进程，也可以深入操作系统内核，但主要还是在软件栈里面搞。或许不远的将来我们也可以随意地探入到 CPU、内存条、磁盘、GPU 等硬件内部的任何一个细微环节？  
微博位置: 无
发布时间: 2013-02-03 11:38
点赞数: 0   转发数: 26   评论数: 13
发布工具: 微博 weibo.com

1175:今天继续在我的 sregex 正则库的 Thompson VM 的 x86_64 JIT 编译器里做优化小试验，尝试使用寄存器替换掉 call 和 ret 指令，以减少昂贵的内存访问操作。我首先使用 SSE 寄存器 xmm0 来显式地存放返回地址，在 Core i7 上进行性能测试，整体果然有了 3.4% 的提升。补丁在这里：http://t.cn/zYUeUIm  
微博位置: 无
发布时间: 2013-02-01 12:42
点赞数: 1   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

1176:啥时候程序员社区的“编程语言之争”能上升到“编程语言的实现之争”这样的高度就好了。在解释器或者编译器的层面上探讨各种语言的实现得失，在工程上要有价值得多。毕竟很多人不是都说“there's no slow languages, there's only slow implementations”么？呵呵。  
微博位置: 无
发布时间: 2013-01-31 09:59
点赞数: 6   转发数: 76   评论数: 27
发布工具: 微博 weibo.com

1177:刚看到 Raimon Grau 同学写了一篇题为“Augmenting APIs with Nginx and Lua”的文章：http://t.cn/zYyNRaH 写得很生动，值得推荐 [呵呵]  
微博位置: 无
发布时间: 2013-01-31 06:58
点赞数: 1   转发数: 20   评论数: 1
发布工具: 微博 weibo.com

1178:今儿用一个简单正则对多个正则引擎进行了性能比较。为减少误差，我生成了一个 2.5MB 的文本用于匹配。在此试验中，我为 sregex 正则库的 Thompson VM 实现的 x86_64 JIT 编译器相比原先用 C 实现的解释器快了约 1.3 倍（使用 gcc -O3 编译），比 PCRE 解释器也快了 33%，但比 PCRE JIT 还是要慢不少。  原图 
微博位置: 无
发布时间: 2013-01-30 11:12
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1179:我越来越真切地体会到，开发和驾御复杂的软件系统的能力，很大程度上其实取决于测试和调试水平的先进程度。“Only trust what you can test”被无数次地验证，即使在那些我本不情愿承认的场合。而花费在测试工具链、调试工具链乃至代码静态分析工具方面的投入，再多也不会嫌过分 [呵呵]  
微博位置: 无
发布时间: 2013-01-29 08:46
点赞数: 14   转发数: 95   评论数: 26
发布工具: 微博 weibo.com

1180:nginx 1.3.9 之后其请求体读取 API 引入了两处不兼容的变化。一是在 100 Continue 响应写失败时引用计数会自减一；二是它总是会主动改写 r->write_event_handler 为空函数. 这两个问题都能被 ngx_lua 模块的测试集成功捕捉到，前者可以被 mockeagain 写模式捕捉到，后者可以被 mockeagain 读模式捕捉。  
微博位置: 无
发布时间: 2013-01-28 11:02
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1181:现在每进步一点点都会更加真切地体会到与世界一流高手之间的巨大差距，敬畏之感就会又增加一些。值得欣慰的是，在这个过程中我也越来越清楚自己在做什么了，呵呵。  
微博位置: 无
发布时间: 2013-01-27 17:20
点赞数: 3   转发数: 7   评论数: 3
发布工具: iPhone客户端

1182:前些天 ngx_lua 模块庞大的测试集又捕捉到最新的 nginx 1.3.9 以后的开发版中的一处功能衰退：http://t.cn/zYwjIRq 配置指令 client_body_in_file_only 的实现被 Maxim Dounin 在添加 chunked 请求体的支持时给碰坏了。这再次证明了我那些 nginx 模块的测试集同时也在很细地回归 Nginx 核心   
微博位置: 无
发布时间: 2013-01-27 16:12
点赞数: 4   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1183:刚刚上传了 UML::Class::Simple 模块的新版本 0.19 到 CPAN 网络：http://t.cn/zYwpPtd 这个创建于大学时代的 Perl 开源项目至今还有用户在提交新特性的补丁……虽然我自己已经多年没用过这个库来自动绘制 Perl 类库的 UML 类图了，但此项目用户不尽便生命不息！哈哈！  
微博位置: 无
发布时间: 2013-01-27 14:07
点赞数: 2   转发数: 1   评论数: 9
发布工具: 微博 weibo.com

1184:GitHub 的技术支持回复还挺快的，但有些意外的是，回复竟是让我给他们开源在 GitHub 上的网站组件发 pull request，汗！于是便有了我这个小补丁：http://t.cn/zYwGHDw 幸好只需要编辑一个 YAML 文件，不用去动他们的 Ruby 代码……GitHub 的技术支持天然 0 成本呀！谁让他们的用户是开源程序员呢？  原图 
微博位置: 无
发布时间: 2013-01-27 03:19
点赞数: 0   转发数: 8   评论数: 0
发布工具: 代码贴

1185:我的同事 Matthieu Tourne 和我一直都很害怕 GitHub 在中国被墙，虽然这并不会影响我们自己访问 GitHub，但是我们特别看重中国境内的开发者和用户一直以来对我们各个开源项目的重要贡献，而 GitHub 正提供了一个很理想的代码沟通平台。我一直认为程序员之间通过补丁进行沟通是一件很酷的事情，嘿嘿。  
微博位置: 无
发布时间: 2013-01-23 07:41
点赞数: 7   转发数: 14   评论数: 9
发布工具: 微博 weibo.com

1186:我的 Amazon EC2 测试集群昨晚捕捉到了 Nginx 核心中的一个小 bug. 当 ngx_resolver 和 ngx_poll_module 一起使用时可能会引发段错误而导致 nginx 进程崩溃。刚刚我为 Nginx 准备了一个小补丁提交到了 nginx-devel 邮件列表：http://t.cn/zYP1Lcc 通过测试集捕捉到的 bug 比线上环境容易复现多了 :)  
微博位置: 无
发布时间: 2013-01-23 07:05
点赞数: 8   转发数: 13   评论数: 9
发布工具: 微博 weibo.com

1187:这几天我都在全力为 sregex 正则库的 Thompson VM 开发针对 x86_64 的 Just-in-Time 编译器。刚刚它终于通过了整个测试集！虽然整个 JIT 优化编译器才不过 700 多行手写代码（除去空行和注释），但已反复重写过十多次了。来自 Perl 5 和 PCRE 的测试集救了我很多次；它们确保我总是走在正确的轨道上。  
微博位置: 无
发布时间: 2013-01-20 18:34
点赞数: 6   转发数: 14   评论数: 9
发布工具: iPhone客户端

1188:刚刚看 Intel 的技术手册才发现竟然有 BTS 这么好用的 CPU 指令，可以直接把操作数中指定的比特位加载进 CF 标志位并自动将该操作数中的这个比特位置为 1，省去了我使用 TEST + OR 这两条指令的麻烦，同时也避免了加载 64 位立即数。在 Intel 的 PDF 手册里搜索真是享受，难怪 Google 里难搜到好东西。  
微博位置: 无
发布时间: 2013-01-20 15:55
点赞数: 0   转发数: 12   评论数: 21
发布工具: 微博 weibo.com

1189:这两天我开始使用 DynASM 为 sregex 正则库的 Thompson VM 实现针对x86_64的 JIT 编译器。在此过程中我又更进一步体会到 DynASM 设计上的巧妙。今天我这个 JIT 编译器成功地把第一个正则编译为了机器指令程序，和先前手工编写的汇编几乎完全一样。下图是 objdump 对 JIT 出来的机器代码的反汇编输出。  原图 
微博位置: 无
发布时间: 2013-01-17 14:59
点赞数: 0   转发数: 5   评论数: 2
发布工具: 代码贴

1190:经常看到许多哥们的所谓“性能对比测试”都是止步于默认安装选项下的 hello world 性质的简单接口，所以我一直比较纠结是否应该针对这种工程价值极为有限的最简单的情形进行专门的优化，以避免“苹果比桔子更慢”这样容易误导他人的结论被拿去到处传播 :)  
微博位置: 无
发布时间: 2013-01-17 09:27
点赞数: 1   转发数: 19   评论数: 14
发布工具: 微博 weibo.com

1191:为了调试 DynASM 在运行时动态生成的机器指令程序，我使用了 gdb 的指令单步特性。通过一简单的 gdb 脚本对 JIT 出来的代码自动进行指令单步，并把得到的指令运行序列采集起来，然后通过一 Perl 脚本自动把 DynASM 提供的和语义相关的各种元信息应用到这个指令序列，便可以得到类似下图中的结果。  原图 
微博位置: 无
发布时间: 2013-01-16 09:20
点赞数: 0   转发数: 4   评论数: 7
发布工具: 代码贴

1192:这几日我尝试把一个极简单的正则表达式，a|ab，按照 Thompson 的 NFA 仿真算法，手动翻译成了一个比较高效的 x86_64 汇编程序（见下图），目的是为了开发 JIT 编译器做准备。我使用了 DynASM 工具链来编写这个机器指令程序。在此过程中，我频频参考了 LuaJIT 2.0 的代码来学习 DynASM 的各种有趣特性。  原图 
微博位置: 无
发布时间: 2013-01-16 09:04
点赞数: 0   转发数: 5   评论数: 6
发布工具: 代码贴

1193:Josh Haberman 最近写了一篇博客，专门介绍如何编写最简单的 Just-In-Time (JIT) 编译器：http://t.cn/zjEzDQ8 这也是我见到的第一篇比较完整的 DynASM 的入门教程。该文还包含了一个 brainfuck 语言的完整的 x86_64 JIT 编译器实现；Mike Pall 的 DynASM 工具链确实让 JIT 的实现变得清晰而优美。  
微博位置: 无
发布时间: 2013-01-12 12:07
点赞数: 5   转发数: 137   评论数: 14
发布工具: 微博 weibo.com

1194:最近接触了一下 Brainfuck 语言，8 条极简单的命令构成的图灵完全的语言。用它书写的 Hello World 程序看起来都像密码（而且不是人为故意扭曲的！）。难为 wikipedia 上还有一个非常详尽的条目介绍它：http://t.cn/hDQAwC  原图 
微博位置: 无
发布时间: 2013-01-12 11:53
点赞数: 0   转发数: 18   评论数: 7
发布工具: 代码贴

1195:刚为我的 Nginx Systemtap Toolkit 添加了新工具 ngx-sample-bt：http://t.cn/zj3s6E9 它可以对任意指定的进程进行调用栈轨迹的高频采样。可以通过命令行选项选择仅在用户态采样，或者仅在核心态采样，或者同时对二者采样。它的输出可以通过 FlameGraph 工具链生成“火焰图”，用于系统性能热点分析。  原图 
微博位置: 无
发布时间: 2013-01-10 08:25
点赞数: 3   转发数: 30   评论数: 7
发布工具: 微博 weibo.com

1196:刚给我的 ngx_replace_filter 模块添加了一条新的配置指令，replace_filter_max_buffered_size，可用于在运行时限制缓冲数据的上限：http://t.cn/zjuNJ9b 当超过上限时，过滤器将立即停止处理，后续所有的响应体数据都照原样输出。默认上限是 8k. 在正则编译期自动推算缓冲上限的功能，后面得空再搞。  
微博位置: 无
发布时间: 2013-01-08 14:52
点赞数: 1   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1197:我每天中午都会偷偷跑回家睡一小时的午觉，然后再跑回来上班。结果今天下午一点半的时候（那会儿我才刚入梦乡），我们的 CEO 在公司一个技术聊天群里这样回复我们一位遇到 Lua 疑难问题的英国工程师：“Dr. Zhang has stepped away from his desk but will be back soon.”   
微博位置: 无
发布时间: 2013-01-08 08:32
点赞数: 1   转发数: 4   评论数: 13
发布工具: 微博 weibo.com

1198:今天我对 sregex 正则引擎的 Pike VM 进行了功能改进，让它能够在遇到数据块边界时立即返回“匹配子串”的最大必要子集（原先已经返回了最小充分超集）。利用正则引擎运行时提供的这个重要信息，我接着对 ngx_replace_filter 模块的缓冲区管理算法进行了深入优化，现在它不会多缓存一个字节的数据了。  原图 
微博位置: 无
发布时间: 2013-01-06 16:31
点赞数: 0   转发数: 16   评论数: 7
发布工具: 微博 weibo.com

1199:我刚刚发布了 ngx_openresty 新的开发版 1.2.6.1: http://t.cn/aCdPzo 将 Nginx 核心升级到了最新的稳定版 1.2.6，同时包含了 ngx_lua 模块、ngx_srcache 模块、lua-resty-upload 库等组件中新近的 bug 修复。完整的更动列表在这里：http://t.cn/zjEntGY 感谢所有的贡献者和用户！[呵呵]  原图 
微博位置: 无
发布时间: 2013-01-05 16:03
点赞数: 0   转发数: 7   评论数: 9
发布工具: 微博 weibo.com

1200:刚才跟同事 Matthieu Tourne 在 gtalk 上聊天，说到我想在新的一年里取得对 LuaJIT 代码基的足够控制力时，他说很喜欢我说的一句话，觉得很值得引用：“It is all about gaining control over the code base. It is a constructive thing, not destructive or anti-social. -- agentzh”   原图 
微博位置: 无
发布时间: 2013-01-05 08:30
点赞数: 3   转发数: 8   评论数: 6
发布工具: 微博 weibo.com

1201:下图中的这个例子更有趣一些。它可以高效地删除响应页面中所有符合 C/C++ 语法的代码注释（即使 /*...*/ 这样的块注释跨越很多行）。注意在 sregex 正则引擎中，圆点（.）默认是可以匹配换行符的（\s 也是），相当于默认同时启用了 Perl 5 正则表达式的 s 和 m 修饰符。  原图 
微博位置: 无
发布时间: 2013-01-02 15:54
点赞数: 0   转发数: 4   评论数: 4
发布工具: 代码贴

1202:下图中是两个应用 ngx_replace_filter 模块（http://t.cn/zj8xHI9 ）执行响应体的正则替换的小实例。第一个例子可以用于删除所有行首和行尾的空白字符（空格、制表位、回车符等等）以及空行；第二例子与第一个例子类似，但是却并不删除回车符和空行。@佳依老爸  原图 
微博位置: 无
发布时间: 2013-01-02 15:23
点赞数: 0   转发数: 3   评论数: 0
发布工具: 代码贴

1203:这几日都在全情开发一个新的 nginx 模块，ngx_replace_filter: http://t.cn/zj8xHI9 它使用我的 sregex 正则库对响应体数据进行流式的正则替换。因为只在必要时缓冲数据，所以在处理很大的响应体时也有机会实现很小开销（除非正则本身不允许）。匹配和替换可以跨越多个数据行，相当于Perl的 s///sm.  原图 
微博位置: 无
发布时间: 2013-01-02 14:57
点赞数: 0   转发数: 11   评论数: 4
发布工具: 代码贴

1204:刚刚在摆弄 Nginx 标准模块 ngx_sub_filter 时发现它的流式解析状态机简单到不能处理用户模式中的不确定性（见下图的示例），于是作为 bug 报告给了 Nginx 官方：http://t.cn/zjY5qUO 想我年初为 ngx_lua 模块实现 cosocket 对象的 receiveuntil 方法时，为此曾专门手写了一个简单的 DFA 即时构造器。  原图 
微博位置: 无
发布时间: 2012-12-28 13:22
点赞数: 1   转发数: 9   评论数: 7
发布工具: 代码贴

1205:刚才我妈在网上跟我说：“经过像（当年）对你一样的训练，你的小表妹代表班级参加口算比赛获一等奖。”唉。。。可怜的小妹妹这么小就开始接受我妈最正统的“强化训练”了呀。。。可怜的妹妹可怜的我呀。。。哈哈！  
微博位置: 无
发布时间: 2012-12-28 09:48
点赞数: 0   转发数: 2   评论数: 8
发布工具: 微博 weibo.com

1206:Google 的 Josh Haberman 一年多以前就已经把 LuaJIT 所使用的 DynASM 动态汇编器组件给整合进了他自己的 Protocol Buffer 开源 C 库，upb，实现了一个性能明显高于 Google 官方编译器生成的 C++ 源码的 JIT 编译器：http://t.cn/zjYhugX DynASM 是通用组件，可以用在和 Lua 毫无关系的场景下   
微博位置: 无
发布时间: 2012-12-28 07:59
点赞数: 2   转发数: 111   评论数: 9
发布工具: 微博 weibo.com

1207:今早在 amix 的博客上看到了这张图，转出来自勉一下，嘿嘿～  原图 
微博位置: 无
发布时间: 2012-12-28 03:44
点赞数: 3   转发数: 12   评论数: 1
发布工具: 微博 weibo.com

1208:原先以为 LuaJIT 的 tracing JIT 编译器只能以 Lua 循环作为单位来生成“trace”，而 ngx_lua 模块使用的主事件循环是 Nginx 核心的，不可能是 Lua 循环，所以顶层的用户 Lua 代码无法被 JIT 编译。但今天尝试了下面这个小例子发现在请求了 /t 接口 111 次之后，所有 Lua 代码都成功编译为了机器指令。  原图 
微博位置: 无
发布时间: 2012-12-27 14:30
点赞数: 0   转发数: 7   评论数: 2
发布工具: 代码贴

1209:发现如今我已经无法忍受把主要的时间和精力花费在没有太大长进的工作上面了。终日思考那些当前水平完全可以胜任的工作容易让我变得焦虑，因为会有青春虚度的感觉。我发现自己太喜欢冲击那些特别有挑战的陌生领域了。在那些可以变出更多魔术的底层二进制世界，总是可以学到很多全新的特别有用的东西……  
微博位置: 无
发布时间: 2012-12-26 12:05
点赞数: 7   转发数: 41   评论数: 33
发布工具: 微博 weibo.com

1210:我刚刚发布了 ngx_openresty 新的稳定版 1.2.4.14: http://t.cn/aCdPzo 包含了过去两周修复的 ngx_lua 模块和 lua-resty-upload 库中的小问题。完整的更动历史在这里：http://t.cn/zlTtxln 感谢所有的贡献者和用户！下一个版本的 ngx_openresty 将基于 Nginx 1.2.6   原图 
微博位置: 无
发布时间: 2012-12-24 08:26
点赞数: 3   转发数: 10   评论数: 1
发布工具: 微博 weibo.com

1211:数据挖掘如今是热门主题，其实大规模的生产集群本身也拥有海量的数据值得挖掘，而且还是实时变化的，无论是内核空间还是用户空间。Joyent 公司在这一块基于 dtrace 做了许多有趣的数据采集和可视化的工作，集中在Cloud Visualization，用于完善稳定性和性能。后面我会基于 systemtap 进行类似的尝试。  
微博位置: 无
发布时间: 2012-12-23 16:00
点赞数: 0   转发数: 14   评论数: 2
发布工具: 微博 weibo.com

1212:Piotr Sikora 也开始仿照我的 systemtap 脚本，编写他自己的新脚本。他写的第一个这样的脚本可以动态追踪线上的 HTTP 400 响应，并按问题原因进行分类统计。不用修改 Nginx 或者应用代码，更不用重启服务，实时地按需进行统计，也可以按机器甚至进程采样，可以快速地变更和调整追踪策略乃至监控目标。  
微博位置: 无
发布时间: 2012-12-23 13:26
点赞数: 0   转发数: 7   评论数: 6
发布工具: 微博 weibo.com

1213:这周起我开始应同事请求编写一系列基于 SystemTap 的脚本，用于实时捕捉我们生产环境中的各类出错请求的细节信息。通过动态添加一系列 uprobes 探针，为运行中的 Nginx 进程设置一个个“陷阱”，一旦某个类别的错误掉入我的“陷讲”中，内核就会快速采集的相关状态信息（微秒级），不会影响线上服务。  
微博位置: 无
发布时间: 2012-12-23 13:19
点赞数: 2   转发数: 10   评论数: 3
发布工具: 微博 weibo.com

1214:我们的运维工程师 Sri Rao 这周开始主动使用我的 Nginx SystemTap Toolkit 里的 ngx-active-reqs 等脚本来分析线上生产环境中的问题：http://t.cn/zWdpzfv 应他的需求，我又扩展了这个脚本的功能，让它可以实时打印出 nginx upstream 基础设施中的许多细节信息。不用重编，不用重启，100% 动态追踪~  
微博位置: 无
发布时间: 2012-12-23 13:04
点赞数: 2   转发数: 36   评论数: 2
发布工具: 微博 weibo.com

1215:GitHub 挂了有一个小时了，到现在还没有恢复。它挂了我才意识到自己已经变得有多么依赖它了，哈哈！  原图 
微博位置: 无
发布时间: 2012-12-23 10:04
点赞数: 0   转发数: 10   评论数: 8
发布工具: 微博 weibo.com

1216:阅读 bison 的用户手册，发现了一些从前不知道的有趣特性，比如它的 GLR 分析算法支持（http://t.cn/zjpFwti ）和它的 Push 解析模式支持，都是极有用的。前者和 Thompson 的 NFA 仿真算法在处理非确定性方面有着异曲同工之妙，后者可以直接和我的 sregex 正则引擎结合起来实现无缓冲的流式语法分析。  
微博位置: 无
发布时间: 2012-12-22 04:45
点赞数: 1   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1217:昨晚对我的 sregex 正则库的正则解析器进行了重构，使用 bison 的“Pure Parser”特性将之改造成了可重入的。补丁在这里：http://t.cn/zjpkksw 删除了一堆全局变量之后的感觉真是好   
微博位置: 无
发布时间: 2012-12-22 04:38
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

1218:我在 sregex 项目上的工作吸引了 PCRE 正则库的 JIT 引擎的主要作者，Zoltán Herczeg 的注意. 他今天主动写信给我，表示他非常乐意在我设计和实现 sregex 的 JIT 编译器的时候提供帮助。什么叫做“天上掉馅饼”？这就叫做“天上掉馅饼”，哈哈！  
微博位置: 无
发布时间: 2012-12-21 09:00
点赞数: 8   转发数: 8   评论数: 9
发布工具: 微博 weibo.com

1219:今天为我的 sregex 正则库实现了大小写不敏感的匹配模式（即 Perl 5 的 /i 正则选项），补丁在这里：http://t.cn/zjN2OE9 同时用脚本导入了 perl 5.16.1 和 pcre 8.31 中测试这种匹配模式的几乎所有用例。pcre 的一个用例捕捉到我的实现中的一个 bug，我很快就修正了它：http://t.cn/zjN2OEK   
微博位置: 无
发布时间: 2012-12-20 08:59
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1220:其实每天都回复邮件列表里的一堆邮件是一件比较痛苦的事情，因为把别人的烦恼都变成自己的，经年累月人很容易变得消极。所以我打算后面每隔几天集中处理一次邮件，而且每次只选择比较有趣的邮件进行回复，否则我每天根本没有时间也没有心情去做我最想做的事情了 。当然我会努力不学 Igor 同学  
微博位置: 无
发布时间: 2012-12-18 13:56
点赞数: 3   转发数: 7   评论数: 10
发布工具: 微博 weibo.com

1221:今天把我的 sregex 正则引擎的 Thompson 和 Pike 这两个正则虚拟机的匹配接口都改造成了支持流式处理。一个完整的代码示例在这里：http://t.cn/zj9NF3O 由于本来就是非回溯的正则匹配算法，所以改造工作是直截了当的，让状态机支持 yield 和 resume 就可以了。目前 capture 的流式处理支持尚不完整。  
微博位置: 无
发布时间: 2012-12-18 10:14
点赞数: 0   转发数: 8   评论数: 1
发布工具: 微博 weibo.com

1222:我发现一维的 TODO 列表已经越来越不能满足我的需要，于是今天我尝试用 Graphviz 画了一张二维有向图，在上面绘出了我近期的学习和工作计划：http://t.cn/zjXOMCX 对应的 dot 语言源码放到了 GitHub 上面：http://t.cn/zjXOMC6 这种形式也利于分享。后面可以考虑定期画一张图   原图 
微博位置: 无
发布时间: 2012-12-12 09:12
点赞数: 3   转发数: 6   评论数: 6
发布工具: 微博 weibo.com

1223:我刚刚发布了 ngx_openresty 新的开发版 1.2.4.13: http://t.cn/aCdPzo 包含了 ngx_lua 模块和 lua-resty-mysql 库这几天的所有修复：http://t.cn/zlTtxln 这很可能是 1.2.4.x 系列中最后一个开发版发布了（如果没有新的衰退报告的话），欢迎大家多多测试这个版本 [呵呵]  原图 
微博位置: 无
发布时间: 2012-12-12 04:13
点赞数: 1   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

1224:刚刚在 Linux 上使用 systemtap 成功生成了世界上第一张 Lua 语言级别的“火焰图”（flamegraph）：http://t.cn/zj6RazK 这里显示的是lua-resty-mysql库满载时的 Lua 调用栈样本汇总（5 秒 1k Hz 采样）。Lua CFunction（以 C: 作为前缀）和纯 Lua 函数（以Lua模块名加冒号作为前缀）都可以显示   原图 
微博位置: 无
发布时间: 2012-12-11 08:59
点赞数: 1   转发数: 37   评论数: 16
发布工具: 微博 weibo.com

1225:我的同事 Matthieu Tourne 同学在 CloudFlare 的官方博客上发表了一篇文章“Pushing Nginx to its limit with Lua”：http://t.cn/zjiAodO  Matthieu 同学最近几个月一直忙着用 Lua 改写 CloudFlare 的 CDN 系统中所有的 PHP 代码、Perl 5 代码以及业务类型的 C 代码。  原图 
微博位置: 无
发布时间: 2012-12-09 08:01
点赞数: 6   转发数: 25   评论数: 2
发布工具: 微博 weibo.com

1226:刚刚发布了 ngx_openresty 新的开发版 1.2.4.11: http://t.cn/aCdPzo 包含了最近两周多以来所有的 bug 修复（主要集中在 ngx.on_abort() 和 ngx.thread API 等新特性上面），同时也包含了一些很小的新特性。完整的更动列表见这里：http://t.cn/zlTtxln 感谢所有的贡献者！[呵呵]  原图 
微博位置: 无
发布时间: 2012-12-08 16:40
点赞数: 1   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

1227:把 Firefox 升级到 17.0 之后发现 TiddlyWiki 不再能本地保存了 。Google 了一番之后找到了安装 TiddlyFox 这个浏览器插件的解决办法：http://t.cn/zjJIOqw [呵呵]  
微博位置: 无
发布时间: 2012-12-08 07:48
点赞数: 1   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1228:我们的视觉设计师 Kevin 同学今天为 ngx_lua 模块设计了一个很简单的大图标，不妨在这里 show 一下   原图 
微博位置: 无
发布时间: 2012-12-06 13:22
点赞数: 1   转发数: 6   评论数: 16
发布工具: 微博 weibo.com

1229:ngx_lua 模块中和 Lua GC 相关的 bug 一般都较难复现和调试，我已被这类 bug 搞过好几次了。最近又闹了一回，花了好几天才修复：http://t.cn/zjffJP8 （需翻墙）。我决心禁绝这类 bug，一个有效的做法是弄个 Lua 代码修改器，在测试用例中每一行 Lua 语句之后都自动加上 collectgarbage() 调用。  
微博位置: 无
发布时间: 2012-12-03 13:44
点赞数: 0   转发数: 9   评论数: 2
发布工具: 微博 weibo.com

1230:今晚我和 Piotr Sikora 受邀与 Nginx 的创始人 Igor Sysoev 及 Nginx 公司的 Andrew 一起在旧金山吃了顿饭。我和 Igor 老大一见如故，相谈甚欢，从 Nginx 的前世今生一直聊到中国和印度的古代史。生活中的 Igor 非常活泼和健谈，完全不同于他在邮件中给人留下的冰冷沉默的大叔形象   原图 
微博位置: 无
发布时间: 2012-12-02 15:32
点赞数: 5   转发数: 168   评论数: 57
发布工具: iPhone客户端

1231:LuaJIT 2.0 也打包了一个自己实现的内存分配器，和 Nginx 的内存池一样，也会一定程度上干扰 Valgrind 的 memcheck 工具检查内存问题。不过LuaJIT 2.0 提供了一个 LUAJIT_USE_SYSMALLOC 宏可以禁用它自己的分配器， 不幸的是，在 x86_64 体系结构上，LuaJIT 自己的分配器却是必需的。  
微博位置: 无
发布时间: 2012-12-02 09:00
点赞数: 0   转发数: 8   评论数: 6
发布工具: 微博 weibo.com

1232:今天借回复 openresty 中文邮件列表中一位用户的机会，针对 lua-resty-mysql 进行了一组测试，绘制出了 Lua GC 分配的存储空间分别在有压力和无压力下的变化，用 gnuplot 绘制出了下面这张图。完整的操作过程见我这封邮件：http://t.cn/zjtpj08 （需翻墙）  原图 
微博位置: 无
发布时间: 2012-11-30 09:08
点赞数: 2   转发数: 7   评论数: 3
发布工具: 微博 weibo.com

1233:昨天下午花了很长时间追踪一个很难复现的测试用例失败，不想最终捕捉到了 Test::Nginx 测试台中一个近期引入的功能衰退。我很快提交了一个小补丁修正了它：http://t.cn/zj5Qpt5 不相信灵异事件，不轻易放过测试集运行过程中的每一次意外失败，多少总是会有所斩获的   
微博位置: 无
发布时间: 2012-11-29 09:02
点赞数: 1   转发数: 14   评论数: 8
发布工具: 微博 weibo.com

1234:今天给 systemtap 邮件列表发了一封邮件，报告 systemtap git master 上的最新版在我的 Fedora 的 kernel 3.6.7 上一启动就崩溃，而 2.0 正式发布版却是可以的：http://t.cn/zjGRWGA 邮件发出后不久，我便从自己贴出来的 strace 输出中找到了线索，原来是因为新的 /boot/System.map* 文件权限不对。  
微博位置: 无
发布时间: 2012-11-27 07:11
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1235:Mike Pall 几天前告诉我，他准备在 LuaJIT 2.1 中实现 CAT 字符串拼接字节码的 JIT 编译。我希望他届时把 table.concat() 标准 Lua 函数也给 JIT 编译了。毕竟字符串拼接操作在 Web 世界中非常常见，包括我的那些 lua-resty-* 客户端库。因此而总是中断 trace 的编译过程的话，就实在是太可惜了！  
微博位置: 无
发布时间: 2012-11-26 07:20
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1236:刚刚在 ngx_lua 模块的 ffi 分支中提交了一个补丁：http://t.cn/zjbj8XD 为 ngx.md5_bin() 函数实现了一个基于 LuaJIT FFI 的版本。结果发现下面这个实例比基于 CFunction 的老接口快了近 3 倍。但如果禁用 LuaJIT 的 JIT 编译器的话（即使用 LuaJIT 的解释器），反而会比老接口慢 38%. 纠结啊～  原图 
微博位置: 无
发布时间: 2012-11-26 06:51
点赞数: 0   转发数: 6   评论数: 7
发布工具: 代码贴

1237:和媳妇儿一起在 Tom 家过感恩节。Tom 亲自下厨做火鸡，真是美味！  原图 
微博位置: 无
发布时间: 2012-11-23 10:26
点赞数: 0   转发数: 0   评论数: 9
发布工具: iPhone客户端

1238:这两日在读这个著名讨论：“Have tracing JIT compilers won?” http://t.cn/StaKVk 看着 Mike Pall 同学豪气冲天地舌战群儒，真是酣畅淋漓～一大感悟是：别人的结论永远是别人的，很多时候不动手亲证则很容易为人误导。历史上很多突破都是大胆破除旁人的迷信和谬论后取得的。  
微博位置: 无
发布时间: 2012-11-22 10:41
点赞数: 3   转发数: 12   评论数: 1
发布工具: 微博 weibo.com

1239:Mike Pall 为 LuaJIT 编写的 DynASM 工具链非常小巧精致，同时足够独立和通用。我在考虑用它来构造 sregex 正则引擎的 JIT 编译器，或者至少可以像 LuaJIT 2.0 那样使用 DynASM 来构造一个高效的解释器。看到 LuaJIT 2.0 的 Lua 解释器几乎都是手写的汇编代码，并且工整和优美，我便心荡神驰了   
微博位置: 无
发布时间: 2012-11-22 09:48
点赞数: 0   转发数: 6   评论数: 8
发布工具: 微博 weibo.com

1240:刚刚发布了 ngx_openresty 新的开发版 1.2.4.9: http://t.cn/aCdPzo 将 LuaJIT 升级到了 2.0.0 正式版。同时包含了 ngx_lua, ngx_headers_more, lua-resty-string 等组件中所有新的 bug 修复。完整的更动列表在：http://t.cn/zlTtxln 感谢所有的贡献者！[呵呵]  
微博位置: 无
发布时间: 2012-11-21 07:53
点赞数: 0   转发数: 12   评论数: 7
发布工具: 微博 weibo.com

1241:使用 LuaJIT 2.0 自带的 jit.v 和 jit.dump 模块可以打印出其 JIT 编译器在处理 ngx_lua 模块中某一段 Lua 代码时的 tracing 细节。比如下图中的代码示例中，tracing JIT 编译器的内部操作细节会输出到文本文件 /tmp/v.log 中。在这个例子中，content_by_lua 中的双层 Lua 循环是可以被 JIT 编译的。  原图 
微博位置: 无
发布时间: 2012-11-21 04:05
点赞数: 0   转发数: 5   评论数: 0
发布工具: 代码贴

1242:Maxim Dounin 三天前在 nginx-devel 邮件列表中公布了一系列补丁，为 nginx 核心添加了对 chunked 编码的请求体的支持：http://t.cn/zjL2ZM1 这样我在几年前编写的限制多多的 ngx_chunkin 模块（http://t.cn/zjL2ZMB ）终于可以退休了。我很高兴我不用再去维护它了   
微博位置: 无
发布时间: 2012-11-20 03:38
点赞数: 0   转发数: 12   评论数: 7
发布工具: 微博 weibo.com

1243:多年来读源码和技术资料都严格遵照精读的标准，虽然经常所学甚少便已受用良久，但却也不免容易倦怠而至不够广博。下面或许可以试试泛读的法子，快速浏览而不求甚解。  
微博位置: 无
发布时间: 2012-11-19 01:36
点赞数: 1   转发数: 4   评论数: 18
发布工具: iPhone客户端

1244:这两日公司组织 outing~ 我在:Cask Way  显示地图 原图 
微博位置: Cask Way
发布时间: 2012-11-16 16:35
点赞数: 0   转发数: 0   评论数: 3
发布工具: iPhone客户端

1245:我的同事 Tom 很喜欢教我广东话，于是经常出现神奇的一幕：一个澳大利亚人教一个中国大陆人如何说广东话   
微博位置: 无
发布时间: 2012-11-15 09:23
点赞数: 0   转发数: 7   评论数: 20
发布工具: 微博 weibo.com

1246:SystemTap 的 git master HEAD 老是出问题，现在 hello world 都跑不了了。我只好老老实实去用 Fedora 官方的 yum 包。貌似不少提交者在提交前都不运行整个测试集的。我现在已经懒得再向官方报告了，毕竟我现在还不算是开发者。等后面得空了得好好啃一下 systemtap 的 code base；万事不求人最好了。  
微博位置: 无
发布时间: 2012-11-15 09:00
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1247:Nginx 的内存池会把较小的内存块直接分配在大内存块里，但这种优化会干扰 Valgrind 检测内存越界读写。于是我们搞了一个 no-pool 补丁来禁用这种行为：http://t.cn/aKTUiW 由于我把 nginx 内存池的一个克隆实现也整合进了我的 sregex 正则库，所以我也引入了一个SRE_USE_VALGRIND宏来达到同样目的。  
微博位置: 无
发布时间: 2012-11-14 08:03
点赞数: 0   转发数: 19   评论数: 6
发布工具: 微博 weibo.com

1248:Justin Cormack 在 twitter 上如是说：“Randomly joined weibo in order to read something. Found @agentzh there. Chrome does an ok job of translating, might have to learn Chinese. ”看来我在微博上也要多几位只说英语的粉丝了，哈哈！  原图 
微博位置: 无
发布时间: 2012-11-14 02:56
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1249:LuaJIT 2.0.0 正式版终于发布啦！见 Mike Pall 的邮件：http://t.cn/zjz7wvi 我已经等了好几年了   
微博位置: 无
发布时间: 2012-11-13 04:04
点赞数: 0   转发数: 14   评论数: 5
发布工具: 微博 weibo.com

1250:刚刚发布了 ngx_openresty 新的开发版 1.2.4.7: http://t.cn/aCdPzo 把 LuaJIT 升级到了最新的 2.0.0rc3. 另外，把我所有的 lua-resty-* 库中各个 Lua 模块的 package.seeall 标记都给移除了，这个东西不仅影响性能而且容易造成很不好的副作用。完整的更动列表在这里：http://t.cn/zlTtxln  
微博位置: 无
发布时间: 2012-11-12 12:54
点赞数: 0   转发数: 6   评论数: 11
发布工具: 微博 weibo.com

1251:花了一周的时间搞定了 ngx_lua 模块自动检查下游连接提前断开的功能，文档在这里：http://t.cn/zj7C6ld 以及 http://t.cn/zj7C6lg 实现本身花费的时间很少，绝大部分时间都花在测试工作上了  已经包含在了最新的 ngx_lua 0.7.4 发布中。下周我终于可以继续搞 sregex 正则库了，嘿嘿～  
微博位置: 无
发布时间: 2012-11-12 12:50
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1252:有点儿想买 Joyent 的 DTrace 文化杉。。。看起来有点儿酷的样子。。。 地址：http://t.cn/zjha4nM  原图 
微博位置: 无
发布时间: 2012-11-11 02:04
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1253:FreeBSD 9.0 上的 TCP keepalive 支持虽然是默认开启的，但参数设置不及 Linux 方便。FreeBSD 上通过 sysctl 只能修改 idle 和 interval 这两个参数，而 probe count 的值要修改貌似得重编 kernel. 同时 FreeBSD 貌似也不支持在 socket 级别上进行这些参数配置。总之有些小遗憾 [呵呵]  
微博位置: 无
发布时间: 2012-11-11 01:29
点赞数: 0   转发数: 0   评论数: 1
发布工具: iPhone客户端

1254:在 FreeBSD 9.0 上使用 tcpdump 检查 TCP keepalive 模式下的 packet 通信发现了一些意想不到的现象，即当配置了 net.inet.tcp.keepintvl=1000 的时候，服务端每隔 1 秒同时发送两个 packet（如果客户端有及时响应 ACK 的话）！Linux 上面则是符合期望的 1 秒发 1 个 probe packet.  
微博位置: 无
发布时间: 2012-11-10 12:43
点赞数: 0   转发数: 1   评论数: 7
发布工具: 微博 weibo.com

1255:今天我们的技术老大 Lee 在公司理发了，同时也是一个小小的公司庆祝活动。为此公司还专门请了一位理发师过来。由于一年前他立下誓言，说 CloudFlare 的月流量一天不超过 Yahoo!，他就一天不理发；如今 CloudFlare 做到了，而他也已经是披肩长发了   
微博位置: 无
发布时间: 2012-11-09 11:32
点赞数: 0   转发数: 36   评论数: 21
发布工具: 微博 weibo.com

1256:正在 Amazon EC2 上运行 ngx_lua 和 lua-resy-* 库的庞大测试集。主要是为了回归 1. 最新的 LuaJIT 2.0.0 rc2，2. 包含了 lua_check_client_abort 配置指令以及 ngx.on_abort(func) 这个 Lua API 的 ngx_lua 模块。一共是 2 种体系结构共 7 台双核虚机并行跑。3 个小时之后就可以出测试报告了   原图 
微博位置: 无
发布时间: 2012-11-08 14:43
点赞数: 0   转发数: 9   评论数: 3
发布工具: 微博 weibo.com

1257:Nginx 的缔造者 Igor Sysoev 十二月初计划来旧金山，届时 Piotr Sikora 和我终于可以有机会和 Igor 老大坐下来喝喝茶  我得好好问问他，他闭关这么些日子究竟把 Nginx 2.0 给搞到什么程度了，哈哈！  
微博位置: 无
发布时间: 2012-11-08 07:47
点赞数: 0   转发数: 6   评论数: 13
发布工具: 微博 weibo.com

1258:这两天我在为 ngx_lua 模块实现 lua_check_client_abort 配置指令。当该指令置为 on 时（默认为 off，与现在的行为一致），ngx_lua 会尝试检测客户端连接断开的事件，并在这样的事件发生时立即终止当前请求对应的所有 Lua 轻量级线程的执行。同时支持 Lua 用户自定义事件处理的回调函数进行善后 [呵呵]  
微博位置: 无
发布时间: 2012-11-07 12:37
点赞数: 0   转发数: 15   评论数: 9
发布工具: 微博 weibo.com

1259:这两天我纠结于如何在 Test::Nginx 自动化测试台中摸拟 half-open 状态的 TCP 连接，以便对 Nginx 的 TCP keepalive 模式进行回归测试。由于在 Linux 上即使直接杀死客户端进程，系统的 TCP 协议栈也会自动发送 FIN 包，所以貌似得直接在 IP 协议层操纵 raw socket 了－－或者还有更好的做法？  
微博位置: 无
发布时间: 2012-11-07 11:27
点赞数: 0   转发数: 13   评论数: 7
发布工具: 微博 weibo.com

1260:在使用 mockeagain 进行测试的时候，注意到 nginx 并不真正支持“半关闭（half-close）”状态的连接，即客户端把请求发送完后就立即关闭发送方向（但仍然保留接收方向以接收响应）。原因在于 nginx 核心的 ngx_http_set_write_handler 函数会把 r->read_event_handler 置为 ngx_http_test_reading  
微博位置: 无
发布时间: 2012-11-07 10:59
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1261:我们的网络工程师（同时也是我的好友）Tom Paseka 昨晚及时帮助 Google 解决了一次影响规模不算小的网络问题，他的文章可以帮助我们更好地理解互联网是如何工作的以及它的弱点：http://t.cn/zlF1QUI 所以有时候即使突然不能访问 Google 的服务了，也不能全怪 Google，即使是在大防火墙以外，嘿嘿。  
微博位置: 无
发布时间: 2012-11-07 04:06
点赞数: 1   转发数: 126   评论数: 20
发布工具: 微博 weibo.com

1262:看到越来越多的用户开始在 ngx_lua 中进行（阻塞的）文件操作，我打算后面在 ngx_lua 模块中把 Nginx 核心中的 Asynchronous IO (AIO) 支持给暴露给 Lua. 打算仍然设计为“同步非阻塞”的 API :) 至于同一请求内部的异步并发，则总是通过 ngx.thread 轻量级线程 API 来搞   
微博位置: 无
发布时间: 2012-11-06 15:21
点赞数: 0   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

1263:今天在 FreeBSD 上运行 ngx_lua 的测试集的时候，观察到 cosocket connect 不能及时捕捉到 connection refused 错误。跟踪了一下发现，原来 Nginx 核心中检查连接是否成功的逻辑在 kqueue 下有一个小 bug，即它只检查了 write 事件的 EV_EOF 标志，而“连接被拒”这样的错误其实产生的是 read 事件。  
微博位置: 无
发布时间: 2012-11-05 14:56
点赞数: 0   转发数: 10   评论数: 7
发布工具: 微博 weibo.com

1264:perl 5 的正则测试集中有相当一部分是数据驱动的：http://t.cn/zlgP3qL 这部分用例可以很容易地转换为 sregex 的测试台所接受的测试文件。昨晚我写了一个 Perl 脚本，将这部分测试集进行了转换，并自动剔除了那些测试 sregex 并不支持的正则特性的用例。在修正了 sregex 中一些问题后，现已全部通过！  
微博位置: 无
发布时间: 2012-11-02 00:35
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1265:昨天给我的 sregex 正则引擎添加了对 \x{}, \x00, \o{}, \000, 和 \cK 这些 Perl 5 正则记法的支持，现在我们就可以很方便地在正则里编码那些不可打印的特殊字符了，同时也方便 sregex 通过更多的 perl 5 和 pcre 的测试集。sregex 目前支持的所有正则特性都已经汇总在了这里：http://t.cn/zlgPzzQ  
微博位置: 无
发布时间: 2012-11-02 00:06
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1266:刚刚发布了 ngx_openresty 新的开发版 1.2.4.5: http://t.cn/aCdPzo 包含了 LuaJIT 2.0.0 beta11 官方的 hotfix #1 补丁，同时包含了 ngx_lua 模块全新的 shdict:get_keys() 方法：http://t.cn/zlrHMd6  
微博位置: 无
发布时间: 2012-10-31 09:12
点赞数: 2   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1267:亚马逊 EC2 的美国东部机房 us-east-1 过去几个月出了几次大面积故障了，虽然我只是拿来跑我的 Nginx 测试集群，但遇到不让启动机器的时候也还是挺郁闷的。今天终于顺利地使用第三方服务（http://t.cn/zlrjR2e ）把我的虚机快照（AMI）都复制到了北加州机房 us-west-1；分别用了 50 分钟和 40 分钟。  
微博位置: 无
发布时间: 2012-10-31 07:21
点赞数: 1   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

1268:虽然我使用 Perl 5 语言已经有十个年头了，但直到现在自己动手实现比较完整的正则引擎时，才得以比较系统地去读 perlre 和perlrecharclass 这些 perl 的官方文档  平日里使用时都会尽量绕开一些我不确定的细节，现在终于可以搞得比较清楚了，嘿嘿。  
微博位置: 无
发布时间: 2012-10-30 07:40
点赞数: 2   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1269:在 Golden Gate Park 遇见一只野生的小松鼠。我盯着它深情地看呀看呀，它便一步一步蹿到我面前，用前爪轻轻抱住了我的腿  我在:Stow Lake Dr E  显示地图 原图 
微博位置: 无
发布时间: 2012-10-29 07:19
点赞数: 1   转发数: 15   评论数: 19
发布工具: iPhone客户端

1270:刚刚买了 sregex.org 的域名，准备好好弄这个正则库。现在我计划支持的 Perl 5 正则语法几乎都已经初步实现了（且不论目前效率如何）。下一步便是尝试运行 perl 和 pcre 的测试集。re2 从基本的正则语言结构构造随机正则表达式的测试台看起来也很有趣。在正确性有保证之后，就可以放手搞优化了！  
微博位置: 无
发布时间: 2012-10-28 14:04
点赞数: 0   转发数: 4   评论数: 8
发布工具: 微博 weibo.com

1271:在开发 sregex 库的过程中，我一直在努力抵制先用 Perl 这样的脚本语言构造快速原型的诱惑，努力让完成复杂算法的 C 代码也可以在我思考的时候，很自然地从我的脑袋里自动流淌出来  其实 C 程序员也是可以抵抗“早熟优化”的诱惑的，哈哈！  
微博位置: 无
发布时间: 2012-10-28 13:55
点赞数: 1   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1272:早上看到了这篇文章，很有意思：http://t.cn/zl10vdB "Network Storage in the Cloud: Delicious but Deadly" 确实快速而准确地隔离、定位和排除各种不可预见的故障的能力永远是第一位的。  
微博位置: 无
发布时间: 2012-10-28 04:54
点赞数: 1   转发数: 7   评论数: 0
发布工具: 微博 weibo.com

1273:对于 Perl 正则表达式中只涉及单个字节的 look-ahead 或 look-behind 断言，如 ^, $, \b, \B, \z 等，有一种投机取巧的做法可以避免引入多 NFA 并行匹配，即可以把 look-behind 断言合并到前一个字节的匹配步骤，并把 look-ahead 断言合并到下一个字节的匹配步骤。在 sregex 中我便是采取的这种策略。  原图 
微博位置: 无
发布时间: 2012-10-28 02:17
点赞数: 0   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

1274:Perl 正则中的“0宽度断言”结构，比如 ^, $, \b, \z, \A 这些，都涉及所谓的 look-ahead 或者 look-behind. 如果严格按照自动机理论进行编码，其实便是对多个 NFA 进行逻辑“与”（或者说集合“交”）操作。这种多 NFA 并行匹配在 Thompson 的 NFA 仿真算法中可以天然用更多的“轻线程”来实现   原图 
微博位置: 无
发布时间: 2012-10-28 02:04
点赞数: 0   转发数: 2   评论数: 0
发布工具: 代码贴

1275:今天为我的 sregex 正则引擎实现了所谓的“counted repetition”特性，即 a{n}、a{m,n}、a{m,} 以及它们的非贪婪变种 a{n}?、a{m,n}? 和 a{m,}?. 补丁在这里：http://t.cn/zl3xghm 这些东西都很容易地脱糖为更基本的语言结构，例如 a{2,4} 就脱糖为 aaa?a?，而 a{2,} 就脱糖为 aaa*   
微博位置: 无
发布时间: 2012-10-26 12:50
点赞数: 0   转发数: 7   评论数: 7
发布工具: 微博 weibo.com

1276:新版的 Google Groups 真是让我失望呀，跟新版的 Gmail 和 Google Reader 一样不好用。可惜老版的 Groups 越来越多功能故障，真是无奈。看来老 Google 的人不是失了话语权就是跳槽了吧。。。  
微博位置: 无
发布时间: 2012-10-26 10:32
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1277:这两年被 Igor Sysoev 和 Maxim Dounin 带坏了，我现在对 C 代码的洁癖也已经非常之重。Brian Akins 等同学提交给我的补丁一般都会请他们修改好几轮，最后免不了我还得自己动手再改一通才给合进 master   
微博位置: 无
发布时间: 2012-10-26 06:48
点赞数: 0   转发数: 11   评论数: 3
发布工具: 微博 weibo.com

1278:今天给我的 SRegex 正则引擎添加了对 character class 的初步支持：http://t.cn/zlmDGCv 发现直接在 LALR(1) 文法定义中编码这个正则语言结构会有问题，特别是有特殊字符时，所以我仿照 Plan 9 的 grep 的做法（http://t.cn/zlmDGCP ），直接在词法分析阶段人肉完成 character class 的解析工作。  原图 
微博位置: 无
发布时间: 2012-10-24 14:09
点赞数: 0   转发数: 5   评论数: 5
发布工具: 代码贴

1279:我的一位英语专业毕业的高中同学 @锡城翻译 现在也开始如火如荼地搞开源了。他正在为 GNOME 项目贡献本地化文档，同时开始大量补充计算领域的相关基础知识。我第一次遇见一位非本行的老同学在我面前兴高采烈地盛赞开源。开源的感染力可真是强大啊！  
微博位置: 无
发布时间: 2012-10-24 08:12
点赞数: 1   转发数: 31   评论数: 14
发布工具: 微博 weibo.com

1280:Brendan Gregg 是我最喜欢的系统性能调优方面的专家。他最近一篇博客举例讲解了“主动式性能评测”和“被动式性能评测”这二者之间的重要区别：http://t.cn/zlmWW1v 确实太多哥们在做性能评测时都是这样的：“对 A 进行评测，而其实是在对 B 作测量，但最后总结说已经对 C 进行了测量。”   
微博位置: 无
发布时间: 2012-10-24 02:40
点赞数: 2   转发数: 71   评论数: 3
发布工具: 微博 weibo.com

1281:虽然我已是新浪微博的重度用户，但 Twitter 于我是另一半的世界－－英语世界。能够随便 @ 像 Russ Cox 和 Brendan Gregg 这样的人物，感觉非常好。同时跟我现在的老板和同事也能 @ 来 @ 去的，嘿嘿。  
微博位置: 无
发布时间: 2012-10-22 14:33
点赞数: 1   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1282:Russ 的 RE1 正则引擎作为教学示范实现，其功能有限。比如它不能解析 "a|" 这样的正则。刚刚给我的 SRegex 打了一个小补丁，添加了空分支的支持：http://t.cn/zlnfZj3 正则 "a|" 生成的字节码程序相比正则 "a?"仅多出一条无实际效果的“jmp 7”指令（见下图），未来可以轻易地被字节码优化器优化掉。  原图 
微博位置: 无
发布时间: 2012-10-22 12:19
点赞数: 0   转发数: 2   评论数: 0
发布工具: 代码贴

1283:在用 Perl 5、PCRE、RE2 以及 RE1 库对 (a*)*、(a*?)*、(a??)* 这些个比较特殊的正则进行对比测试时，可以看到它们行为上的不一致。有的时候，Perl 5 和 PCRE 的行为更为合理，而有的时候，RE1 和 RE2 的结果更有意义。我要做的是确保我的 SRegex 引擎总是给出最有意义的结果，同时保持算法的一致性 :)  
微博位置: 无
发布时间: 2012-10-22 12:06
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1284:在刚搞过 ngx_lua 模块的“轻量级线程”之后来看 Thompson 的 NFA 摸拟实现，就会觉得非常亲切。因为在 Thompson （以及 Pike）正则 VM 中，也引入了类似“轻量级线程”的概念，只不过每当引擎消耗掉一个输入字符之后，所有的当前活动“线程”就会 resume 一遍（按优先级顺序）。“事物普遍联系”啊！  原图 
微博位置: 无
发布时间: 2012-10-22 05:05
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1285:在为我的 sregex 正则引擎库添加测试用例时，发现 (a*)* 这个正则在匹配 haac 这个串时，括号分组提取的结果在 re1 库中是 nil，而在 perl 和 pcre 中都是空字符串（""）。下图是 re1 和 sregex 生成的正则 VM 字节码程序所对应的 NFA 示意图。根据这张图的指引，我在 sregex 中修正了这个问题。  原图 
微博位置: 无
发布时间: 2012-10-21 15:45
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1286:近来我都工作在 sregex 正则引擎库上：http://t.cn/zlEfxXH 目标是为 Nginx WAF 等环境提供流式的 Perl 正则过滤和替换支持。我按照 Nginx 代码风格对 Russ Cox 的 re1 库进行了改写，同时整合了 Nginx 内存池的一个克隆实现用于内存管理。我移植了 re1 的 Thompson 和 Pike 这两个正则 VM 后端。  
微博位置: 无
发布时间: 2012-10-21 07:30
点赞数: 1   转发数: 11   评论数: 6
发布工具: 微博 weibo.com

1287:很多时候都会觉得计算世界从来不缺有趣的想法和原创的理论，缺的永远是靠谱的工程实现。  
微博位置: 无
发布时间: 2012-10-20 01:35
点赞数: 3   转发数: 84   评论数: 12
发布工具: 微博 weibo.com

1288:满地落叶，但这两天却是旧金山罕见的夏季气温。。。  原图 
微博位置: 无
发布时间: 2012-10-19 09:10
点赞数: 0   转发数: 0   评论数: 4
发布工具: iPhone客户端

1289:Matthieu Tourne 找到了这篇对 Nginx 老大 Igor Sysoev 的访谈录，像是从俄文原文直接机器翻译过来的：http://t.cn/zl8oeoH 非常详尽的采访，还有许多照片。Igor 确实看起来像战斗机飞行员，而照片里的 Maxim Dounin 实在太有喜感了，哈哈！  
微博位置: 无
发布时间: 2012-10-19 06:43
点赞数: 0   转发数: 16   评论数: 8
发布工具: 微博 weibo.com

1290:为正则引擎引入虚拟机（VM）的做法确实非常有意义。我们可以轻松地把正则表达式编译为可以运行在这个 VM 上的字节码，然后对这个字节码程序进行优化，甚至将之进行 JIT 编译。理论上性能应当可以高于 Ragel 这样的静态代码生成器，因为我们可以根据实际匹配时的统计信息动态调整生成的 JIT 目标代码。  
微博位置: 无
发布时间: 2012-10-18 08:32
点赞数: 0   转发数: 5   评论数: 13
发布工具: 微博 weibo.com

1291:刚刚发布了 ngx_openresty 新的开发版 1.2.4.3: http://t.cn/aCdPzo 升级了 LuaJIT 组件到最新的 2.0.0 beta11，同时包含了对 lua-resty-memcached 库的拼串优化（简单的示例使用 ab 压测，有 11.29% 的整体提升）。完整的更动列表在这里：http://t.cn/zlTtxln 感谢所有的贡献者和用户！[呵呵]  
微博位置: 无
发布时间: 2012-10-18 07:09
点赞数: 1   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1292:现在我向国内的朋友分享链接时总得时时记着标记“可能需要翻墙”这样的字样。回想自己从前在学生时代就想尽办法翻校园防火墙，到北京工作后又想尽办法翻国家的大防火墙，总之为了搞点儿有趣的技术，我曾经浪费了好多时间和精力在翻墙上。想来真是可惜。  
微博位置: 无
发布时间: 2012-10-18 03:01
点赞数: 0   转发数: 14   评论数: 7
发布工具: 微博 weibo.com

1293:Nginx（以及 ngx_lua）优化的极限便是“火焰图”（Flame Graph）中用户态的 CPU 时间趋于零。所以我们可以根据“火焰图”准确评估某个用例服务接口的（理论）极限性能在哪里。当然了，如果有多余的系统调用可以去除，或者 kernel 中存在优化的余地的话，也是可以削减核心态的 CPU 时间，嘿嘿。  
微博位置: 无
发布时间: 2012-10-17 11:39
点赞数: 0   转发数: 5   评论数: 8
发布工具: 微博 weibo.com

1294:ngx_lua 以及基于它的 Web 应用还能跑得更快么？当然！事实上，目前运行在 ngx_lua 之上的 Lua 代码几乎都是运行在 LuaJIT 2.0 的解释器上的，并没有真正启用 JIT 编译。即便如此，已经可以看到相对标准Lua解释器的显著提升；所以一旦我们真正启用了 LuaJIT 的 tracing JIT 编译器，将会看到显著差别！  
微博位置: 无
发布时间: 2012-10-17 11:31
点赞数: 0   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

1295:LuaJIT 2.0.0 beta11 终于发布啦！http://t.cn/h5ZbpX 使用 ab 压测简单的用例显示，相比 beta10，lua-resty-mysql 快了 15%，lua-resty-memcached 快了 22%，而 lua-resty-redis 快了 27%. ngx_lua 提供的所有涉及 I/O 的 Lua API 都会有提升   
微博位置: 无
发布时间: 2012-10-17 09:02
点赞数: 0   转发数: 12   评论数: 13
发布工具: 微博 weibo.com

1296:刚刚借回复一位用户的机会详细演示了如何在 ngx_lua 中利用 HTTP 1.1 chunked 进行流式输出。可以在 web 浏览器中直观地看到动态刷新的效果，类似命令行界面上的输出，呵呵：http://t.cn/zlT9lMR （从国内访问可能需要翻墙）对于网页的增量式渲染，不同浏览器的具体行为还是有些重要区别的   
微博位置: 无
发布时间: 2012-10-15 13:02
点赞数: 0   转发数: 8   评论数: 9
发布工具: 微博 weibo.com

1297:家里通过 AT&T 接入的 12Mbit 宽带，实测极限下载速度可以到 1.45 MByte/s，也就是 11.6Mbit/s. 真值了！之前在福州通过电信接入的 10Mbit 宽带，极限也就到 1.1 MByte/s，也就是 8.8Mbit/s，水分大多了。  
微博位置: 无
发布时间: 2012-10-15 12:06
点赞数: 1   转发数: 5   评论数: 11
发布工具: 微博 weibo.com

1298:刚刚发布了 ngx_openresty 开发版 1.2.4.1: http://t.cn/aCdPzo 这个版本把 Nginx 核心升级到了最新的稳定版 1.2.4，同时把 ngx_lua 模块升级到了 0.7.1. 这是第一个包含了 ngx_lua 轻量级线程 API 的 OpenResty 版本。完整的更动列表在这里：http://t.cn/zlTtxln 感谢所有的开发者和用户！[呵呵]  
微博位置: 无
发布时间: 2012-10-15 04:41
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1299:平日多关注一些所谓的非主流技术经常会有特别的惊喜，这种感觉可以套用 Tim O'Reilly 曾经引用过的一个说法：“The future is here; it's just not evenly distributed yet.”  
微博位置: 无
发布时间: 2012-10-14 03:45
点赞数: 1   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1300:我可以接受长年累月没有固定的工作和收入，但我不能接受自己哪怕一天在技术上没有任何长进或者贡献。  
微博位置: 无
发布时间: 2012-10-14 03:02
点赞数: 1   转发数: 112   评论数: 56
发布工具: 微博 weibo.com

1301:刚刚在 OpenResty 中文邮件列表里借着回复一位用户问询的机会，详细介绍了一下我在 Linux 上使用 SystemTap 和 Brendan Gregg 的 FlameGraph 工具为正在运行中的某个 nginx worker 进程（或其他任意进程）生成纯用户态或者用户态 + 核心态的“火焰图”的详细步骤：http://t.cn/zlYJrS2 （可能需翻墙）  原图 
微博位置: 无
发布时间: 2012-10-14 02:03
点赞数: 0   转发数: 48   评论数: 8
发布工具: 微博 weibo.com

1302:到美国以后，我养成了每天睡一小时午觉的习惯，于是经常精神好得都不知道做什么，因为做什么都觉得有些浪费，哈哈！程序员确实得时刻保持充沛的体力和精力，这样才能多写几年代码呀，哈哈！咱也得可持续发展，嘿嘿～  
微博位置: 无
发布时间: 2012-10-12 09:08
点赞数: 1   转发数: 8   评论数: 13
发布工具: 微博 weibo.com

1303:现在我也跟着我老婆一起追踪《Modern Family》、《Homeland》以及《Big Bang》等美剧，出一集就看一集，哈哈！  
微博位置: 无
发布时间: 2012-10-12 08:45
点赞数: 0   转发数: 2   评论数: 11
发布工具: 微博 weibo.com

1304:DTrace 的作者们终于开始增强 DTrace 的用户态追踪功能了：http://t.cn/zllQzeY 在这一块 DTrace 已经落后于 SystemTap 太多了；现在的做法实在太傻太麻烦了。  
微博位置: 无
发布时间: 2012-10-12 08:07
点赞数: 1   转发数: 9   评论数: 5
发布工具: 微博 weibo.com

1305:刚刚电话面试了一个名字看起来像华裔的小朋友。第一次用英语面试别人，感觉很好玩。小伙子的英语很地道，但是他的技能集和我们的需要不匹配 :)  
微博位置: 无
发布时间: 2012-10-12 07:40
点赞数: 1   转发数: 1   评论数: 15
发布工具: 微博 weibo.com

1306:今天把 ngx_lua 全新的 ngx.thread API（即“轻量级线程 API”）的正式文档给写好了：http://t.cn/zlW33M3 同时标记了 ngx_lua v0.7.0 发布，包含了这一重要的新特性。欢迎大家验读文档以及试用新特性 [呵呵]  
微博位置: 无
发布时间: 2012-10-11 08:29
点赞数: 0   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

1307:今天我们的技术老大 Lee 同学在公司聊天室里说，他很想聘请我的偶象，LuaJIT 的作者 Mike 同学。Lee 希望他能直接坐在我身边，然后 Matthieu 驱动我干活儿，我再驱动 Mike 干活儿，哈哈！如若真能实现，那可真是三生有幸了！  
微博位置: 无
发布时间: 2012-10-10 12:38
点赞数: 0   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

1308:耶! 期待已久的 SystemTap 2.0 终于发布了！http://t.cn/zlW7Duc  
微博位置: 无
发布时间: 2012-10-10 11:52
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1309:现在 OpenResty 项目收到的用户邮件越来越多了，昨晚我睡觉时就一下子新收了十几封。今天白天上班花了大半天还没回完（现在只剩一封了！）。希望大家多多帮我在 OpenResty 中英文邮件列表里回复邮件呀！  
微博位置: 无
发布时间: 2012-10-10 07:29
点赞数: 0   转发数: 2   评论数: 10
发布工具: 微博 weibo.com

1310:Flame Graph（火焰图）显示，LuaJIT 2.0 的 lua_yield 已然是 ngx_lua 中的下一个瓶颈所在了，它比标准 Lua 5.1 解释器昂贵很多。我发了一封邮件到 luajit 邮件列表报告了这个发现：http://t.cn/zl0rQVp 希望 Mike Pall 同学能帮我优化一下，届时 ngx_lua 在 I/O 密集场景下的性能又将显著提升  原图 
微博位置: 无
发布时间: 2012-10-09 09:52
点赞数: 0   转发数: 10   评论数: 11
发布工具: 微博 weibo.com

1311:刚刚发布了 ngx_openresty 新的稳定版 1.2.3.8: http://t.cn/aCdPzo 此版本和前一个开发版是完全相同的。如此，下面我终于可以放手把 nginx 核心升级到 1.2.4，同时开始把 ngx_lua 的“轻量级线程”合并到它的 master，并发布为 ngx_lua 0.7.x 系列了！更让人高兴的是，LuaJIT 2.0 beta11 也快来了！  
微博位置: 无
发布时间: 2012-10-09 06:35
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1312:第一次在 OpenResty 中文邮件列表里看到面向 openresty/lua 工程师的招聘帖，顿时有些小激动，哈哈！特此代为转发一下：http://t.cn/zlpTkAJ  
微博位置: 无
发布时间: 2012-10-08 12:15
点赞数: 0   转发数: 8   评论数: 7
发布工具: 微博 weibo.com

1313:十月确实是旧金山最好的季节 我在:The Embarcadero  显示地图 原图 
微博位置: The Embarcadero
发布时间: 2012-10-08 04:25
点赞数: 0   转发数: 0   评论数: 10
发布工具: iPhone客户端

1314:我们的 Piotr Sikora 同志 10 月 1 日第一天入职时直接撞上了玻璃门。。。整个过程被公司监视器给记录下来，被负责安全的同事截下来，并转发到了公司邮件列表。实在是太欢乐了！  原图 
微博位置: 无
发布时间: 2012-10-07 15:29
点赞数: 2   转发数: 10   评论数: 13
发布工具: 微博 weibo.com

1315:我昨晚在和老朋友 laye 聊天时，不禁向他感慨我在 2009 年时转向全职 C 程序员是非常明智的选择。降到更低的层面上，我一下有机会可以做更多更重要的事情，从而为来自世界各国的更多的人所需要。这种强烈的被需要的感觉正是我最近这几年努力工作的动力源泉。要感谢@chaoslawful 当时对我的指引和鼓励。  
微博位置: 无
发布时间: 2012-10-07 14:14
点赞数: 0   转发数: 25   评论数: 28
发布工具: 微博 weibo.com

1316:re2 和 Google Code Search 的作者 Russ Cox 编写的《Implementing Regular Expressions》系列技术文章实在是太精彩了！http://t.cn/zOyRZud 从优美的自动机理论讲到现代各种正则引擎的实现方法及比较，还有许多相关的历史介绍。他甚至还实现了一个供教学使用的 re1 库。  
微博位置: 无
发布时间: 2012-10-07 10:26
点赞数: 5   转发数: 269   评论数: 16
发布工具: 微博 weibo.com

1317:刚刚发布了 ngx_openresty 新的开发版 1.2.3.7: http://t.cn/aCdPzo 主要包含了过去一周给 ngx_lua 模块添加的一些小功能和小修复：http://t.cn/zWRsp9G 感谢所有的贡献者和用户！这个很可能是 1.2.3.x 系列中的最后一个开发版了，我打算及早从这个系列发布一个稳定版出来，欢迎大家多多测试 [呵呵]  
微博位置: 无
发布时间: 2012-10-07 03:34
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

1318:ngx_lua 模块的“轻量级线程”方面的工作已经告一段落了，近期会把这个特性合并到 master. 目前我的工作重心已经转移到了实现（或者改造）一个非回溯的正则引擎，可以像 Ragel 一样直接作用于数据流，但同时又像 PCRE 那样灵活方便，支持分组匹配提取等各种特性。目前看起来 re2 库是一个不错的基础。  
微博位置: 无
发布时间: 2012-10-06 10:03
点赞数: 0   转发数: 13   评论数: 4
发布工具: 微博 weibo.com

1319:这两天给 ngx_lua 模块暴露出了一个公开的 C API 函数 ngx_http_lua_shared_dict_get，供 Nginx 核心或者其他 Nginx C 模块直接读取 ngx_lua 创建的共享内存字典。我首次尝试使用 Lua 来对 C API 进行单元测试，真是既方便又有趣：http://t.cn/zlax4x3 LuaJIT FFI 从 Lua 直接调 C 怎一个爽字了得！  
微博位置: 无
发布时间: 2012-10-05 07:26
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

1320:旧金山这两天已经热得很不像旧金山了。。。  
微博位置: 无
发布时间: 2012-10-03 05:58
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1321:来自波兰的 Nginx 黑客 Piotr Sikora 现在已经作为我的同事每天坐在我的右手边了，哈哈！他是 ngx_postgres、ngx_coolkit、ngx_cache_purge、ngx_slowfs_cache、ngx_zeromq、ngx_supervisord 等模块的主要作者。在此之前的几年中我们只是通过 IRC 和邮件交流而已 :P 开源世界确实充满神奇   
微博位置: 无
发布时间: 2012-10-03 01:38
点赞数: 2   转发数: 7   评论数: 15
发布工具: 微博 weibo.com

1322:刚刚发了一封邮件到 openresty 和 openresty-en 邮件列表，总结了一下 ngx_lua 模块的 "thread" 分支上已经实现的“轻量级线程”API 的设计和用法：http://t.cn/zlIun3E （可能需要翻墙）欢迎大家在我把 "thread" 分支合并回 "master" 主干之前多提宝贵意见和建议！[呵呵]  
微博位置: 无
发布时间: 2012-10-02 06:28
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1323:刚刚发布了 ngx_openresty 新的开发版 1.2.3.5：http://t.cn/aCdPzo 主要升级了 ngx_lua 模块，修复了 @Lance 和 @xingxing 报告的 ngx.re 正则 API 中的一类 bug. 细节请见这里：http://t.cn/zWRsp9G  
微博位置: 无
发布时间: 2012-10-02 02:51
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1324:刚刚我又为 ngx_lua 模块的 ngx.thread.spawn() 函数实现了传递多个初始参数给“轻量级线程”的功能，这样可以减少创建 Lua 闭包的数目，有助于代码的简化和性能的提升。下图给出了一个很简单的示例。现在 ngx_lua 的 "thread" 分支已经接近可以合并回 "master" 主干的状态了   原图 
微博位置: 无
发布时间: 2012-10-01 10:58
点赞数: 0   转发数: 6   评论数: 3
发布工具: 代码贴

1325:在 ngx_lua 模块的 thread 分支中，我终于又顺利实现了 ngx.thread.wait() 函数，可用于同步等待当前协程创建的一个或多个“轻量级线程”，并返回第一个结束的“线程”的结果（包括异常）。下图是一个典型的示例。已通过的相关测试用例在这里：http://t.cn/zlVnpuI  原图 
微博位置: 无
发布时间: 2012-10-01 09:06
点赞数: 0   转发数: 1   评论数: 1
发布工具: 代码贴

1326:家楼下的枫树越来越红〜 和新浪微博秋季版客户端那个图很像吧！  原图 
微博位置: 无
发布时间: 2012-10-01 06:43
点赞数: 0   转发数: 1   评论数: 9
发布工具: iPhone客户端

1327:今天阳光真好，一点风都没有〜  原图 
微博位置: 无
发布时间: 2012-10-01 05:41
点赞数: 0   转发数: 0   评论数: 6
发布工具: iPhone客户端

1328:推荐老王同学写的这一篇《Nginx 与 Lua》，算是 ngx_lua 的入门快速教程了，呵呵：Nginx与Lua | 火丁笔记 而这一篇《实现一个简单的服务端推方案》介绍了一种基于 ngx_lua 实现 comet 推送服务器的方案：http://t.cn/zlb1glw 也写得非常好。无论如何我得赶紧着手实现 lua_ignore_client_abort off 了！  
微博位置: 无
发布时间: 2012-09-30 00:37
点赞数: 0   转发数: 98   评论数: 15
发布工具: 微博 weibo.com

1329:每天其实只需要实打实地工作四、五个小时就已经很够很够了，再多就会累了。而一旦累了，技术活就真成一些人所说的”青春饭“了   
微博位置: 无
发布时间: 2012-09-28 08:53
点赞数: 2   转发数: 41   评论数: 17
发布工具: 微博 weibo.com

1330:刚刚发布了 Test::Nginx 0.21 测试台到 CPAN 网络：http://t.cn/zlbqNKs 在未来的几小时内应当会出现在你邻近的 CPAN 镜像服务器上。这次发布包含了过去三个月所有的更动，亮点是内置的 UDP/TCP 测试服务器支持，以及基于 SystemTap 的白盒测试支持。“软件开发，测试先行”   
微博位置: 无
发布时间: 2012-09-28 03:30
点赞数: 0   转发数: 17   评论数: 1
发布工具: 微博 weibo.com

1331:刚刚发布了 ngx_openresty 开发版 1.2.3.3：http://t.cn/aCdPzo 包含了过去一个多月以来几乎所有的新特性、bug 修复和性能优化（除了 ngx_lua 的“轻量级线程”支持还在开发中），完整的更动列表在这里：http://t.cn/zWRsp9G 感谢所有的贡献者和用户！[呵呵]  
微博位置: 无
发布时间: 2012-09-27 13:56
点赞数: 0   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

1332:gcc 的这个 bug 搞笑了：http://t.cn/zl4Z2wl 这样一来，禁用 gcc 优化，即用 gcc -O0 编译出的程序在用 SystemTap 追踪的时候，就无法正确定位函数的参数位置了，汗啊。我先前在追踪 Nginx 的时候也遇到过这个问题，换成 -O1 优化选项就可以了 :)  
微博位置: 无
发布时间: 2012-09-27 07:13
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1333:今天早上兴高彩烈地用 gcc 4.7.2 从源码现编了一个 clang 3.1，发现其静态代码分析器处理 ngx_lua 源码的速度大大提升了，但唯独在分析 src/ngx_http_lua_clfactory.c 的时候 clang 进程直接崩溃了。ngx_http_lua_clfactory_loadbuffer 函数在调用 lua_load 时传递的中间两个参数让 clang 纠结了，汗。  
微博位置: 无
发布时间: 2012-09-27 03:22
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

1334:转眼已经有一个多月没有为 ngx_openresty 发布新版本了；今天晚上我开始从各个组件的 git log 出发整理和编辑 change log，结果累得半死。。。相比前一个版本，竟已经累积了这么多的变更了呀。。。  
微博位置: 无
发布时间: 2012-09-26 13:58
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1335:既然现在 ngx_lua 几乎所有涉及 I/O 的 Nginx Lua API 都可以在中间直接打断，我下面也得以实现 lua_ignore_client_abort off 配置指令了。即当下游连接提前断开时，当前请求在 ngx_lua 一侧的 I/O 处理也能立即终止。唯一不能直接打断的子请求也可以通过配置 proxy_ignore_client_abort off 来解决。  
微博位置: 无
发布时间: 2012-09-26 07:59
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1336:刚刚在 ngx_lua 模块的 git "thread" 分支中把 ngx.thread.create() 函数重命名为 ngx.thread.spawn()，这样就和 Erlang 和 gevent 中的命名一致（当然，和 pthread 中的命名就不再一致了）。主要考虑到 coroutine.create 只创建并不运行协程，ngx.thread.create 便容易给人以这样不正确的暗示。  
微博位置: 无
发布时间: 2012-09-26 07:41
点赞数: 1   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

1337:我暂时放弃了在 ngx_lua 模块中实现 Nginx 子请求提前终止机制的努力。目前的设计如下：当用 ngx.exit(), ngx.exec() 等接口强行结束所有 ngx.thread “线程”时，如果存在某个“线程”还在运行子请求（通过 ngx.location.capture，比如），则会立即抛 Lua 异常并结束整个请求。@chaoslawful @淘宝静龙  
微博位置: 无
发布时间: 2012-09-26 07:00
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1338:在开发 ngx_lua 的“轻量级线程”的过程中，基于 SystemTap 的白盒测试能力帮了我的大忙。包括资源回收等执行细节是很难通过黑盒手段来测试的，原先我都是手工加入 nginx 调试日志代码来故意制造“副作用”。现在看来真老土了！而以白盒测试为目的 mocking 现在看来也很傻很低级。动态追踪才是王道！  原图 
微博位置: 无
发布时间: 2012-09-25 03:08
点赞数: 1   转发数: 1   评论数: 0
发布工具: 代码贴

1339:媳妇儿推荐的《三个白痴》和《死亡诗社》这两部以教育为主题的电影我看了都非常有共鸣。回想自己在校园里时，坚持走自己的路、做自己认为正确的事情也需要克服各种阻力，承受各种压力。我很庆幸自己当年坚持到了最后。必须指出的是，我并不是说要和学校对着干，看过这两部电影就会明白我的意思 [呵呵]  原图 
微博位置: 无
发布时间: 2012-09-24 13:29
点赞数: 0   转发数: 7   评论数: 10
发布工具: 微博 weibo.com

1340:这几日我在 ngx_lua 模块的 "thread" 分支上初步实现了“轻量级线程 API”的第一个原型。这种“轻量级线程”本质上就是由 ngx_lua 自动进行调度的 Lua 协程。目前这种“线程”是非抢占式，不会自动分时间片，不过用户可以主动放弃当前“线程”的执行权。默认当前请求会等所有“线程”结束后再退出。  原图 
微博位置: 无
发布时间: 2012-09-24 09:57
点赞数: 0   转发数: 12   评论数: 11
发布工具: 代码贴

1341:CloudFlare 的一个传统是每周五下班前的一小时，从 CEO 到每一位普通员工，都要轮流到白板前向大家介绍自己这一周的工作（或者有趣的发现以及好玩的周末度假计划）。我每次都会喷很多，这毕竟也是练习英语演讲的好机会，哈哈！  原图 
微博位置: 无
发布时间: 2012-09-23 11:58
点赞数: 1   转发数: 47   评论数: 25
发布工具: 微博 weibo.com

1342:公寓楼下的枫树一天天地红了。  原图 
微博位置: 无
发布时间: 2012-09-23 05:31
点赞数: 0   转发数: 0   评论数: 4
发布工具: iPhone客户端

1343:我同事 Tom 今天早上在家门口抓拍到的美国航天飞机的告别飞行：http://t.cn/zlwBSwt 就在照片中央附近  看新闻是“奋进号”：http://t.cn/zlwBSw5  原图 
微博位置: 无
发布时间: 2012-09-22 02:51
点赞数: 0   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

1344:Azure 分享了如何通过 ngx_lua 的 cosocket 实现严格流式的 Nginx 大请求转发：http://t.cn/zlw1VfN 标准的 ngx_proxy 等模块总是会全缓冲整个请求体，无论是在内存中还是在文件系统上，ngx_lua 在这里可以很好地避免全缓冲 [呵呵]  
微博位置: 无
发布时间: 2012-09-22 01:47
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

1345:刚刚向我的 Nginx SystemTap 工具箱中又添加了一个名为 ngx-pcrejit 的命令行工具：http://t.cn/zlZq088 它可以动态追踪指定的 nginx worker 进程中执行的 PCRE 正则匹配，并统计其中有多少是实际经过 PCRE JIT 加速的，同时按调用者分类。不过，当 PCRE 是静态联编到 Nginx 中时，SystemTap 会报错。  原图 
微博位置: 无
发布时间: 2012-09-20 07:51
点赞数: 0   转发数: 18   评论数: 7
发布工具: 代码贴

1346:下面我非常想做的一件工作是让 SystemTap 的 ubacktrace() 函数能自动识别 Lua/LuaJIT 的调用栈 :D 这样就可以在 Lua 语言级别上进行 flame graph 分析了，哈哈！  
微博位置: 无
发布时间: 2012-09-19 11:59
点赞数: 1   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1347:刚刚我又尝试了用 systemtap 对用户态到核心态的完整的调用栈进行高频采样，为 ngx_lua + lua-resty-redis 生成了一张更完整的“火焰图”（flame graph）：http://t.cn/zlzSG5J 现在“火苗”看起来更逼真了，哈哈！可以一直烧到内核深处。这让我们更有动力去学习 linux kernel 的内部实现细节了[嘿嘿]  原图 
微博位置: 无
发布时间: 2012-09-19 07:40
点赞数: 0   转发数: 11   评论数: 10
发布工具: 微博 weibo.com

1348:根据“火焰图”提供的热点信息，我又对 lua-resty-redis 库进行了优化，在 Lua 语言级别上进行字符串拼接操作，而不再依赖 tcpsock:send() 在 C 级别上通过调用 Lua C API 遍历 table 来拼接串（因为“火焰图”中后者占了 6.44%）。优化后ab显示整体又有了 6%~7% 的提升。上新图：http://t.cn/zlz62lD  原图 
微博位置: 无
发布时间: 2012-09-19 03:21
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1349:Brendan Gregg 老大在 twitter 上指出了我为 ngx_lua + lua-resty-redis 生成的 flame graph（火焰图）是有问题的，即调用栈存在截断。后来我又发现我的调用栈的方向完全画反了，真是惭愧。在修正了所有这些问题之后，生成的“火焰图”终于看起来很完美了！可交互的 SVG 在这里：http://t.cn/zlhOx5J  原图 
微博位置: 无
发布时间: 2012-09-18 11:10
点赞数: 0   转发数: 16   评论数: 7
发布工具: 微博 weibo.com

1350:刚看到 LuaJIT 2.0 的 git master 里已经实现了 Lua 5.2 的 goto 和 ::label:: 语句！  这应当可以大大简化那些以 LuaJIT 字节码（或源码）为目标的编译器实现 [花心]  
微博位置: 无
发布时间: 2012-09-17 03:21
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1351:SystemTap 让我更有动力去了解各种常用软件的内部实现，而同时 SystemTap 让我对一些软件已有的理解变得更有价值。让我们把源码级别的知识都变成基于 systemtap 或者 dtrace 的实用工具吧！无论是实时性能分析工具，还是实时问题诊断工具。对于很多人来说，这些工具可比源码分析文章要有用多了！  
微博位置: 无
发布时间: 2012-09-17 02:22
点赞数: 1   转发数: 10   评论数: 5
发布工具: 微博 weibo.com

1352:今天我用 Brendan Gregg 的 flamegraph 工具结合 SystemTap，在 Linux 上面对 ngx_lua 的 cosocket API 在满负载条件下的用户态调用栈进行了采样分析，得到了所谓的“火焰图”是一个可以交互的 SVG: http://t.cn/zlhOx5J 技术细节可以参见这里：http://t.cn/zOiMTju 原贴是对内核调用栈进行采样。  原图 
微博位置: 无
发布时间: 2012-09-16 15:21
点赞数: 0   转发数: 41   评论数: 9
发布工具: 微博 weibo.com

1353:今天又为我的 Nginx SystemTap 工具箱添加了两个新工具，ngx-body-filters 和 ngx-header-filters，可以分别打印出任意一个正在运行中的 nginx worker 进程中所有的输出体过滤器和输出头过滤器，并按照它们实际运行的顺序打印：http://t.cn/zlPmcvC 不少用户都遇到过因为过滤器顺序而导致的诡异问题。  原图 
微博位置: 无
发布时间: 2012-09-15 10:28
点赞数: 0   转发数: 2   评论数: 4
发布工具: 代码贴

1354:在我的 W530 上测试了一下 ngx_lua 模块最新的 git master 跑 lua-resty-redis 的一个很简单的测试用例（见下图），发现 1. 相比 ngx_openresty 1.2.3.1 没有可测量的变化，2. 使用 -O2 编译 nginx 相比 -O1 会有 3% 以上的性能提升，3. 运行在用户 coroutine 中会有 5% 的性能损失。  原图 
微博位置: 无
发布时间: 2012-09-15 03:09
点赞数: 0   转发数: 4   评论数: 2
发布工具: 代码贴

1355:搬家后，跑步地点由海边换到了位于公司和家中间的公园，顺路~ 我在:S Park St  显示地图 原图 
微博位置: S Park St
发布时间: 2012-09-13 09:28
点赞数: 0   转发数: 1   评论数: 10
发布工具: iPhone客户端

1356:经过几天的 hacking，我终于完成了 ngx_lua 模块中全新的 I/O 调度器的实现工作。新的调度器可以自己追踪每一个（非阻塞的）I/O 操作所关联的 Lua 协程，从而可以支持未来多个 Lua 协程并发执行，这便为下一步实现所谓的“轻量级线程”铺平了道路！  
微博位置: 无
发布时间: 2012-09-13 08:30
点赞数: 0   转发数: 9   评论数: 13
发布工具: 微博 weibo.com

1357:iPhone 5 发布的地点离我的公寓很近，只有一个街区。几天前就看到工人们在刷楼壁上的那个大苹果   
微博位置: 无
发布时间: 2012-09-13 07:16
点赞数: 0   转发数: 0   评论数: 7
发布工具: 微博 weibo.com

1358:我的 Nginx SystemTap 工具箱里的大部分脚本其实都不太好移植到标准的 DTrace 上去，因为这些脚本非常依赖于 SystemTap的两个很酷的特性：DWARF 自省和语言级别的循环结构。虽然 DTrace 的作者以停机问题反对在语言中添加循环或者递归结构，不过 SystemTap 通过对指令数进行限制貌似也不会有什么问题。  
微博位置: 无
发布时间: 2012-09-13 06:35
点赞数: 0   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

1359:公司在生产上使用的 Linux 发行版并不是 RedHat 系的，而且 kernel 也没有新到像 3.5 那样直接内置了 uprobe，所以在生产上使用 SystemTap 来追踪用户态进程是有问题的。在我这几周的广泛游说下，我们的 kernel 工程师终于开始向生产用的 kernel 应用 utrace 补丁了，耶！  
微博位置: 无
发布时间: 2012-09-12 05:53
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1360:SystemTap 支持在它的脚本中直接引用 dtrace 静态探针上下文中的应用程序的局部变量。这个强大的特性意味着静态探针的参数并非传递信息的唯一途径，我们可以定义一种通用的调试探针，比始 info(char *msg)，然后插入在应用程序代码中的任意位置上，然后我们就可以轻松得到这些位置上的所有状态信息。  
微博位置: 无
发布时间: 2012-09-12 00:34
点赞数: 0   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

1361:刚刚正在准备提给 SystemTap 官方的第二份 bug 报告的时候，突然发现最新的 git master 里面的 SystemTap 已经在两天前修正了 ubacktrace() 函数的内存问题，并且我的 ngx-leaked-pools 脚本也不再需要牺牲性能来绕过这个 bug 了，耶！ 这个 bug 在最近的 1.8 发布版中也是存在的。  
微博位置: 无
发布时间: 2012-09-10 15:32
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1362:刚刚给 Nginx 官方提交了一个补丁：http://t.cn/zWFYlNA 让 ngx_http_upstream 在出错时能够把错误暴露出来给第三方模块的 output body filter 以及 post_subrequest 回调。这个补丁便是针对几天前 Facebook 报告给我的那一类问题。很高兴现在的 Test::Nginx 已经可以很方便地回归这些出错情况了。  
微博位置: 无
发布时间: 2012-09-10 13:23
点赞数: 0   转发数: 0   评论数: 10
发布工具: 微博 weibo.com

1363:我的同事 JGC 写了一个 Perl 脚本可以把许多 ModSecurity 的规则配置编译为功能等价的 Lua 代码并运行在 ngx_lua 模块之上，从而为 Nginx 提供 ModSecurity 的防护功能。目前他已经得到了一个可以工作的原型实现，我正在着手对编译器的输出进行优化。我们最终希望它能支持动态规则增删和 JIT 加速。  
微博位置: 无
发布时间: 2012-09-10 00:53
点赞数: 0   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

1364:鉴于我的大部分时间已经花在了处理自己和别人的 bug，所以投入在测试和调试工具链上的时间和精力再多也不算过分  很多时候会觉得自己的工作与实验物理学家有许多相似之处，拥有先进的实验环境和检测工具对于工程师来说也是非常非常重要的 [呵呵]  
微博位置: 无
发布时间: 2012-09-10 00:46
点赞数: 1   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

1365:在最新的 ngx_lua 的 git 仓库中，我换用了一种改造过的更为灵活的 Nginx 子请求模型，以支持包括 Facebook BigPipe 这样的用法。标准的模型强制各个父子请求的输出顺序与它们的创建顺序严格一致，带来了许多不必要的复杂性和限制。引入简化后的新模型之后，ngx_lua 也得以移除了许多比较恶心的 hack.  
微博位置: 无
发布时间: 2012-09-09 01:59
点赞数: 0   转发数: 0   评论数: 3
发布工具: iPhone客户端

1366:我的 Amazon EC2 测试集群一直是以"高CPU中等“实例运行的。我在考虑升级到 CPU 性能更好的 ”高内存超大“实例，因为测试显示，测试集的运行速度最多有 40% 多的提升，而且涉及时序的用例和压力式内存泄漏检测模式也更不容易因为 CPU 资源不足而意外失败。不过后者在每小时价格上比前者贵了 1.73 倍。  
微博位置: 无
发布时间: 2012-09-07 12:02
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1367:今天我又为我的 Nginx SystemTap 工具箱添加了新工具 ngx-leaked-pools: http://t.cn/zWeFwZw 该工具可以实时捕捉到指定的 Nginx worker 进程中最频繁出现的 10 处没有销毁的 Nginx 内存池。下图是一次典型运行中，ngx-leaked-pools 工具内部生成的 SystemTap 脚本的源码。  原图 
微博位置: 无
发布时间: 2012-09-07 08:16
点赞数: 0   转发数: 3   评论数: 2
发布工具: 代码贴

1368:在家里无意往窗外看时，惊喜地发现天空中挂着两道彩虹！赶紧跑到阳台上拍下，可惜手机拍不出彩虹真实的美丽。。  原图 
微博位置: 无
发布时间: 2012-09-06 10:41
点赞数: 0   转发数: 2   评论数: 6
发布工具: iPhone客户端

1369:昨天 Facebook 的一位工程师向我报告了他们在 Facebook 生产环境中使用 ngx_srcache/ngx_memc 时遇到的一个问题。我利用 SystemTap 很快定位了该问题是由于 nginx 核心的 upstream 子系统在非缓冲模式下读取上游响应体的时，如果因超时或者断连接等原因发生数据截断，则子请求无法把错误通知给父请求。  
微博位置: 无
发布时间: 2012-09-06 08:54
点赞数: 0   转发数: 18   评论数: 6
发布工具: 微博 weibo.com

1370:Java 程序员是幸运的，DTrace 专门提供了 jstack() 原语可以输出 Java 语义下的调用堆栈： http://t.cn/zWez5RK DTrace 的贡献者利用 utrace helper 让 jstack() 也能理解 NodeJS/V8 的调用栈：http://t.cn/zOYpqdb 动态追踪工具对各种高级语言的支持是非常有价值的。后面我也搞搞 Lua 的，哈哈！  
微博位置: 无
发布时间: 2012-09-06 07:45
点赞数: 0   转发数: 21   评论数: 2
发布工具: 微博 weibo.com

1371:我越来越意识到把调试和监视代码从主代码中分离出来的重要性。让主 code base 保持精简、精晰和健壮同时又能方便进行各种当前可预见和不可预见的复杂调试、白盒回归以及生产实时分析。我越来越欣常这种分离所带来的巨大好处。SystemTap 和 DTrace 这样的工具让这种比较严格的分离真正成为现实！   
微博位置: 无
发布时间: 2012-09-06 05:54
点赞数: 1   转发数: 45   评论数: 7
发布工具: 微博 weibo.com

1372:特别期待 systemtap 2.0 提供的 dyninst 后端，届时无需 utrace/uprobe 等 kernel 新特性，单纯靠 ptrace 就可以玩转用户态追踪了，嘿嘿：http://t.cn/zWgfe0R  
微博位置: 无
发布时间: 2012-09-05 08:59
点赞数: 0   转发数: 32   评论数: 3
发布工具: 微博 weibo.com

1373:刚刚我的 PayPal 帐户收到了我的偶象唐凤（Audrey Tang）以她公司的名义给予 ngx_openresty 项目的一笔捐赠，真是开心～  
微博位置: 无
发布时间: 2012-09-05 06:57
点赞数: 1   转发数: 22   评论数: 18
发布工具: 微博 weibo.com

1374:在 twitter 上看到了这一篇东西：http://t.cn/zWrth5O 这个公司使用 ngx_lua 来加速他们的 Rails 应用。ngx_openresty 的一大特色便是它的兼容并包性。当然，如果想得到极致性能，经常还是需要比较纯粹的 ngx_lua 方案的   
微博位置: 无
发布时间: 2012-09-05 01:50
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1375:公寓提供的 study room 非常适合 hacking. 环境好，还有免费 wifi   原图 
微博位置: 无
发布时间: 2012-09-04 07:23
点赞数: 0   转发数: 0   评论数: 12
发布工具: iPhone客户端

1376:我的 Nginx SystemTap 工具箱再添新丁：ngx-active-reqs 脚本可以打印出任意指定的 nginx worker 进程中当前正在处理中的所有请求的详细信息，包括请求方法、URI、处理时间、每请求的内存池的统计信息等等。文档在这里：http://t.cn/zWdpzfv 下图中是该工具一次典型运行所生成的 systemtap 源码。  原图 
微博位置: 无
发布时间: 2012-09-04 06:53
点赞数: 0   转发数: 22   评论数: 11
发布工具: 代码贴

1377:Nginx 进程中有一个全局的内存池一般用于放置配置相关的数据以及生命期很长的数据，监视这个内存池的实时变化对于一些内存泄漏问题的诊断有着重要的意义。刚刚我编写了一个 ngx-cycle-pool 工具，可以实时打印出任意指定的 nginx worker 进程中这个全局内存池的详细信息：http://t.cn/zWdNNbJ  原图 
微博位置: 无
发布时间: 2012-09-04 06:14
点赞数: 0   转发数: 14   评论数: 0
发布工具: 代码贴

1378:这两日我又为 Nginx Systemtap Toolkit 添加了新工具 ngx-req-distr，可以实时统计下游请求和连接具体是如何分布在所有的 Nginx worker 进程当中（用户只需要在命令行上指定 master 进程的 pid 即可）。文档在这里：http://t.cn/zWruhfC 下图是该工具一次典型运行时动态生成的 systemtap 脚本源码。  原图 
微博位置: 无
发布时间: 2012-09-03 03:40
点赞数: 1   转发数: 5   评论数: 5
发布工具: 代码贴

1379:这两天在摆弄我的 systemtap 脚本的过程中遇到了 systemtap 在使用了 usymname() 的情况下，strace 在随后使用时会导致当前用户进程崩溃的 bug，已报告给 systemtap 官方：http://t.cn/zWB9v6j  
微博位置: 无
发布时间: 2012-09-01 06:44
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1380:这两天编写了一个很简单的 systemtap 脚本，可以打印出任何一个正在运行中的某个 nginx 进程中所有的共享内存区域的详细信息，包括其名称、所属模块、总容量以及空闲页的总大小，等等。无需对 nginx 核心打补丁，100% 动态追踪，嘿嘿。  原图 
微博位置: 无
发布时间: 2012-08-30 13:09
点赞数: 0   转发数: 23   评论数: 6
发布工具: 代码贴

1381:我刚在@微盘 发现了一个很不错的文件"c-cpp-dbg-prof-trace.pdf"，推荐你也来看看！ http://t.cn/zWnUopp  
微博位置: 无
发布时间: 2012-08-29 15:17
点赞数: 0   转发数: 7   评论数: 1
发布工具: 微盘

1382:我最近一直工作在 ngx_lua 模块的 thread 分支上，即开发全新的轻量级线程模型。我已经顺利完成了第一阶段的工作，即把原先每请求的 nginx 上下文状态分割为每个 Lua 协程一个 nginx 上下文状态。这个重构也修正了现有的用户级协程接口中和 normal 状态的协程相关的 bug. 耶！这些变更已合并到 master.  
微博位置: 无
发布时间: 2012-08-29 07:41
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1383:正在运行中的 nginx 进程就可以看成一个实时变化着的数据库，而 dtrace 和 systemtap 则是这个数据库的查询接口，D 脚本和 .stp 脚本便是查询语言。我和我的同事们打算基于 systemtap 编写一系列实时分析工具，以便让 ops 实时分析和诊断在线系统中的 nginx/openresty 的各种性能和功能上的问题。  
微博位置: 无
发布时间: 2012-08-28 12:57
点赞数: 1   转发数: 10   评论数: 8
发布工具: 微博 weibo.com

1384:刚回了一封用户邮件到 openresty-en 邮件列表中，演示了如何让 LuaSocket 自带的 socket.smtp 模块能够不加修改地运行在 ngx_lua 模块的 cosocket API 之上，从而享受到 100% I/O 多路复用：http://t.cn/zWmELym 当然，LuaSocket 的 smtp 库实现得实在不咋的，我后面会从零搞一个 lua-resty-smtp 库。  
微博位置: 无
发布时间: 2012-08-27 08:26
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1385:这两天我抽空应用了 Brian Akins 最近提交给我审核的一个补丁。这个补丁为 ngx_lua 模块的共享内存字典对象添加了一个新的 flush_expired 方法，可用于显式删除已过期的项目。正式的文档在这里：http://t.cn/zWmfOBE 目前我的补丁队列中仍然还有将近 10 个用户补丁尚未审核和应用，真是惭愧呀。  
微博位置: 无
发布时间: 2012-08-26 15:13
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1386:昨天我为 lua-resty-dns 库又添加了对 NS, TXT, 和 PTR 查询和记录类型的支持。下面我可以拿 dnsperf 项目包含的庞大的域名查询测试集来轰炸我的这个 DNS resolver 的纯 Lua 实现了。通过这组测试之后，我就放心了。这个库是一个开源的 CloudFlare 公司项目，我的老大 Lee 正眼巴巴地等着拿它上生产。  
微博位置: 无
发布时间: 2012-08-26 15:04
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1387:我的同事 Matthieu（来自法国）和 Ray（来自中东）都说 Google Translate 把 openresty 邮件列表里的中文技术贴翻译得都很棒。他们连 Spring Brother 都看懂了！  
微博位置: 无
发布时间: 2012-08-26 14:14
点赞数: 1   转发数: 9   评论数: 6
发布工具: 微博 weibo.com

1388:住在 Mission Bay 的一大好处是可以每天下班后和老婆一起去海边跑步   原图 
微博位置: 无
发布时间: 2012-08-25 10:12
点赞数: 0   转发数: 4   评论数: 10
发布工具: iPhone客户端

1389:刚刚公司负责人事的同事又让我自己在网上挑选喜欢的鼠标和键盘，我于是仍然挑了 Filco 的机械键盘：http://t.cn/zWni4Pk 她和我说了一句话让我有点感动：“just send me whatever you want...we want our engineers to have the equipment they need to be most effective!”  原图 
微博位置: 无
发布时间: 2012-08-25 06:05
点赞数: 1   转发数: 153   评论数: 35
发布工具: 微博 weibo.com

1390:CPAN 上的 perl-stacktrace 脚本可以打印出正在运行的 perl 程序在Perl语言级别上的调用栈，原理就是自动调用 gdb 绑定到指定的进程，然后以批处理方式自动执行自己的 gdb 命令。这与 pstack 工具的原理相同。我刚刚用它快速定位了最新版本的 Test::Nginx 测试台在 EC2 上无限热循环的bug，见下图。  原图 
微博位置: 无
发布时间: 2012-08-25 02:23
点赞数: 4   转发数: 3   评论数: 3
发布工具: 代码贴

1391:刚为 lua-resty-dns 库添加了新的方法 tcp_query：http://t.cn/zWEYcjp 通过它可以直接使用 TCP 协议和  DNS 名字服务器通信，不同于现有的 query 方法总是先用 UDP 协议请求，当消息发生截断时才换用 TCP. 下图中是该方法的一个使用示例。  原图 
微博位置: 无
发布时间: 2012-08-24 02:59
点赞数: 0   转发数: 1   评论数: 4
发布工具: 代码贴

1392:刚刚为我的 lua-resty-dns 库添加了在 UDP 响应消息发生数据截断的情况下自动使用 TCP 传输模式重新请求当前的 DNS 名字服务器的特性。对这个重试机制进行自动化测试是比较富于技巧的，我在用例中同时使用了  Test::Nginx 提供的内置 TCP 服务器和 UDP 服务器，见下图中的这个例子   原图 
微博位置: 无
发布时间: 2012-08-23 13:05
点赞数: 0   转发数: 0   评论数: 5
发布工具: 代码贴

1393:刚刚给我的 Test::Nginx 测试台添加了对内置 TCP 服务器的支持。这样我们就可以在测试用例中自由配置这个 TCP 服务器，以满足测试 TCP 客户端的需要。例如下图中的用例配置了一个返回自定义错误响应的 TCP 服务器以摸似极端情况下的 memcached 服务器，同时还可以精确回归服务器端实际收到的请求数据。  原图 
微博位置: 无
发布时间: 2012-08-23 12:49
点赞数: 0   转发数: 0   评论数: 2
发布工具: 代码贴

1394:我的 EC2 测试集群因为每天都会运行好几次，所以偶尔会捕捉到一些很有趣的但同时又很难复现的错误。仔细分析这些错误经常会掘出一些隐藏很深的 bug，真是开心。所以经常反复地以各种不同模式运行庞大的测试集也有点儿接近于“准生产环境”了。这是“测试集运行的次数越多便越有价值”的另一个论据！  
微博位置: 无
发布时间: 2012-08-23 10:34
点赞数: 2   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1395:刚刚发布了 ngx_openresty 新的开发版 1.2.3.1:http://openresty.org/#Download 包含了最近一周的所有 bug 修复，同时升级了 Nginx 核心到最新的稳定版 1.2.3. 同时首次包含了 ngx_lua 模块的用户级 coroutine API. 完整的变更列表在这里：http://t.cn/zWRsp9G 感谢所有的贡献者和用户！  
微博位置: 无
发布时间: 2012-08-23 07:04
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1396:刚刚给 lua-resty-dns 库添加了对 MX 类型记录的支持，见下图中的示例。补丁在这里：http://t.cn/zWRsvaH  原图 
微博位置: 无
发布时间: 2012-08-23 06:13
点赞数: 0   转发数: 0   评论数: 0
发布工具: 代码贴

1397:systemtap 为 dtrace 静态探针生成的头文件并不包含 provider .d 文件中的类型信息，所以 C 编译器无法对静态探针使用时传入的参数进行有效的类型检查，从而导致一些使用上的失误不能及时捕捉到。而标准的 dtrace 工具则没有这个问题，所以我现在总是会在 FreeBSD 9 上验证一下 [呵呵]  
微博位置: 无
发布时间: 2012-08-23 03:06
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1398:今天我又使用 systemtap 定位并修复了 ngx_lua 模块中的 TCP cosocket 的 send() 方法中的一个 bug. 具体追踪的过程已经详细地记录在这一封邮件中：http://t.cn/zWRI0pQ 多谢朱德江同学的报告！使用 systemtap 来分析 nginx 相关的问题已经越来越有趣了！  原图 
微博位置: 无
发布时间: 2012-08-22 09:30
点赞数: 0   转发数: 14   评论数: 1
发布工具: 代码贴

1399:刚刚发现，如果在 LD_PRELOAD 环境变量中重复指定两遍 mockeagain.so，则使用 systemtap 运行 nginx 时会抛 Segmentation Fault，而不使用 systemtap 则一点儿事没有。在 Fedora 17 和 Amazon Linux 上试过都一样，真是有意思。当然，只指定一遍是正确做法，并且和 systemtap 一起工作也不会有问题。  
微博位置: 无
发布时间: 2012-08-21 15:05
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1400:DWARF 4 新增的 .debug_types 段可以显著压缩程序的调试信息的大小，刚试了一下用 gcc 的 -fdebug-types-section 选项重新构造了一下 ngx_openresty，发现 nginx 可执行文件的大小从 9.2 MB 骤减到 3.8 MB 了，嘿嘿。更多相关信息可以参见这篇东西：http://t.cn/zW8rRQ2  
微博位置: 无
发布时间: 2012-08-21 14:48
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1401:刚刚用 systemtap 追踪和定位了 ngx_lua 中一个和下游写定时器相关的 bug，具体过程记录在了这一封邮件中：http://t.cn/zW8lMLY 当然，我实际使用的时候，在 stap 语言之上又加了一些自己的宏，比如 probe process("nginx").mark("timer-add") 这样笨重的东西就可以直接写成 M(timer-add) 的形式  
微博位置: 无
发布时间: 2012-08-21 06:56
点赞数: 0   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

1402:刚给 lua-resty-redis 添加了一个类方法 add_commands，可以动态创建对新的 redis 命令的支持。包括 Alchemy Database 在内的一些 redis 扩展服务在 redis 标准命令集合的基础上又新添了自己的命令，而现在 lua-resty-redis 也可以方便地动态添加对这些新命令的支持。要感谢 redis 统一的线路协议。  原图 
微博位置: 无
发布时间: 2012-08-20 06:18
点赞数: 0   转发数: 2   评论数: 0
发布工具: 代码贴

1403:刚刚给 lua-resty-redis 的文档添加了一个示例，用于演示如何使用 Redis 事务：http://t.cn/zWQDlzQ  原图 
微博位置: 无
发布时间: 2012-08-20 04:41
点赞数: 0   转发数: 3   评论数: 2
发布工具: 代码贴

1404:刚给 lua-resty-redis 库添加了新方法 read_reply，这样 Redis 标准的订阅和发布 API （http://t.cn/zWacsYW ）便可以完整支持了，见 read_reply 方法的文档中的示例：http://t.cn/zWQDX0V  原图 
微博位置: 无
发布时间: 2012-08-20 04:23
点赞数: 0   转发数: 0   评论数: 0
发布工具: 代码贴

1405:昨晚工作在 ngx_lua 的“thread”分支上的时候，发现了不少历史遗留的早已没有用途的代码和数据字段，于是顺手在 master 分支中清除了一下： http://t.cn/zWQDPiK 与 http://t.cn/zWQDPi9 实现大功能的一大好处就是可以借此机会好好 review 一下平时都不怎么碰也不怎么敢碰的核心代码   
微博位置: 无
发布时间: 2012-08-20 03:46
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1406:这周我把大部分时间都花在对 ngx_lua 模块新的用户级 coroutine API 进行测试和完善上，希望能尽快进入可以 release 的状态。这周末我打算发布 ngx_openresty 的一个新的开发版，1.2.3.1，以包含这个新的 ngx_lua 版本 [呵呵]  
微博位置: 无
发布时间: 2012-08-18 14:05
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1407:发现 FreeBSD 9 上的 dtrace 在追踪用户态代码时也有不少问题，而 Mac OS X 上的 dtrace 又不支持 translator 这样的新特性。现在看来还是 Solaris 家族的操作系统上面的 dtrace 最靠谱呀。。。唉。。。  
微博位置: 无
发布时间: 2012-08-18 09:27
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1408:Brian Akins 开始搞 lua-resty-beanstalkd 库了，哈哈：http://t.cn/zWHREUx 这个东西原本在我的 TODO 列表里的，现在终于有人抢在我前面搞啦～  
微博位置: 无
发布时间: 2012-08-18 09:23
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1409:从前和@罗翅膀716 还在雅虎一起共事的时候，他就天天告诫我“别整天尽搞些不靠谱的东西”，至今我仍以此自勉 :)  
微博位置: 无
发布时间: 2012-08-17 07:32
点赞数: 2   转发数: 2   评论数: 17
发布工具: 微博 weibo.com

1410:Test::Nginx 测试台默认会按随机顺序运行测试文件中的用例。刚才我的 EC2 测试集群生成的测试报告显示，ngx_lua 的一个测试文件以某种特定顺序运行时，ngx_drizzle 模块的连接池有 socket leak 的错误。于是我按照测试台记录的那次运行的用例顺序很方便地在我本机复现了错误，并修正了这个问题，耶！  
微博位置: 无
发布时间: 2012-08-17 07:15
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1411:Brendan Gregg 下个月搞了一个 dtrace 培训： http://t.cn/zWTC7JZ 就在旧金山，而且离我的住处非常近，步行十几分钟的距离。可惜费用有些高，而且是工作日。。。  
微博位置: 无
发布时间: 2012-08-16 12:40
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1412:我所向往的系统和应用优化的境界：http://t.cn/zWT9WAD dtrace 这样的工具只有在足够理解系统内部工作原理的人手中才能发挥真正的神力啊！  
微博位置: 无
发布时间: 2012-08-16 12:28
点赞数: 3   转发数: 38   评论数: 5
发布工具: 微博 weibo.com

1413:我刚刚融合了 ngx_lua 模块的 "coroutine" 分支到 "master" 分支，标准 Lua 的 coroutine API 从此终于可以在 ngx_lua 的上下文中直接使用了，见相关的文档：http://t.cn/zWTMHBi 下一步则是籍此在全新的 "thread" 分支上开发轻量级线程 API 了！ @chaoslawful @淘宝静龙  
微博位置: 无
发布时间: 2012-08-16 06:50
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1414:刚刚发布了 ngx_openresty 稳定版 1.2.1.14:http://openresty.org/#Download 修复了 dtrace 静态探针在 Solaris, Mac OS X 和 FreeBSD 上的兼容性。完整的更动列表在这里：http://t.cn/zWAiihq 发现已经有刚好两个月没有发布新的稳定版了，嘿嘿。  
微博位置: 无
发布时间: 2012-08-15 13:29
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1415:同时使用 dtrace 和 systemtap 一段时间后最直观的感受是 dtrace 命令的启动速度实在是太快了！即使是在虚机里面！无论是 FreeBSD 9 还是 Solaris 11！systemtap 启动时经常是秒级，page cache 不命中时甚至是十秒级。。。即使是在我的 ThinkPad W530 上。。。  
微博位置: 无
发布时间: 2012-08-15 06:35
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1416:FreeBSD 9 在 VirutalBox 上的支持还是挺不错的，只可惜在 Amazon EC2 上目前还得用 Windows 实例类型来跑：http://t.cn/hbs6Fp 成本相对于 Linux 实例类型稍微有点儿高啊。。。不过我还是打算把 FreeBSD 先加进我的 EC2 测试集群的回归列表里面来 :)  
微博位置: 无
发布时间: 2012-08-15 02:48
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1417:前两天把 linux kernel 从 3.4.x 升级到了 3.5.1，但没有重新编译 VirtualBox 的 kernel module，结果从 host OS 通过 host-only 接口登录到 guest OS 需要好几秒钟的时间。今天早上重新编译了一下 VirtualBox 的 kernel module，问题立马消失，瞬间就可以 ssh 上去了，耶～  
微博位置: 无
发布时间: 2012-08-15 02:40
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1418:由于现在我的 EC2 测试集群的自动化程度已经很高了，同时公司已经开始承担这一块的费用，所以下面我打算把这个测试集群跑得更狠一些，以便我同时基于 nginx 核心最新的开发版和最新的稳定版发布相应的 ngx_openresty 开发版。当然 ngx_openresty 稳定版发布只会基于 nginx 核心的稳定版 :)  
微博位置: 无
发布时间: 2012-08-14 07:16
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1419:漫长的一周。。。每天午睡很重要啊~  原图 
微博位置: 无
发布时间: 2012-08-14 00:51
点赞数: 0   转发数: 6   评论数: 11
发布工具: iPhone客户端

1420:刚刚发布了 ngx_openresty 新的开发版 1.2.1.13: http://t.cn/aCdPzo 主要包含了过去一周累积的修复。按计划，下一个发布将是新的稳定版 1.2.1.14 了，然后我们就可以把软件包中 nginx 核心升级到最新的 1.2.3 了，还将把 ngx_lua 的 coroutine 分支合并到 master 了。欢迎大家多多测试这个开发版 :)  
微博位置: 无
发布时间: 2012-08-13 07:02
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1421:我已经把我的 Amazon EC2 测试集群完整迁移到了Jenn 用公司信用卡帮我新申请的 AWS 帐户上。EC2 设置自己的 AMI 对另一个帐户可见的功能真是方便~所谓迁移，不过是修改一下 AMI 权限已及替换一下证书和私钥而已，嘿嘿~  
微博位置: 无
发布时间: 2012-08-13 05:12
点赞数: 0   转发数: 1   评论数: 0
发布工具: iPhone客户端

1422:这两日应用了 Brian Akins 的一个补丁，为 ngx_lua 模块添加了 lua_socket_log_errors 配置指令，可以用于禁止自动为 cosocket 错误记日志的行为。如果用户已经在 Lua 代码中为所有 cosocket 操作进行了完整的错误处理和日志记录，确实就应该禁用自动错误日志了。  
微博位置: 无
发布时间: 2012-08-13 03:55
点赞数: 0   转发数: 0   评论数: 0
发布工具: iPhone客户端

1423:Matthieu Tourne 正在给 mockeagain 加上黑名单功能，即列在黑名单中的 C 函数发起的读写操作将不进行数据切片和 EAGAIN 错误的摸拟。这个功能可以基于 glibc 的 backtrace API 来搞：http://t.cn/zWlTw5H 我们需要此功能来对 Nginx 的 SPDY 补丁的读写状态机进行深入的测试，但又需绕过 SSL 握手。  
微博位置: 无
发布时间: 2012-08-11 11:47
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1424:在 @chaoslawful 老师的演示下，我才知道 callgrind 还可以给出各个函数的代价（通过机器指令的实际读取数目来度量）。这个指标实在太有用，可以准确量化微观优化的效果，同时也可以用于监视性能衰退。我打算基于 callgrind 给 Test::Nginx 测试台添加性能衰退测试模式，并让 EC2 测试集群定期回归。  
微博位置: 无
发布时间: 2012-08-11 10:51
点赞数: 1   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1425:好吧，我终于上公司网站的 People 页面了：http://t.cn/zWllplc 嘿嘿。感谢 Kristin 为我撰写的简介 :)  
微博位置: 无
发布时间: 2012-08-11 10:20
点赞数: 0   转发数: 9   评论数: 13
发布工具: 微博 weibo.com

1426:dtrace/systemtap 本质上其实又提供了一个用程序来操纵程序的例子。。。把运行中的程序当作数据来实时地操纵和处理总是非常有趣的，同时也是非常有价值的～  
微博位置: 无
发布时间: 2012-08-10 07:17
点赞数: 1   转发数: 20   评论数: 4
发布工具: 微博 weibo.com

1427:在 Amazon.com 上买二手书实在是划算，我最近买的一本计算机类的经典之作本身才不过 1.22 美元，运费还花了 3.99 美元呢。。。同时，Kindle 电子书版本也会比新书的原价便宜不少。我发现自己现在越来越依赖 Amazon 了。。。  
微博位置: 无
发布时间: 2012-08-10 01:43
点赞数: 0   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

1428:刚给 ngx_lua 模块的 coroutine 分支添加了两个新的 dtrace 静态探针。下面这个 Test::Nginx 驱动的测试用例演示了如何利用 systemtap 追踪用户 Lua 协程的执行过程。其中 M() 和 F() 分别是 probe process("nginx").mark() 和 probe process("nginx").function() 语句的缩写，会自动被测试台展开。  原图 
微博位置: 无
发布时间: 2012-08-09 08:59
点赞数: 1   转发数: 1   评论数: 4
发布工具: 代码贴

1429:ngx_openresty 最近成功地帮助一家国外的网络服务显著地提升了整体性能：http://t.cn/zWWJtl4 这家创业公司的服务先前是用 PHP 编写的，在 7 月份整体迁移到了 ngx_openresty/Lua. 该文章的作者把链接发给我时对我说：“ALL THANKS TO OPENRESTY”，真是开心～。提升率和我当年改造量子统计时差不多。  
微博位置: 无
发布时间: 2012-08-09 05:34
点赞数: 1   转发数: 22   评论数: 11
发布工具: 微博 weibo.com

1430:Yahook 同学在他的生产环境中发现 lua-resty-memcached 库比原先通过子请求方式访问 ngx_memc 模块可以明显节约更多的内存。根据 LuaJIT GC 的统计结果，老方案比新方案多占用 2 至 3 倍的内存空间。  
微博位置: 无
发布时间: 2012-08-09 02:19
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1431:这几日我一直在检查和调整 @chaoslawful 和@淘宝静龙 开发的 ngx_lua coroutine 分支。我们拥有用户级 coroutine API 之后的一大好处是对使用到 coroutine API 的第三方 Lua 代码也可以保持兼容，比如 Daniele Alessandri 的 lua-redis 库的 pubsub 接口就使用了 coroutine 作迭代器，如下图所示。  原图 
微博位置: 无
发布时间: 2012-08-08 09:49
点赞数: 0   转发数: 3   评论数: 1
发布工具: 代码贴

1432:ngx_openresty 新的开发版 1.2.1.11 刚刚发布了：http://t.cn/aCdPzo 亮点是新的 lua-resty-dns 库。完整的更动列表在这里：http://t.cn/zWAiihq 感谢所有的贡献者和用户！  
微博位置: 无
发布时间: 2012-08-07 02:57
点赞数: 0   转发数: 11   评论数: 4
发布工具: 微博 weibo.com

1433:刚刚把 lua-resty-dns 加入了我的 Amazon EC2 测试集群的回归名单。它在 Linux x86_64 和 i386 上的测试结果已经出现在最新的报告里面了，嘿嘿：http://t.cn/zOjYAFN 这个库将包含在下一个 ngx_openresty 开发版 1.2.1.11 中 [呵呵]  
微博位置: 无
发布时间: 2012-08-06 14:27
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1434:由于公司的 Bag API 需要类似 Facebook BigPipe 的输出模型，于是对 ngx_lua 模块的 ngx.thread API 的需求变得比较迫切（见下图中的一个用法示例）。下周我在检查并融合了 ngx_lua 的 git coroutine 分支之后，就将开始着手 git thread 分支的开发。希望这个月能得到稳定的 ngx.thread API 的实现。  原图 
微博位置: 无
发布时间: 2012-08-06 02:43
点赞数: 1   转发数: 13   评论数: 5
发布工具: 代码贴

1435:由于现在的 openresty 邮件组已经是中英文邮件的大混杂了，所以我刚刚应 Nginx User 同学的建议，另建了一个面向英语用户的 openresty-en 邮件列表：http://t.cn/zW04iQg 以免把只会英语的用户吓跑。OpenResty 开源社区的建设也是我的老大 Lee 同学给我布置的主要工作目标之一，嘿嘿。  
微博位置: 无
发布时间: 2012-08-05 07:28
点赞数: 0   转发数: 4   评论数: 0
发布工具: 微博 weibo.com

1436:在 JoyentCloud 上我第一次使用就遇上了机器状态无法及时更新的 bug（即开机了却显示机器正在准备，而关机了却显示正在运行）. 我当时仅开机了两三个小时，月底 Joyent 帐单却收我十小时的钱。我向 Joyent 技术支持投诉，很快就退了我七个小时的钱，大约 0.75 美元。虽然钱不多，但这也是诚信问题啊！  
微博位置: 无
发布时间: 2012-08-04 13:38
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1437:Test::Nginx 测试台内置的 UDP 服务器让测试 UDP 客户端的超时重传行为变得非常容易。于是下图中的这个测试用例刚才立即就捕捉到了 ngx_lua 模块的 UDP cosocket API 在一次读操作超时之后后续的读写都不能正确进行的 bug. 已提交了一个补丁修复了此问题：http://t.cn/zWp35XX  原图 
微博位置: 无
发布时间: 2012-08-04 13:20
点赞数: 0   转发数: 9   评论数: 2
发布工具: 代码贴

1438:我来自法国的同事 Matthieu 最近买了辆摩托车，最近一周他每天晚上都拆那辆车，对照机械部件的手册检查各部件是否符合说明书中的规格，结果他发现他当时花钱请机师解决的不少问题其实都没有很好地处理。唉。。。工程师就是工程师呀。。。  
微博位置: 无
发布时间: 2012-08-04 12:21
点赞数: 3   转发数: 1   评论数: 11
发布工具: 微博 weibo.com

1439:Perl 标准的 pack 和 unpack 函数（http://t.cn/zWpTlYu ）在处理二进制数据的时候非常好使，我希望 Lua 里面也有这样的神器，而且最好能让 LuaJIT 编译器直接支持把 pack/unpack 调用编译到高度优化后的机器码 :D  
微博位置: 无
发布时间: 2012-08-04 06:30
点赞数: 0   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

1440:Test::Base 库支持强大的“过滤器”机制，所以作为其子类，Test::Nginx 自然也支持。在 lua-resty-dns 库的测试集中，我用 100 行 Perl 代码实现了一个过滤器可以生成指定的任意合法的 DNS 响应消息，这样就可以让 Test::Nginx 的内置 UDP 服务器一下变身为 DNS 测试服务器了。请见下图中的示例～  原图 
微博位置: 无
发布时间: 2012-08-04 06:18
点赞数: 0   转发数: 8   评论数: 7
发布工具: 代码贴

1441:这两天给 Test::Nginx 测试台添加了内置的可定制的 UDP 服务器，是纯 Perl 实现的。现在我们可以按测试需要生成任意的 UDP 响应了！比如下图中的示例。后面我将再添加对内置 TCP 服务器的支持，这样 TCP 协议的客户端驱动的回归测试也会变得更容易，比如测试非法的 memcached 响应数据   原图 
微博位置: 无
发布时间: 2012-08-04 06:12
点赞数: 0   转发数: 1   评论数: 1
发布工具: 代码贴

1442:今天提交了 lua-resty-dns 库的第一个原型实现：http://t.cn/zWNRlgC 它基于 ngx_lua 模块非阻塞的 UDP cosocket API 实现，现已支持 A 记录、CNAME 记录以及 AAAA 记录的查询。不过接口还很粗糙，也还没加 UDP 包重传机制和多 nameserver failover，也没有包截断时的 TCP 重试。后面几天再慢慢加 :)  
微博位置: 无
发布时间: 2012-08-02 14:27
点赞数: 0   转发数: 10   评论数: 3
发布工具: 微博 weibo.com

1443:刚刚发布了 ngx_openresty 1.2.1.9: http://t.cn/aCdPzo 包含了过去两周多所有的 bug 修复和新特性。最大的亮点当属 dtrace 用户级静态探针和 systemtap 的支持了。完整的更动列表在这里：http://t.cn/zWAiihq  
微博位置: 无
发布时间: 2012-07-31 14:33
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1444:这几日我融合了 Matthieu Tourne 提交给我的一系列补丁中最后一个尚未融合的补丁，为 ngx_lua 模块添加了新的 Lua 函数 ngx.req.init_body, ngx.req.append_body, 和 ngx.req.finish_body. 官方文档是 http://t.cn/zWCAwep 它们配合现有的 ngx.req.socket 函数，可以实现纯 Lua 的 nginx 输入过滤器！  
微博位置: 无
发布时间: 2012-07-30 14:00
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1445:前些日子我融合了 James Hurst 提供的补丁，为 ngx_lua 模块添加了新的 Lua API, ngx.get_phase(): http://t.cn/zWCZiqO 通过它可以获取当前 Lua 代码运行的阶段，比如是在 content_by_lua* 阶段，还是在 init_by_lua* 阶段。  
微博位置: 无
发布时间: 2012-07-30 13:10
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1446:今天我对 Test::Nginx 测试台的 HUP reload 测试模式进行了优化，改进了检测 nginx 重新加载配置完成的方法（原先只是一刀切的延时等待），现在此模式下的测试集运行速度明显提高，并且更加稳定可靠。比如 ngx_lua 模块的测试集现在在 EC2 的高 CPU 中等实例上以此模式运行，整体速度提升 100％   
微博位置: 无
发布时间: 2012-07-30 12:54
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1447:在 EC2 实例上操作太过流畅了，以至于我刚刚在上面写了很多代码之后才突然意识到自己并不是在本机上工作。。。汗啊。。。  
微博位置: 无
发布时间: 2012-07-30 03:20
点赞数: 0   转发数: 6   评论数: 8
发布工具: 微博 weibo.com

1448:刚刚折腾了一下我的 EC2 测试集群，使其能够正确运行那些新加入的使用到了 systemtap 的测试用例。同时我对 Test::Nginx 测试台进行了一些优化，使得它在等待 nginx 服务器启动的时候能够更聪明一些。另外，通过恰当地配置 TEST_NGINX_SLEEP 环境变量让测试集可以运行地更快。  
微博位置: 无
发布时间: 2012-07-29 13:37
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1449:这两日原本想把我的 EC2 测试集群从 Amazon Linux AMI 迁移到 Fedora 17 AMI（http://t.cn/zW96q22 ），但结果发现 systemtap 用不了，默认的配置下，systemtap 启动一堆错。从 yum 升级了所有东西，包括 kernel 之后，启动没错误了，但只要使用了 process().function() 探针，用户进程就会段错误。  
微博位置: 无
发布时间: 2012-07-29 08:48
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1450:前些日子在 Joyent Cloud （http://t.cn/hHUbF ）上试用了一下，遇到了其 web 控制台界面上的各种问题，好在他们的技术支持回复得还挺快，但还是有些失望。另外，最低配实例的价格也确实比 EC2 贵好多，虽然 Joyent 声称其磁盘性能比 EC2 同类型的机器高几倍。  
微博位置: 无
发布时间: 2012-07-29 08:43
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1451:在我的 ThinkPad W530 (Core i7-3920XM CPU, 20GB 内存）上，清空 page cache 时，systemtap 如果有用到内核的调试符号，则启动需要 4 到 6 秒；而 page cache 命中时，则需要 1.3 秒。而如果只用到 nginx 应用程序的调试符号，则 page cache 被清空后需要 1.2 秒；而 page cache 命中时需要 0.14 秒。  
微博位置: 无
发布时间: 2012-07-28 12:41
点赞数: 0   转发数: 3   评论数: 9
发布工具: 微博 weibo.com

1452:刚刚给 ngx_lua 模块提交了第一个使用了 systemtap 作回归的真实的测试用例：http://t.cn/zWKmWsE 其中 --- stap 段指定了 systemtap 输入脚本，--- stap_out_like 段则指定了期望的输出（通过 Perl 正则进行模糊匹配）。现在白盒回归终于不再依赖于手动向被测代码中添加调试日志了，耶！  原图 
微博位置: 无
发布时间: 2012-07-28 05:55
点赞数: 0   转发数: 4   评论数: 0
发布工具: 代码贴

1453:systemtap 这两年的进步还是很大的，比如现在从 kernel space 中的探针处理程序里面也能打印出完整的用户态 backtrace 了。刚刚在我的 nginx 测试用例里小试了一下，怎一个爽字了得！可以在 linux 上玩 dtrace 社区搞的 flame graph 了，哈哈：http://t.cn/zWKEElM  原图 
微博位置: 无
发布时间: 2012-07-28 03:19
点赞数: 0   转发数: 9   评论数: 4
发布工具: 代码贴

1454:systemtap 貌似现在不能对用户应用程序的函数返回点进行追踪了，即 process().function().return 探针会报“process return probes not available with inode-based uprobes”的错误. systemtap 邮件组里的一哥们让我等未来的 linux 内核 3.7 或者更遥远的版本：http://t.cn/zWKEtHM  
微博位置: 无
发布时间: 2012-07-28 02:41
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1455:刚给 Test::Nginx 测试台添加了对 systemtap 的支持。补丁（含相关文档）在这里：http://t.cn/zWS3e6W 现在我们可以在测试用例里直接指定自己的 stap 脚本片段，并可以同时给出期望的 stap 输出结果。见下面图中的示例。唯一的不足是 stap 编译和加载脚本的时间即使在我的 W530 上也有些慢。  原图 
微博位置: 无
发布时间: 2012-07-25 12:47
点赞数: 0   转发数: 6   评论数: 4
发布工具: 代码贴

1456:这几日我一直工作在 nginx-dtrace 分支上：http://t.cn/zWSlC0d 已经在 nginx 核心中添加了子请求相关的 8 个静态探针。这个分支上的 dtrace 静态探针支持将以 nginx 补丁的形式发布，同时会默认包含在 ngx_openresty 软件包中。我正在集成 systemtap 调试功能到 Test::Nginx 测试台。好戏在后头！  原图 
微博位置: 无
发布时间: 2012-07-25 05:05
点赞数: 0   转发数: 2   评论数: 2
发布工具: 代码贴

1457:不得不说，systemtap 的用户空间 probing 在复杂数据结构参数的处理上，比 dtrace 方便多了。它的 @cast 运算符可以直接从应用程序导入调试符号，自动得到 struct 等类型信息，不必费劲地在脚本一侧自己重复一遍各个 struct 的定义，还要自己处理 32 位和 64 位的区别。  
微博位置: 无
发布时间: 2012-07-23 12:08
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1458:Fedora 17 太给力了！默认安装的 linux kernel 3.4.6 就已经包含了 utrace 补丁，systemtap 的用户态追踪功能直接能用，真是方便！我在 Solaris 11 上搞的 nginx-dtrace 也可以直接在 fedora 17 上 ./configure --with-dtrace-probes && make 通过，systemtap 的 dtrace 兼容工具真是好使～  
微博位置: 无
发布时间: 2012-07-22 15:16
点赞数: 0   转发数: 15   评论数: 8
发布工具: 微博 weibo.com

1459:原本想在我的 ThinkPad W530 上装 Ubuntu 12.04 的，结果遇到很多问题，最后好不容易装上了，界面很让人失望，并且经常会死屏。。。跟三年前我在 T400 上装 Ubuntu 遇到的问题一样。换成 Fedora 之后就一切正常了，而且发现 yum 源有现成的五笔 98 输入法的 scim 包，爽死了！连@珣新 的“珣”字都有。  
微博位置: 无
发布时间: 2012-07-21 05:01
点赞数: 0   转发数: 6   评论数: 13
发布工具: 微博 weibo.com

1460:David Pacheco 写了一个 mod_usdt 模块用于演示如何在 C 程序中定义自己的 dtrace USDT 探针，可惜依赖 Apache，还是有些不太方便。我于是又写了一个无依赖的 udst-sample 示例，放在了 github 上面：http://t.cn/zWJYQrd 目前仅在 Solaris 11 Express i386 上简单测试过，回头再在其他系统上试试。  
微博位置: 无
发布时间: 2012-07-18 08:30
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1461:现在我已经疯狂迷恋上了以 dtrace 为核心的开发、调试与测试了。周末大量网罗和阅读 dtrace 社区的资料，竟把眼睛都给看肿了，嘿嘿。我已经迫不及待想告别古老的调试日志的输出和过滤方式了 ;)  
微博位置: 无
发布时间: 2012-07-17 05:52
点赞数: 3   转发数: 57   评论数: 19
发布工具: 微博 weibo.com

1462:发现在我的 Mac OS X 10.6 上面，dtrace D 脚本里的 size_t 类型默认是 4 个字节，而 gcc 却默认 size_t 为 8 个字节，于是会导致问题。不得不在我的 D 脚本的开头加上一句 #define size_t uint64_t 了事。。。  
微博位置: 无
发布时间: 2012-07-16 03:11
点赞数: 0   转发数: 1   评论数: 9
发布工具: 微博 weibo.com

1463:ngx_lua 模块的 0.5.x 系列主要是开发 cosocket API，目前已经比较完整了（眼下最重要的遗漏是 SSL cosocket的支持）。即将到来的 0.6.x 将以 Lua 用户级 coroutine API为中心。@chaoslawful 和@淘宝静龙 已经基本完成了在 coroutine 分支上的开发工作，下周我将着手该分支的 review 和融合工作   
微博位置: 无
发布时间: 2012-07-15 10:24
点赞数: 1   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1464:刚刚发布了 ngx_openresty 开发版 1.2.1.7：http://t.cn/aCdPzo 包含了过去 10 天的众多更动，最大的亮点是 ngx_lua 模块的 UDP/datagram unix domain cosocket API. 完整的更动列表在 http://t.cn/zWAiihq 没想到短短时间搞了这么多！感谢所有的贡献者和用户的大力推动！我已经感觉有些跟不上了。  
微博位置: 无
发布时间: 2012-07-15 09:32
点赞数: 0   转发数: 7   评论数: 6
发布工具: 微博 weibo.com

1465:应@Lance 的需求，我昨儿给 lua-resty-mysql 库的 connect 方法添加了 compact_arrays 选项，当置为真值时，query() 和 read_result() 方法返回的结果集将是更为紧凑的“数组的数组”的形式，不同于默认情况下的“哈希的数组”结构。补丁在这里：http://t.cn/zWMZfID  
微博位置: 无
发布时间: 2012-07-14 01:23
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1466:我已经开始工作在 lua-resty-dns 项目上，它将基于 ngx_lua 的 UDP 和 TCP cosocket API 从零实现一个 DNS 解析器。其 resty.dns.resolver 类将拥有类似 PHP 的 Net_DNS_Resolver 的 API :)  
微博位置: 无
发布时间: 2012-07-13 08:01
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

1467:身边已经有两位朋友向我表达过他们对旧金山当地的“国际化”的工作环境的热爱，一位是华裔的（但从小在德国长大），另一位是印度裔的。在一间办公室里，各个不同国家、不同民族之间思维方式的碰撞确实是最有意思的了，呵呵。  
微博位置: 无
发布时间: 2012-07-13 07:24
点赞数: 0   转发数: 1   评论数: 7
发布工具: 微博 weibo.com

1468:这几日我改写并融合了 Brian Akins 打给 ngx_lua 模块的一个补丁，为 tcpsock:connect() 方法添加了一个 pool 选项，允许用户自己指定连接池的名字（从而自己决定连接池的划分粒度）。默认生成的连接池的名字模版是 <host>:<port> 或者 <path>. 更多细节可以参见最新的官方文档：http://t.cn/zWfpgVt  
微博位置: 无
发布时间: 2012-07-12 04:54
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1469:ngx_lua 模块的 udp-socket 分支已经合并到了 master，这意味着新的 UDP/datagram cosocket API 将会包含在下一个 ngx_lua 发布中。相应的官方文档在这里：http://t.cn/zWfprQQ  
微博位置: 无
发布时间: 2012-07-12 04:50
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1470:刚刚让 ngx_lua 模块的 UDP cosocket API 也能通过 unix domain socket 进行通信了。Nginx 核心中提供的 ngx_udp_connect 函数居然在创建 socket 时写死了 AF_INET，于是我只好自己实现一个 ngx_http_lua_udp_connect 函数了，呵呵。已提交的补丁在这里：http://t.cn/zWV2UqV  
微博位置: 无
发布时间: 2012-07-10 08:04
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1471:我开始使用 ngx_lua 模块的 ngx.location.capture_multi() 这个接口辅助来测试并发访问下的一些行为细节，这样我们暂时不用在 Test::Nginx 测试台的级别上添加并发访问的功能，比如下面这个测试用例就利用了这种技巧来测试并发请求同时使用共享的 UDP cosocket 对象时的情况：http://t.cn/zWcMDDE  
微博位置: 无
发布时间: 2012-07-09 04:08
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1472:我刚刚给 Test::Nginx::Socket 测试台添加了对 --- log_level 段的支持，这样每个用例可以指定自己的错误日志级别，比如"--- log_level: debug". 补丁在这里：http://t.cn/zWcMgMh  
微博位置: 无
发布时间: 2012-07-09 04:02
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1473:在开发 ngx_lua 模块的 UDP cosocket API 的过程中，我同时发现并修复了已有的 TCP cosocket 实现中的一些小问题。其实只要经常看一看、测一测自己从前的代码，就经常会有意外的发现 [呵呵]  
微博位置: 无
发布时间: 2012-07-09 02:56
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1474:刚刚在我的ThinkPad T400上面用ab测试了一下ngx_lua UDP cosocket 请求memcached的例子。以50并发请求单个worker进程可达12K+q/s；以10K并发请求时仍有9.2K+q/s. 相比LuaSocket阻塞方式，在低并发下二者吞吐量差不多；随着并发的不断提高，阻塞效应越发明显。从1K并发开始，LuaSocket吞吐量急转直下。  原图 
微博位置: 无
发布时间: 2012-07-07 13:44
点赞数: 0   转发数: 1   评论数: 2
发布工具: 代码贴

1475:LuaSocket 库的 udp_socket:send() 操作总是非阻塞的，其 socket fd 被设置了 O_NONBLOCK 标记，同时 send() 方法内部没有 poll 这样的调用，所以可以在 ngx_lua 的任何上下文中使用，包括 log_by_lua* 配置指令的上下文。udp_socket 对象的创建可以放在 init_by_lua* 上下文中，那个上下文不怕阻塞。  
微博位置: 无
发布时间: 2012-07-07 13:03
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1476:刚刚完成了 ngx_lua 模块的 UDP cosocket API 的第一个原型实现，已提交到了官方 git 仓库的 udp-socket 分支：http://t.cn/zWtz8Cw 第一个测试用例已经通过了：http://t.cn/zWtz8CA 该测试用例直接以非阻塞方式和 memcached 的 UDP 接口通信。  
微博位置: 无
发布时间: 2012-07-07 08:06
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1477:这两天根据 Matthieu Tourne 的报告，我修复了 ngx_lua 模块的 ngx.req.clear_header() 函数中的两个 bug，补丁在这里：http://t.cn/zWtPW2r 同时我刚把这个补丁也移植到了 ngx_headers_more 模块上；这两个模块在请求头处理部分的代码几乎是完全一样的 :)  
微博位置: 无
发布时间: 2012-07-07 03:08
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1478:刚刚应 Matthieu Tourne 的请求，为 ngx_lua 模块添加了 ngx.req.get_method() 和 ngx.req.set_method(method_id) 这两个方法，可分别用于获取当前（子）请求的方法名和修改当前（子）请求的方法。注意，前者返回字符串，而后者目前只接受 ngx.HTTP_POST 这样的常数。补丁在这里：http://t.cn/zW5bmm4  
微博位置: 无
发布时间: 2012-07-06 05:54
点赞数: 0   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

1479:我得尽快把 ngx_openresty 的 dtrace静态探针支持给提上工作日程。我打算从我自己的 Nginx C模块开始，然后是 Nginx核心以及 Lua/LuaJIT（当然，Lua 这一块还有现成的 lua-usdt供参考）. 当然，后者会引入同步官方新版本的额外工作量，不过应当是完全值得的 :) 我打算把这个排入我下周的公司工作计划。  
微博位置: 无
发布时间: 2012-07-05 23:04
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1480:刚刚把 ngx_openresty 中包含的标准 Lua 5.1.4 解释器升级到了 5.1.5. 同时按照 Lua 官方的（强烈）建议，禁用了标准 Lua 解释器对 Lua 5.0 的兼容模式。当然，除非特殊情况，我还是建议大家使用 ngx_openresty 中包含的 LuaJIT 2.0 :)  
微博位置: 无
发布时间: 2012-07-05 11:00
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1481:Matthieu 和我讨论后，打算把 nginx 核心中的 http cache 暴露给 Lua，这样就可以直接使用 Lua 来操纵 http cache 以改变它默认的行为。这样 ngx_cache_purge 这样的模块都有望用 Lua 来实现了。这个功能将以独立的 nginx C 模块的形式提供，它将利用 ngx_lua 模块提供的 C 接口注册它自己的 Lua API.  
微博位置: 无
发布时间: 2012-07-05 10:27
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

1482:刚刚发布了 ngx_openresty 开发版 1.2.1.5: http://t.cn/aCdPzo 包含了过去一周多以来的所有更动，包括 ngx_lua 的 init_by_lua* 和 ngx_srcache 的 $srcache_fetch_status 和 $srcache_store_status 变量的支持。完整的更动列表在这里：http://t.cn/zWAiihq  
微博位置: 无
发布时间: 2012-07-05 08:02
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1483:今天修复了 ngx_lua 模块中因添加 init_by_lua* 支持而引入的衰退。我的 Amazon EC2 测试集群又一次立功了；测试集只有在“HUP reload + valgrind/memcheck”这个测试模式下才会有对应的用例失败，而手工运行这些特殊而缓慢的测试模式是完全无法想象的 :)  
微博位置: 无
发布时间: 2012-07-04 13:11
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1484:现在在工作过程中访问 GitHub, Amazon Web Services, Google,以及@定球呀球 在日本的 linode 主机，相比国内都明显快了许多，真是提高工作效率呀～行云流水般的感觉 [呵呵]  
微博位置: 无
发布时间: 2012-07-03 06:34
点赞数: 0   转发数: 8   评论数: 13
发布工具: 微博 weibo.com

1485:刚在 Evgeniy Dolzhenko 的提议下，为 lua-resty-redis 库添加了对 redis 2.6 的 script 命令的支持。这样 Lua 代码就可以同时运行在 nginx 和 redis 后端中了！不过最新的 redis 2.6.0rc5 在我的 Linux x86_64 上一启动就会崩溃，所以我暂时无法实际测试效果，已报告给 redis 官方。  
微博位置: 无
发布时间: 2012-07-03 01:48
点赞数: 0   转发数: 1   评论数: 6
发布工具: 微博 weibo.com

1486:刚刚在 ngx_lua 的"init"分支中添加了 init_by_lua 和 init_by_lua_file 配置指令。在这个上下文中，用户的 Lua 代码可在 nginx 配置加载阶段于 master 进程中对 Lua 全局 VM 进行初始化。比如预加载 Lua 模块，初始化共享内存字典中的数据，或者 Lua 全局变量…能享受 Copy-On-Write 带来的所有好处。  
微博位置: 无
发布时间: 2012-07-02 14:16
点赞数: 0   转发数: 12   评论数: 2
发布工具: 微博 weibo.com

1487:刚刚给 ngx_lua 模块的 log_by_lua*, set_by_lua*, header_filter_by_lua*, 以及 body_filter_by_lua* 指令也添加上了在 Lua 出错时自动打印当前 Lua 调用栈到 nginx 错误日志文件的功能。其做法等同于 lua 命令行程序。  
微博位置: 无
发布时间: 2012-07-02 11:22
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1488:James Hurst 将于下周四在每月一次的 London Lua 聚会上分享 OpenResty: http://t.cn/zWbICPz 可惜我不能到现场，不过 James 说会后将把幻灯片和视频放上去 :)  
微博位置: 无
发布时间: 2012-07-02 03:25
点赞数: 0   转发数: 18   评论数: 3
发布工具: 微博 weibo.com

1489:刚刚根据以色列用户 Tzury Bar Yochay 的报告，修复了 ngx_lua 模块的 body_filter_by_lua* 指令在大数据响应体输出时可能会导致连接挂起直致出现发送超时的 bug. 补丁在这里：http://t.cn/zWbfthW  
微博位置: 无
发布时间: 2012-07-02 01:54
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1490: @chaoslawful 梦想中的适合 bed hacking 的键盘耶~~居然在同事 Ray 的桌子上看到了，哈哈~ http://t.cn/zW4QnJM  显示地图 原图 
微博位置: http://t.cn/zW4QnJM
发布时间: 2012-07-01 00:30
点赞数: 0   转发数: 7   评论数: 10
发布工具: iPhone客户端

1491:第一天去公司上班，老大让我自己上 Google 去选择喜欢的工作用本，也没给预算上限，着实有些意外。我于是就随性挑了一个高配的 ThinkPad W530 (Intel Core i7 最高 3.9 GHz). 我看到不少新同事都选的是最新款的 Macbook Pro，想想对于我来说，似乎也不是最适合干活儿的本～～  
微博位置: 无
发布时间: 2012-06-30 23:39
点赞数: 0   转发数: 43   评论数: 29
发布工具: 微博 weibo.com

1492:下周就可以再次见到 Matthieu Tourne 同学了;他最近回法国休假了。从此作为同事，我们可以一起在 ngx_openresty 项目中多搞些有趣的东西出来  如果一切顺利的话，Piotr Sikora 同学后面也很有可能加入 CloudFlare，到时候就更热闹了！  
微博位置: 无
发布时间: 2012-06-30 23:17
点赞数: 0   转发数: 3   评论数: 10
发布工具: 微博 weibo.com

1493:Brian Akins 同学开始看手实现 ngx_lua 模块的 cosocket 连接池的自定义划分方式，见这里的讨论：http://t.cn/zW4TqEd 目前的方案是为 cosocket 对象的 connect 方法添加一个 pool 参数，让用户自己指定当前连接池的名字，而默认仍像当前实现那样，直接把 "host:port" 或者 "path" 作为连接池的名字。  
微博位置: 无
发布时间: 2012-06-30 23:13
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1494:昨天为我的 EC2 测试集群的报告( http://t.cn/zOjYAFN ) 添加了一列，专门测试用 gcc46 -O3 -funsigned-char 编译 nginx 时的情况。gcc 在使用较高的优化级别时会抛出类似“dereferencing type-punned pointer will break strict-aliasing rules”这样的新的警告。后面再加上 clang -Wall 测试模式。  
微博位置: 无
发布时间: 2012-06-28 22:43
点赞数: 1   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1495:这两日在@淘李子 的补丁基础上为 ngx_srcache 模块添加了对 nginx 变量 $srcache_fetch_status 和 $srcache_store_status 的支持。文档在这里：http://t.cn/zWyBp06 功能上类似 nginx upstream 模块的 $upstream_cache_status，但又不完全相同 [呵呵]  
微博位置: 无
发布时间: 2012-06-28 11:57
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1496:今天刚得知 New York Times 也在使用 ngx_openresty 的组件模块，是与即将到来的奥运会相关的一个应用 :D  
微博位置: 无
发布时间: 2012-06-28 11:34
点赞数: 0   转发数: 11   评论数: 7
发布工具: 微博 weibo.com

1497:我将在 CloudFlare 公司位于旧金山的办公室里继续推进 ngx_openresty 等开源项目，同时支持 ngx_openresty，特别是 ngx_lua 在其生产系统中的深入应用。我媳妇和我都期待几天后在那里开始我们新的“田园生活” [呵呵]  
微博位置: 无
发布时间: 2012-06-25 22:09
点赞数: 3   转发数: 181   评论数: 119
发布工具: 微博 weibo.com

1498:今天发布了 Test::Nginx 0.20 版到 CPAN: http://t.cn/zWL55dr 包含了过去两个 2 个月以来的所有新特性和 bug 修复，完整的更动历史在这里：http://t.cn/zWL55dB 测试工具链也是和被测试的软件一起共成长的 :)  
微博位置: 无
发布时间: 2012-06-25 21:41
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1499:刚刚发布了 ngx_openresty 开发版 1.2.1.3: http://t.cn/aCdPzo 包含了过去三天所有的 bug 修复和新特性。比较完整的变更历史在这里：http://t.cn/zWAiihq 感谢所有的贡献者和用户！  
微博位置: 无
发布时间: 2012-06-25 12:38
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1500:刚根据sztanpet同学的报告，修正了ngx_lua模块的 ngx.say()和 ngx.print()函数在接受table类型参数（类似 Erlang 中的 iolist 类型参数）时可能会因内存非法读取而崩溃的 bug. 补丁已提交：http://t.cn/zW20XKL 当 ngx_openresty 使用 --with-luajit和 --with-debug构造时，这种问题就容易定位多了。  
微博位置: 无
发布时间: 2012-06-24 23:10
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1501:当我们把别人写的软件简单地作为一个黑盒子而对其内部实现知之甚少的时候，就很容易把一个软件想得太好，也很容易把一个软件想得太糟。作为工程师，如果主要是靠直觉、运气和有限的经验来使用某一款软件的话，则是不幸和危险的。  
微博位置: 无
发布时间: 2012-06-24 20:52
点赞数: 1   转发数: 21   评论数: 5
发布工具: 微博 weibo.com

1502:刚刚向 nginx-devel 邮件列表提交了一个针对标准 ngx_proxy 模块的小补丁，修正了它的一个 bug，使得 IfIsEvil 网页上的一个涉及到 ngx_proxy 的不能正确工作的示例可以正常工作了：http://t.cn/zW2KL8N Nginx 社区似乎但凡遇到涉及 if 的诡异问题都会以“if是邪恶的”为由草草了之；我就不信这个邪～  
微博位置: 无
发布时间: 2012-06-24 20:34
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1503:根据 Maxime Corbeau 同学的提议，我刚刚给 ngx_echo 模块添加了新的配置指令 echo_status，以指定不同于 200 的默认响应状态码。补丁在这里：http://t.cn/zW2qZ2p 文档在这里：http://t.cn/zW2qZ20  
微博位置: 无
发布时间: 2012-06-24 12:03
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1504:我常常可以看到直接存在竞争关系的公司同时在为 ngx_openresty 项目贡献人力和物力，细细想来会觉得有些不可思议。但这在开源世界确实不鲜见，而这正是“分享与合作”的开源精神带来的力量！高于商业层面的分享与合作！  
微博位置: 无
发布时间: 2012-06-23 10:27
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1505:刚刚发布了 ngx_openresty 新的开发版 1.2.1.1: http://t.cn/aCdPzo 这是第一个包含了 nginx 最新稳定版 1.2.1 的 ngx_openresty 软件包。完整的更动历史在这里：http://t.cn/zWAiihq 主要涉及 ngx_lua, ngx_echo 和 ngx_postgres 模块的 bug 修复或优化。感谢所有的贡献者和用户！欢迎大家试用！  
微博位置: 无
发布时间: 2012-06-22 23:22
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1506:根据我的 EC2 测试集群最新生成的测试报告，ngx_openresty 各组件的测试集对于 nginx 最新的稳定版 1.2.1 已显示无衰退：http://t.cn/zOjYAFN 看来是时候升级 ngx_openresty 中打包的 nginx 核心到 1.2.1 了！嘿嘿。  
微博位置: 无
发布时间: 2012-06-22 10:07
点赞数: 0   转发数: 2   评论数: 10
发布工具: 微博 weibo.com

1507:精力无限和英勇无敌的 Maxim Dounin 同学终于也报出 ENOTIME 错误来了，哈哈！http://t.cn/zWwFiFO  
微博位置: 无
发布时间: 2012-06-22 10:02
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1508:从 nginx 1.1.4开始，ngx_http_upstream 会为上游连接创建独立的内存池，而 ngx_postgres 模块因为没有在所有情况都释放这个内存池而存在内存泄漏的风险。我的 EC2 测试集群在测试对 nginx 1.2.1兼容性的时候，memcheck 测试模式和 Test::Nginx::Socket的泄漏检测模式同时捕捉到了这个问题，现已修复。  
微博位置: 无
发布时间: 2012-06-22 09:52
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1509:"Patterson referenced a prophetic quote by Maurice Wilkes at the dawn of modern computing in which Wilkes suddenly ‘realized that a large part of my life from then on was going to be spent in ﬁnding mistakes in my own programs’.” http://t.cn/zWwKoXn  
微博位置: 无
发布时间: 2012-06-21 14:20
点赞数: 1   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1510:nginx 的 ngx_array_t在自动增长时，会在必要时自动分配双倍大小的新区域。我新重写的no-pool补丁会在数组分配新区域时立即释放老区域，结果EC2测试集群的报告显示ngx_rewrite模块存储了指向老区域中的数组元素的指针，从而造成非法内存读取。刚刚我修改了no-pool补丁，推迟老区域的释放到destroy时。  
微博位置: 无
发布时间: 2012-06-21 14:14
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1511:Nginx 官方一放出 SPDY 支持的试验性补丁之后，立即就有用户报告 ngx_lua 模块与该补丁的兼容性问题：http://t.cn/zWwJEhv 可惜眼下我正忙于 ngx_openresty 各组件对 nginx 1.2.1 核心的兼容性测试，况且 Nginx 官方也还在不断更新这个 SPDY 补丁，所以等过一阵子再说吧。活儿是永远干不完的，哈哈！  
微博位置: 无
发布时间: 2012-06-21 11:09
点赞数: 0   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

1512:美术系的学生多通过临摹艺术馆中的名画，来研究和领会名家的作画技巧；类似地，我们也可以通过手抄经典的源码，来领会编程大师的技艺。  
微博位置: 无
发布时间: 2012-06-20 15:05
点赞数: 1   转发数: 9   评论数: 8
发布工具: 微博 weibo.com

1513:每次一进入天宫山，都会立刻感觉到出奇的宁静，静到心都难以起伏。  
微博位置: 无
发布时间: 2012-06-20 13:20
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

1514:我刚刚为 ngx_lua 模块的 Lua/LuaJIT 字节码支持添加了比较像样的官方文档：http://t.cn/zWzN0w8 感谢@淘宝静龙 提供的实现以及 @chaoslawful 提供的字节码格式文档。这里需要注意的是标准 Lua 5.1 和 LuaJIT 2.0 的字节码格式是不兼容的，如果搞错了则会导致加载失败 [呵呵]  
微博位置: 无
发布时间: 2012-06-18 13:04
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1515:EC2 测试集群的报告显示，nginx 1.2.1 中自带的 ngx_upstream_keepalive 模块的 keepalive 指令在 single模式下有明显的功能衰退，一些测试因此而失败。nginx官方称 single 模式有意未在文档中提及，不推荐使用，并将于未来移除。建议大家更新相关配置，避免使用single修饰符。@珣新 @定球呀球 @0597虾  
微博位置: 无
发布时间: 2012-06-17 21:30
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1516:nginx 1.2.1 相比 1.0.15，其 ngx_proxy 模块确实有不少改进和修复，刚刚 EC2 测试集群的报告显示 ngx_echo 模块中一直隐藏着的 HTTP 1.0 的处理 bug 也因更为正确的 ngx_proxy 模块而浮出了水面。在测试世界里，“错错得正”也很常见呀，呵呵。  
微博位置: 无
发布时间: 2012-06-17 21:23
点赞数: 0   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

1517:我的笔记本现在只要跑测试或者其他计算任务的时间一长就会因过热（102 度）而自动强制关机。。。只能借助 Amazon EC2 这样的东西了，嘿嘿。  
微博位置: 无
发布时间: 2012-06-17 18:52
点赞数: 0   转发数: 1   评论数: 12
发布工具: 微博 weibo.com

1518:当使用 nginx 1.2.1 核心时，ngx_lua 模块的 content_by_lua 'ngx.print("Hello World")' 在我的 ThinkPad Core2Duo T9600 的笔记本上用 ab -k -c10 -n200000 可以压到 45500+ q/s，相比使用 nginx 1.0.15 核心的时候，吞吐量提升了约 4.4%. 这个结果在我这里重复多次可复现。感觉有点儿意思 [呵呵]  
微博位置: 无
发布时间: 2012-06-17 17:45
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1519:刚刚用我的 Perl 脚本（http://t.cn/zO7u3By ）简单统计了一下，ngx_lua 模块 git master HEAD 除去空行和注释之后的总代码量是 15244 行，而 nginx 1.2.1 源码包中的总代码量是 89982 行。ngx_lua 的源码规模相当于标准 nginx 的大约 17%，或许还算得上“比较小巧”  
微博位置: 无
发布时间: 2012-06-17 16:19
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1520:下面我打算开始搞 ngx_lua 模块的 UDP cosocket API. 特别地，我将继续保持对 LuaSocket 库的 API 兼容性：http://t.cn/zWzzYl9 CloudFlare 需要此 API 和它的内部与外部 DNS 名字服务器进行通信。同时 memcached 的 UDP 协议也是一个应用此 API 的场景。还有哪位朋友有类似这样的需求？  
微博位置: 无
发布时间: 2012-06-17 15:11
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1521:刚刚修改并融合了 Matthieu Tourne 几个月前提供的一个补丁，为 ngx_lua 模块的 cosocket:receiveuntil() 方法添加了对 inclusive 选项的支持。当此选项置为真值时，读取迭代器返回的数据中将包含终结符序列（默认是不包含的）。细节可以参见相关文档：http://t.cn/zOhRVZq  
微博位置: 无
发布时间: 2012-06-16 14:36
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1522:刚刚发布了 ngx_openresty 新的开发版 1.0.15.11: http://t.cn/aCdPzo 过去一周积累了很多的 bug 修复、新特性以及优化，完整的 change log 在这里：http://t.cn/zOYMiaS 感谢所有的贡献者和用户的支持！  
微博位置: 无
发布时间: 2012-06-16 11:58
点赞数: 1   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1523:貌似 Amazon EC2 突然不能在 us-east-1b 从我自己的 AMI 启动新实例了。。。无论是从 web 控制台还是从 SOAP service 都会报“An internal error has occurred”的错误。从@定球呀球 在日本的 linode 主机上尝试也是同样的错误。不靠谱啊不靠谱。。。  
微博位置: 无
发布时间: 2012-06-15 12:14
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1524:自从我的 EC2 测试集群实现自动化任务调度之后，运行它的次数也明显增多了。再加上回归规模的不断扩大，我的 AWS 帐户对应的信用卡帐单也开始涨起来了。这个月到现在已经花了 40.43 美元了，而上个月一共才花了 24.79 美元。不过我现在的开发迭代速度也比原先快了许多。测试集运行次数越多，越有价值。  
微博位置: 无
发布时间: 2012-06-14 23:16
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1525:刚刚根据@定球呀球 的建议，给 ngx_lua 模块添加了新的配置指令，lua_transform_underscores_in_response_headers：http://t.cn/zWhVsxx 文档在这里：http://t.cn/zWhVsxM  
微博位置: 无
发布时间: 2012-06-14 19:33
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1526:这几日我在 ngx_lua 项目的 body-filter 分支中实现了 body_filter_by_lua 和 body_filter_by_lua_file 这两条配置指令，即支持用户 Lua 代码实现 nginx 响应体输出过滤器。这是已通过的测试用例：http://t.cn/zWPn9vu 由于这些用例都是自解释的，亦可充当临时文档。这块工作是由一位国外用户赞助的。  
微博位置: 无
发布时间: 2012-06-13 23:31
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1527:刚刚发布了 ngx_openresty 稳定版 1.0.15.10: http://t.cn/aCdPzo 这个版本几乎完全等价于上一个开发版 1.0.15.9，仅仅是剔除了@陈小玉 发现的源码包中的 vim 备份文件。这样下一个开发版就可以激进地包含最近一周的所有新特性了 :)  
微博位置: 无
发布时间: 2012-06-13 18:53
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1528:当我们先修复 bug 再为该 bug 添加测试用例的时候，很可能添加的用例是“死用例”，即无论此 bug 是否修复都会保持通过的用例。所以此时我们需要先临时撤消对 bug 的修复，确保新添加的用例此时确实是失败的。测试用例也是“程序”，其自身也很可能有 bug. 从未失败过的用例几乎总是有问题的。  
微博位置: 无
发布时间: 2012-06-13 11:47
点赞数: 1   转发数: 11   评论数: 5
发布工具: 微博 weibo.com

1529:nginx 的 proxy_cache 因为工作在 content 阶段，所以也可以直接用于子请求的缓存，同时缓存相关的状态也可以通过 $upstream_cache_status 这样的变量传递给父请求进行处理，比如这里的一个比较完整的实例：http://t.cn/zWvn1AW [呵呵]  
微博位置: 无
发布时间: 2012-06-12 11:08
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1530:EC2 测试集群报告了 ngx_lua 模块中的两个用例存在内存泄漏的可能性，经查其实只是用例中涉及的数据量较大，Lua GC未及时回收。所以我给这两个用例加上了每请求强制 GC 的代码，以避免这样的误报，补丁在这里：http://t.cn/zWv5wQz 当然，生产上使用每请求强制 GC 的开销很大，除非内存实在不够用了。  原图 
微博位置: 无
发布时间: 2012-06-11 11:57
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1531:ngx_lua 模块的 set_by_lua* 配置指令的实现在性能上一直不够理想。刚刚我终于在本地 git 分支中对此进行了优化，效果相当明显，对于最简单的 set_by_lua 配置，如果 location 中仅使用一次，使用 ab 在我的笔记本上压测，整体性能提升约 1.8 倍；如果该指令使用了 5 次，则性能提升约 4.8 倍   
微博位置: 无
发布时间: 2012-06-10 12:53
点赞数: 0   转发数: 11   评论数: 8
发布工具: 微博 weibo.com

1532:那一日晚上梦见自己在写 Haskell 代码，很陶醉的感觉。想来确实好久没写 Haskell 了。No Starch 出版社的编辑 Nathon 前不久想送我的几本英文图书中也正好有一本关于 Haskell 的，真是默契 [呵呵]  
微博位置: 无
发布时间: 2012-06-09 19:31
点赞数: 0   转发数: 1   评论数: 2
发布工具: S60客户端

1533:福州终于是到了在家里坐着都会淌汗的时节了。。。  
微博位置: 无
发布时间: 2012-06-08 11:40
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

1534:刚刚提交了一个补丁，修正了 ngx_lua 模块的 header_filter_by_lua 指令中的一处内存泄漏：http://t.cn/zOFxrbo 当 location 中仅使用了 ngx_lua 的这一条指令并且同时使用了 ngx.ctx 表的时候，就会发生内存泄漏。Test::Nginx::Socket 新加的内存泄漏检测模式可以轻易捕捉到这个问题   
微博位置: 无
发布时间: 2012-06-07 22:55
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1535:刚刚发布了 ngx_openresty 新的开发版 1.0.15.9: http://t.cn/aCdPzo 包含了过去一周多以来实现的所有新特性和 bug 修复。完整的更动记录在这里：http://t.cn/zOYMiaS 感谢所有的贡献者和用户！  
微博位置: 无
发布时间: 2012-06-07 21:29
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1536:忙了好几天，修了好几处问题，最新的 EC2 测试集群生成的报告终于没什么意料之外的失败了：http://t.cn/zOjYAFN 现在测试模式已经有 9 种之多，后面我还想再加上性能回归模式就比较完整了。对于操作系统的种类，我还想再加上 FreeBSD, NetBSD 和 OpenSolaris，这三种 OS 都有现成的 EC2 AMI   
微博位置: 无
发布时间: 2012-06-07 19:17
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1537:JoyentCloud 看起来有点儿意思：http://t.cn/zOFqIVp 许多实例的价格比 Amazon EC2 更便宜一点点。不过最吸引我的是可以使用 dtrace 的能力，见这篇博客文章：http://t.cn/zOFqIVN  
微博位置: 无
发布时间: 2012-06-07 18:47
点赞数: 1   转发数: 8   评论数: 5
发布工具: 微博 weibo.com

1538:刚刚又向 nginx 官方提交了一个针对 nginx 核心的小补丁，修正了 poll 模式下 worker进程退出时的一处段错误: http://t.cn/zOFbqPI 该补丁将包含在 ngx_openresty 的下一个开发版 1.0.15.9 中。该问题是我的 Amazon EC2 测试集群在 HUP reload + memcheck 测试模式下运行 ngx_lua 的测试集时捕捉到的。  
微博位置: 无
发布时间: 2012-06-07 17:42
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1539:今天晚上我的 EC2 测试集群终于有 10 台 High-CPU Medium 实例在同时跑了。自从加了几个新的测试模式之后，调度器就会自动分配更多的实例，以确保 2 小时之内完整回归一遍 ngx_lua及相关的 lua-resty-* 库。不要超了我 AWS 帐户的 20台实例的上限便好。以后或许还可以借用老婆的信用卡注册一个新帐户。  
微博位置: 无
发布时间: 2012-06-06 23:25
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1540:刚注意到 openresty 邮件组的存档中已经有 1011 封邮件了：http://t.cn/zO18PUR 邮件列表确实是累积非正式文档和资料的极好处所。我会继续认真回复那里的邮件的，嘿嘿～ 目前已经有 189 位订阅者了，期待更多 :)  
微博位置: 无
发布时间: 2012-06-05 17:08
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1541:刚刚根据 Moven 同学的报告，修正了 ngx_lua 模块在 Lua 代码缓存禁用的模式下没有清空 Lua 运行时中的 _G 特殊表的问题。已提交的补丁（含对应的测试用例）在这里：http://t.cn/zOkh03I  
微博位置: 无
发布时间: 2012-06-05 16:46
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1542:刚刚根据@陈小玉 同学的反馈，为 ngx_lua 模块的 ngx.log() 方法添加了对日志级别参数的值域检查，现在如果用户误把 ngx.ERROR 或者 ngx.HTTP_OK 当作日志级别参数传入 ngx.log() 的话，ngx.log() 会抛“bad log level”的异常。补丁在这里：http://t.cn/zOkPTX5  
微博位置: 无
发布时间: 2012-06-05 16:19
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1543:任何一种测试方法，如果它没有帮助你发现实实在在的新 bug，那么无论它看起来多么头头是道，多么豪华美观，都是失败的，彻彻底底失败的。  
微博位置: 无
发布时间: 2012-06-04 20:50
点赞数: 1   转发数: 1   评论数: 6
发布工具: 微博 weibo.com

1544:刚刚我彻底重写了@0597虾 刚进入淘宝时为 nginx 编写的 no-pool 补丁：http://t.cn/zOD0TSa 原先的实现过于复杂，且存在内存泄漏问题。现在我们仅使用一个单链表来追踪所有由我们分配过的块，不再区分 large 与非 large. no-pool 补丁老实现的泄漏问题是 Test::Nginx::Socket 泄漏测试模式捕捉到的。  
微博位置: 无
发布时间: 2012-06-04 20:17
点赞数: 0   转发数: 8   评论数: 6
发布工具: 微博 weibo.com

1545:刚刚修复了 ngx_lua 模块的 ngx.re.gmatch() 和 ngx.re.sub() 这两个接口函数中比较微妙的内存泄漏，补丁分别在 http://t.cn/zOD9K3q 和 http://t.cn/zOD9K3G 这两个问题都是 Test::Nginx::Socket 最新（也是最土的）泄漏检测模式捕捉到的，准确率相当了得   
微博位置: 无
发布时间: 2012-06-04 17:43
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1546:自动化测试也容易变成“组合爆炸”问题，若干平台、若干配置、若干模块、再加若干测试模式，一组合就不得了，需要大量的计算资源。在 Amazon EC2 极大地缓解了我对计算资源的渴求之后，现在我终于可以放心添加新的测试方法和模式了！同样一个测试集，因为用例是数据而不是代码，便可以有 N 种玩法！  
微博位置: 无
发布时间: 2012-06-02 22:23
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1547:这两天给 Amazon EC2 测试集群的报告又加上了“HUP reload”和“HUP reload + valgrind/memcheck”这两种新的测试模式。所谓“HUP reload”即是通过 TEST_NGINX_USE_HUP=1 环境变量开启 Test::Nginx 的 HUP 测试模式。在新的测试模式下，ngx_lua 模块还有几个失败的用例有待研究：http://t.cn/zOjYAFN  
微博位置: 无
发布时间: 2012-06-02 21:34
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1548:刚给Test::Nginx::Socket测试台添加了最一般的内存泄漏检测模式，通过环境变量TEST_NGINX_CHECK_LEAK=1来开启。对于每个用例，它会在子进程中调用ab或weighttp施以长时间的压力，主进程在施压1秒之后开始每隔20毫秒用ps命令采样一次nginx进程的内存大小，并进行线性回归，计算拟合直线的斜率并输出。  
微博位置: 无
发布时间: 2012-06-02 18:40
点赞数: 0   转发数: 11   评论数: 9
发布工具: 微博 weibo.com

1549:期待 LuaJIT 2.1 全新的垃圾回收器（GC）！ http://t.cn/zOetv0A  
微博位置: 无
发布时间: 2012-06-02 09:52
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1550:刚刚我又提交了一个小补丁给 nginx-devel 邮件列表，修正了 nginx 核心中的 resolver 的一行调试日志输出代码中的内存越界问题：http://t.cn/zOeZ0rA 这个问题是我的 Amazon EC2 测试集群在 valgrind/memcheck + hup reload 测试模式下捕捉到的   
微博位置: 无
发布时间: 2012-06-01 18:22
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

1551:当我们测试 nginx 模块的时候，其实不仅仅测的是这些 nginx 模块，同时也是在测试 nginx 核心、测试工具、乃至测试用例本身。参与测试过程的任何一个部件都可能被捕捉到 bug，这也正是测试的一大魅力。比如我提交给 Nginx 官方的许多针对核心 bug 的补丁多是在测试我自己的模块时捕捉到的   
微博位置: 无
发布时间: 2012-06-01 17:52
点赞数: 1   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1552:出于某种原因，我的某一台 EC2 实例上的 memcached 1.4.13 使用“-d -p 11211”选项启动之后，lsof 显示它竟未监听 IPv4 地址，却只监听了 IPv6 地址，导致测试集通过 127.0.0.1 这个地址访问时连接被拒。但我登录上去用相同选项启了一个新实例又没有此问题。看来还是老实加上 -l 127.0.0.1 选项吧。。  
微博位置: 无
发布时间: 2012-05-31 19:08
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1553:上个月（4 月）我在 Amazon EC2 上一共花了 28.26 美元，现在这个月（5 月）也快结束了，到目前为止共花了 23.3 美元 [呵呵]  
微博位置: 无
发布时间: 2012-05-31 15:56
点赞数: 0   转发数: 0   评论数: 12
发布工具: 微博 weibo.com

1554:尝试了几次用 calibre 的 ebook-convert 工具从 HTML 源生成 GDB 用户手册的 MOBI 电子书，结果每次临近结束时都直接 kernel panic 自动关机了。。。汗啊。。。升级了 calibre 到最新版本之后，问题消失   
微博位置: 无
发布时间: 2012-05-30 17:41
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1555:ngx_lua 以及相关的lua库在 LuaJIT下的性能提升空间还很大，因为我还没怎么针对 LuaJIT进行优化，比如用FFI调用取代标准 Lua C函数调用，避免使用 JIT编译器尚未支持的原语（列在http://t.cn/zOgvpYd ）。前几天还看到一个 Lua程序，针对 LuaJIT优化前比其 C++版本慢 40 倍，而优化后反而快了 2 倍。  
微博位置: 无
发布时间: 2012-05-30 15:52
点赞数: 0   转发数: 0   评论数: 12
发布工具: 微博 weibo.com

1556:Test::Nginx 测试模块推荐每个测试用例使用自己独立的 Nginx 配置文件，而各个用例之间默认是通过退出重启 Nginx 服务器的方式来自动切换 Nginx 所使用的配置的。我刚刚修改了 Test::Nginx 对 TEST_NGINX_USE_HUP 环境变量的支持，当它置为真值时，则通过给 Nginx 发 HUP 信号的方式重新加载配置。  
微博位置: 无
发布时间: 2012-05-30 15:08
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1557:Valgrind 的 Massif 和 DHAT 工具貌似并不能捕捉到 ngx_lua 测试用例中的细微内存泄漏点，因为我故意植入了一处内存泄漏之后，这两个工具都无法方便地定位到－－Nginx 启动时分配的许多内存块构成的“背景”噪音太大了。。。看来还是得使用最笨的检测办法，即 ab/weighttp 压力 + 定时 ps   
微博位置: 无
发布时间: 2012-05-30 14:39
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1558:Valgrind 在 Mac OS X 上使用还是会有不少问题，除了先前就知道的不允许用户应用使用 USR2 信号之外，貌似 QUIT 信号也不会正确传递到用户应用。。。Valgrind 还是在 Linux 上比较靠谱一些 :)  
微博位置: 无
发布时间: 2012-05-29 18:37
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1559:刚刚融合了静龙同学的补丁，为 ngx_lua 模块添加了 ngx.sleep() 方法。文档在这里：http://t.cn/zOdC0qR 原始的补丁及相关讨论见这里：http://t.cn/zOdC0qE 从此不必再使用 ngx.location.capture + echo_sleep 来做非阻塞的定时休眠了，呵呵。  
微博位置: 无
发布时间: 2012-05-29 15:55
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1560:刚刚发布了 ngx_openresty 新的开发版 1.0.15.7: http://t.cn/aCdPzo 包含了最近两周的所有新特性和 bug 修复。详细的更动列表在这里：http://t.cn/zOYMiaS 感谢所有的贡献者和用户。  
微博位置: 无
发布时间: 2012-05-29 13:00
点赞数: 0   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

1561:前两日融合了 Matthieu Tourne 同学提的一个补丁，为 ngx_lua 模块添加了 ngx.decode_args() 方法：http://t.cn/zOdzAgF  
微博位置: 无
发布时间: 2012-05-28 15:41
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1562:昨晚融合了 Matthieu Tourne 同学打给 ngx_lua 模块的一个补丁，添加了新的配置指令 rewrite_by_lua_no_postpone: http://t.cn/zOrki9D 当开启此指令时，rewrite_by_lua 和 rewrite_by_lua_file 将不再推迟到 rewrite 请求处理阶段的末尾再执行，而会在标准的 ngx_rewrite 模块之前执行。  
微博位置: 无
发布时间: 2012-05-28 11:30
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1563:刚刚融合了 Brian Akins 同学打给 lua-resty-redis 库的一个小补丁，为 hmset 方法添加了直接传递哈希型 Lua table 作为参数的支持，例如 red:hmset("animals", {dog="bark",cat="meow",cow="moo"})  
微博位置: 无
发布时间: 2012-05-28 11:12
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1564:记得从前在大学图书馆里每日面对着满架的各个学科的英文图书，便不由心生幸福和庄严感。我的大学时光有很大一部分是在那里度过的。而如今的我面对着许多高质量的开源项目以及许多博大精深的技术领域，便又会不由地进入当年的那种熟悉的心情～ 东下公路  显示地图 原图 
微博位置: 东下公路
发布时间: 2012-05-27 21:41
点赞数: 2   转发数: 2   评论数: 3
发布工具: S60客户端

1565:Valgrind 内置了一个 gdb server 的实现，使得 gdb 可以通过其远程模式调试运行在 valgrind 的虚拟 CPU 上的用户程序。或许 ngx_lua 也可以内置一个 gdb server，让 gdb 也能远程调试 nginx 里面正在运行的 Lua 代码？  
微博位置: 无
发布时间: 2012-05-27 17:42
点赞数: 0   转发数: 1   评论数: 3
发布工具: S60客户端

1566:“Programming is hard; let's go shopping!” -- Larry Wall on #perl6 http://t.cn/zOrN9wd  显示地图 原图 
微博位置: http://t.cn/zOrN9wd
发布时间: 2012-05-27 14:56
点赞数: 2   转发数: 8   评论数: 1
发布工具: S60客户端

1567:我收到的不少补丁往往只有实现部分，我在整合时除了研读和修改补丁本身，还需要自己加上相应的测试用例还有文档。而测试和文档所花费的时间有时反而多于实现本身。所以“补丁审查员”的担子很不轻松   
微博位置: 无
发布时间: 2012-05-25 16:58
点赞数: 1   转发数: 0   评论数: 3
发布工具: S60客户端

1568:我的 EC2 测试集群在 Linux i386 和 x86_64 上回归 ngx_lua 和 ngx_rds_json 这两个模块会自动启动 6 台 High-CPU Medium 实例同时运行，以确保我指定的 100 分钟以内出结果的约束。任务调度脚本会根据前一次的实际运行结果进行（近似的）最优化调度，以确保总机器数最小化，毕竟 EC2 是按小时收费的。  
微博位置: 无
发布时间: 2012-05-24 22:41
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1569:我近期准备开发的新功能的设计，以及准备合并到主干的开发分支，都会发邮件到 openresty 邮件列表：http://t.cn/zO18PUR 欢迎大家多提宝贵意见和建议 :) 我建议其他的 ngx_openresty 开发者也这么做，以确保设计和开发都能足够开放和透明，同时也可避免因开发者间的地域差距而导致的交流不畅。  
微博位置: 无
发布时间: 2012-05-24 10:38
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1570:一位国外用户愿意赞助 ngx_lua 模块的响应体输出过滤支持（即 body_filter_by_lua 和 body_filter_by_lua_file 指令）。我将在未来两周内抽时间实现一下这个 TODO :)  
微博位置: 无
发布时间: 2012-05-23 22:32
点赞数: 0   转发数: 1   评论数: 7
发布工具: 微博 weibo.com

1571:openresty 邮件列表已然成为双语列表了，既有中文的主题，也有英文的主题，虽然多是中国用户订阅，却也有好几位国际友人，比如 Sparsh Gupta, Dirk Feytons和Tzury Yochay 等等。Matthieu Tourne 同学经常也会借助谷歌翻译阅读中文邮件，偶尔还会用中文回两句（也是谷歌翻译生成汉字），真是欢乐。。。  
微博位置: 无
发布时间: 2012-05-23 18:52
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1572:我最近都在检查和调整别人的 C 补丁，越来越发现团队成员之间的 code review 是多么的重要。发现别人的问题倒在其次，工程师之间通过代码和补丁来沟通的时候真的可能会有一种说不出的快感——精确而高效 [呵呵]  
微博位置: 无
发布时间: 2012-05-22 20:21
点赞数: 0   转发数: 17   评论数: 4
发布工具: 微博 weibo.com

1573:语言不过是层皮，重要的是实现。天天为皮吵来吵去，甚是无趣。。。  
微博位置: 无
发布时间: 2012-05-22 18:38
点赞数: 1   转发数: 10   评论数: 12
发布工具: 微博 weibo.com

1574:写 C 其实就是修心。心浮气躁的状态是很难把 C 写好的 :) 烦躁的状态适合写脚本，特别是 Perl，想到哪儿就可以写到哪儿 ;)  
微博位置: 无
发布时间: 2012-05-22 18:00
点赞数: 2   转发数: 37   评论数: 23
发布工具: 微博 weibo.com

1575:ngx_lua 模块的 set_by_lua 指令一直不恰当地支持 nginx 变量展开，从而导致在内联的 Lua 代码中不能直接使用 $ 字符，给用户造成了诸多不变。刚刚我在 jinglong 同学提供的测试用例基础上修正了这个问题，补丁在这里：http://t.cn/zO3Ldah 多谢 Vittly 同学对此问题的报告：http://t.cn/zO3LdaP  
微博位置: 无
发布时间: 2012-05-21 19:05
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1576:Matthieu Tourne 同学几天前给 ngx_lua 准备了一个 C 补丁，为 ngx.log() 和 print() 调用输出到 nginx 错误日志文件的信息添加上了调用所在的 Lua 函数名、Lua 源文件名以及在 Lua 源文件中的行号，例如 “[debug] 21980#0: *1 [Lua] <request_body.lua:23> read_body(): ...” 这可以简化调试工作。  
微博位置: 无
发布时间: 2012-05-21 13:28
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1577:刚刚在审核 openresty 邮件组的贴子时，一不小心误操作，错把 10 封 spam 标记为了“Always Allow”，结果都跑进邮件组里去了，真是对不起所有订阅的用户了。刚刚我已经手工删除了这些垃圾，但已经发送到订阅者邮箱里的邮件，我就收不回来了。以后我得先把 Spam 标记好，然后再去勾选那些正常的邮件。  
微博位置: 无
发布时间: 2012-05-21 12:51
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1578:今天和亲人们去永定客家土楼转了半日。青山绿水，隐世大家;儒雅闲静，简朴大方。如能每日在媳妇陪伴下于此地编码，实为人生一大幸事 [呵呵]  
微博位置: 无
发布时间: 2012-05-20 22:47
点赞数: 0   转发数: 11   评论数: 7
发布工具: 微博 weibo.com

1579:发现微博上不少陌生人都火气好大，很容易出言不逊的样子。我就当作锤炼我的好脾气了，呵呵。其实以礼相待，对我们大家都好，也更有助于讨论问题。我若不是强迫自己先默默数到十之后再回复，我可能也会跟着谩骂了，呵呵。希望我们能一起努力，让这个世界变得更美好一点 :)  
微博位置: 无
发布时间: 2012-05-19 18:00
点赞数: 0   转发数: 5   评论数: 14
发布工具: 微博 weibo.com

1580:这些天我在思考把 LLVM 汇编代码转换为 Lua 代码的算法细节。我回忆起从前大学时修“程序设计方法学”这门课的时候，学习过一种把任意的非结构化程序转换为结构化程序的算法。当时我还用 Perl 作了一个实现，并且还制做了一套幻灯片介绍其相关细节：http://t.cn/zOuUaut 这个东西正好适用于 llvm2lua  
微博位置: 无
发布时间: 2012-05-19 17:18
点赞数: 0   转发数: 36   评论数: 14
发布工具: 微博 weibo.com

1581:好久没续写我的 nginx 连载教程（http://t.cn/zOfWF3N ）了，在此向我的读者们致歉。我打算在合并了 Matthieu Tourne 同学为 ngx_lua 模块添加 log_by_lua 指令的补丁之后，再开始撰写下一篇介绍 nginx 的 log 处理阶段的文章。敬请期待，呵呵。  
微博位置: 无
发布时间: 2012-05-19 14:23
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1582:很多时候，软件本身的价值很有限，而其完整的测试集和完善的测试工具链（如果有的话）才是无价之宝。正是后者才能让我们放心大胆地不断修改软件，甚至彻底重写。我特别欣赏这种随时都能稳步进化乃至突变重写的能力。 336县道  显示地图 原图 
微博位置: 336县道
发布时间: 2012-05-18 16:47
点赞数: 1   转发数: 34   评论数: 8
发布工具: S60客户端

1583:虽然我现在不为任何一家公司工作，但每天的工作仍会受到资本力量的影响。国内外许多公司的业务需求直接或者间接影响着我的具体工作。我要做的是充分利用资本的力量推动我的开源项目健康向前发展（包括人力和物力），同时努力避免自己以及自己的项目受到资本力量的有害束缚。  
微博位置: 无
发布时间: 2012-05-18 09:53
点赞数: 0   转发数: 6   评论数: 13
发布工具: 微博 weibo.com

1584:哈哈！刚刚在 luajit 邮件列表里看到有人写了一个 luaffi 库：http://t.cn/aWDUKM 为标准 Lua 解释器提供与 LuaJIT FFI 相兼容的 API: luajit.org/ext_ffi.html 这一下好了，我们更可以放心大胆地拥抱 FFI 来访问 C/C++ API，而不必再担心和标准 Lua 解释器的兼容性问题了 :D  
微博位置: 无
发布时间: 2012-05-17 21:33
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

1585:这个世界越来越疯狂了，下午我刚和 EMS 的业务员打过交道，不想没过几个小时就在 Gtalk 上被告知 EMS 的对外系统也有使用我们的 ngx_openresty...哈哈！  
微博位置: 无
发布时间: 2012-05-17 17:54
点赞数: 0   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

1586:最近运气太好了，我刚刚又定位了 nginx 核心中的一个小 bug，补丁已经提交给了 nginx 官方：http://t.cn/zOmbAw9 这个问题是 Sirsiwal, Umesh 同学使用 ngx_lua 模块时发现的，即 nginx 的标准内建变量与 nginx HUP 重新加载配置一起工作时可能会出现值被清空的情况。  
微博位置: 无
发布时间: 2012-05-17 16:51
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1587:刚刚提交了一个补丁，修正了 huang kun 同学报告的 ngx_lua cosocket 对象的 receive 方法不接受“0”作为参数的问题。补丁在：http://t.cn/zOndvjU 这个问题至少会影响到 lua-resty-redis 库无法获取具有空值的 key. 细节见 openresty 邮件列表中的相关讨论： http://t.cn/zOndvj4 （需要翻墙）  
微博位置: 无
发布时间: 2012-05-16 23:34
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1588:刚刚发布了 ngx_openresty 新的开发版 1.0.15.5: http://t.cn/aCdPzo 包含了过去几天所有的 bug 修复和新特性：http://t.cn/zOYMiaS 从日期上看，距离上次发布才隔了三天，但我却感觉有一周之久了。。。汗啊。。我的贡献者们实在是太给力了，我一直被他们拖着往向赶，哈哈！  
微博位置: 无
发布时间: 2012-05-16 18:57
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1589:即将发布的 ngx_openresty 1.0.15.5 将把 LuaJIT 升级到 2.0.0 beta10. 这个版本的 LuaJIT 终于自己打包了 unwind.h 头文件，原先 ngx_openresty 不得不替它打包了一个 unwind.h，因为*BSD系统上找不到。我刚刚已经测试过 ngx_openresty 1.0.15.5 在 Linux, FreeBSD, Solaris, 和 Mac OS X 上兼容性。  
微博位置: 无
发布时间: 2012-05-16 18:07
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1590:github 自动给项目打语言标签的功能弱爆了。。。明明是纯 C 或者纯 Lua 的项目，只因其测试集是一点点 Perl 驱动的，就给打成了 Perl 标签。。。悲剧啊。。。见这里清一色的“Perl”标签，其实里面没几个是真正 Perl 写的项目：http://t.cn/zOnpt51  
微博位置: 无
发布时间: 2012-05-16 11:57
点赞数: 0   转发数: 8   评论数: 3
发布工具: 微博 weibo.com

1591:刚刚又融合了 Matthieu Tourne 的一个补丁，修正了 ngx_lua 模块的“下游 cosocket”不支持“Expect: 100-continue”请求头的问题：http://t.cn/zOncYjt 先前这个问题会导致某些 HTTP 1.1 客户端延时等待。  
微博位置: 无
发布时间: 2012-05-15 21:40
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1592:我刚刚提交了一个补丁，修正了 ngx_lua 模块的“下游 cosocket”对象不能和 HTTP 1.1 pipelining 一起工作的问题：http://t.cn/zOntI8d 这个问题是我今天在 review cosocket 部分的实现代码时发现的，随后写了一个测试用例，发现果然失败了，嘿嘿。没事就应该多瞅瞅自己的代码   
微博位置: 无
发布时间: 2012-05-15 20:56
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1593:Matthieu Tourne 同学这两天报告了 ngx_lua 模块近期的一处衰退，即下游 cosocket 对象在读取请求体数据时，可能会丢失最后一部分数据。该衰退是在 ngx_lua 0.5.0rc25 中修正另一处 bug 时不小心引入的。我已经提交了补丁：http://t.cn/zOn4oyQ 多谢 Matthieu 同学提供的测试用例。  
微博位置: 无
发布时间: 2012-05-15 17:53
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1594:补丁审核者的角色也不好当呀。。。我的任务队列里仍然有十几个用户补丁有待审核和应用，其中几乎都是添加新特性的（除了@calio 的补丁是解决 ngx_rds_json 模块中的递归调用问题的），而且大多来自英勇无敌的 Matthieu Tourne 同学。唉，我已然成为整个系统的“瓶颈”了   
微博位置: 无
发布时间: 2012-05-15 08:57
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1595:刚刚应用了 Matthieu Tourne 的补丁，为 ngx_lua 添加了在 Lua 用户代码出错时向 error.log 打印 Lua 调用堆栈信息的功能（类似 lua/luajit 命令行界面的行为）。比如下面这个测试用例所演示的：http://t.cn/zOE1jUk 从此往后，对于复杂些的 Lua 应用的错误诊断终于可以容易很多了[呵呵]  
微博位置: 无
发布时间: 2012-05-14 22:51
点赞数: 0   转发数: 3   评论数: 8
发布工具: 微博 weibo.com

1596:刚刚融合了Chase Colman 同学两周前提供的补丁(http://t.cn/zOElXrE )，为 lua-resty-string 库添加了 resty.aes 和 resty.random 模块，通过 LuaJIT FFI 暴露了 OpenSSL 的 AES 加解密 API 和伪随机数/密码安全随机字符串生成 API: http://t.cn/zOElXrn  
微博位置: 无
发布时间: 2012-05-14 15:20
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1597:在 Linux i386 上用 valgrind 运行 lua-resty-string 的测试集时会遇到来自 LuaJIT FFI 的奇怪的段错误，在用 -DLUAJIT_USE_VALGRIND 选项重新编译 LuaJIT 2.0 之后就没问题了。有意思 :)  
微博位置: 无
发布时间: 2012-05-14 14:43
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1598:Wendal Chen 同学用 clang 编译器捕捉到 ngx_rds_csv 模块中一处缓冲区计算错误的 bug，我刚刚已提交补丁进行了修正：http://t.cn/zOEfEhr 详情见 openresty 邮件组中的相关讨论：http://t.cn/zOEfEhd 看来很有必要在我的测试集群中同时使用 gcc 4.6 和 clang 了 :)  
微博位置: 无
发布时间: 2012-05-13 21:11
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1599:刚刚发布了 ngx_openresty 开发版 1.0.15.3: http://t.cn/aCdPzo 完整的更动记录在这里：http://t.cn/zOYMiaS 包含了过去两周各组件所有的 bug 修复和新特性。感谢所有的贡献者和用户   
微博位置: 无
发布时间: 2012-05-13 13:55
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1600:原先在 lua C 模块的开发中我常会自己调用 malloc/free 来分配 C 级别的内存，但是由于 Lua API 使用 longjmp 来进行异常处理，所以有内存泄漏的可能性。解决的办法是以 Lua userdata 的形式来分配这些内存块，即统一交给 Lua GC 来管理。昨晚我对 lua-redis-parser 和 lua-rds-parser 进行了此改造。  
微博位置: 无
发布时间: 2012-05-13 10:25
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1601:根据朱峰同学的提议，我刚刚在 ngx_openresty 的 git 仓库中添加了对 Sergey A. Osokin 同学的 ngx_redis 模块（http://t.cn/zORucZg ）的包含：http://t.cn/zORucZd 当使用 redis 作为 ngx_srcache 的缓存后端时，需要使用到这个 ngx_redis 模块。默认此模块是启用的，可以通过选项禁用之。  
微博位置: 无
发布时间: 2012-05-12 15:09
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1602:今天根据 shaneeb 同学的报告（http://t.cn/zORmp5y ），我定位了 ngx_lua cosocket 实现中的一个小 bug，即当使用了 error_page 配置指令指定了自己的出错页的情况下，ngx_lua 可能会在请求结束时调用的 cosocket 析构函数中访问空指针从而导致崩溃。已提交补丁修正了此问题：http://t.cn/zORmp5L  
微博位置: 无
发布时间: 2012-05-12 14:35
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1603:昨天应用了 Matthieu Tourne 同学的一个补丁，对 ngx_lua 的 ngx.log() 函数进行了优化。现在当 error_log 配置指令中指定的日志级别高于 ngx.log() 中的级别参数时，ngx.log() 函数将等价于一个空函数。补丁在这里：http://t.cn/zOR8wh9 原始的讨论在这里：http://t.cn/zOR8whC  
微博位置: 无
发布时间: 2012-05-12 11:17
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1604:刚刚 Amazon EC2 测试集群又捕捉到 nginx 核心中的一个小 bug，即在 mockeagain 写模式下，If-Unmodified-Since 请求头触发 412 出错页时会出现连接挂起现象。我已经将补丁提交给 nginx 官方：http://t.cn/zORCb7b  
微博位置: 无
发布时间: 2012-05-11 21:16
点赞数: 0   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

1605:刚刚修正了 Test::Nginx 模块中的一个小问题，即对于 HEAD 请求的响应，虽然 Content-Length 响应头的值与实际响应体的大小不一致，也不应打印"response body truncated"这样的警告。多谢 Piotr Sikora 同学半年前的报告：http://t.cn/zORimku  
微博位置: 无
发布时间: 2012-05-11 16:02
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1606:应 Nginx_User777 同学一个多月前的请求（http://t.cn/zORJAeN ），我刚刚提交了一个补丁，为 ngx_srcache 模块添加了对 If-Modified-Since 和 If-Unmodified-Since 请求头的支持。现在当缓存命中时，也能适时地返回 304 或者 412 响应了。补丁在这里：http://t.cn/zORJAeC 从此可以节约许多带宽了。  
微博位置: 无
发布时间: 2012-05-11 14:56
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1607:今天应用了 Feibo Lee 同学几周前提交的补丁，修正了 ngx_srcache 模块的一个 bug，即 srcache_store 子请求的 Content-Length 请求头，对于多缓冲区请求体未设置正确。这个问题是历史上一次优化所引入的衰退。细节请见：http://t.cn/zORZqSn 和 http://t.cn/zORZ5do  
微博位置: 无
发布时间: 2012-05-10 20:30
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1608:时间保证好，身体保养好，心情保持好，灵感保护好 :)  
微博位置: 无
发布时间: 2012-05-10 17:03
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1609:刚刚应用了 Jeremy Wohl 同学一个月前提交的补丁，为 ngx_set_misc 模块添加了两条新的配置指令 set_secure_random_alphanum 和 set_secure_random_lcalpha，支持从 /dev/urandom 设备生成密码安全的随机数：http://t.cn/zO8eDlz 文档在这里：http://t.cn/zO8eDlZ  
微博位置: 无
发布时间: 2012-05-10 14:29
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1610:在美国期间和晓哲老师沟通后的感觉是，他在为学术界的新论文太多不知如何自动筛选和分类而烦恼，而我则为补丁太多来不及应用、TODO 列表太长来不及实现而烦恼。。。我得继续努力呀！ http://t.cn/zOSuLx1  显示地图 
微博位置: 无
发布时间: 2012-05-09 22:33
点赞数: 0   转发数: 1   评论数: 2
发布工具: S60客户端

1611:这次在镇江有机会和罗翼老师一边在长江路上散步一边闲聊技术世界的事情。公司业务领域内的那些复杂而困难的问题恰恰同时是计算领域里最有趣的主题。而最重要的是确保自己拥有足够多的时间和足够好的心情去深入那些问题。而这不正是作为程序员最幸福的事情之一么！或许就是最幸福的事情，而其他皆可抛。  显示地图 
微博位置: 无
发布时间: 2012-05-09 20:59
点赞数: 0   转发数: 5   评论数: 10
发布工具: S60客户端

1612:这次回镇江老家把一只 Kindle 3 作为礼物送给了我祖父，并按照他的嘱咐事先在里面准备了“诸子百家”、“古诗文集”、“小说艺苑”等多个类别（collections）的电子书。老人家快 90 岁了，现在最大的爱好便是阅读，面对能放大文本且不伤眼的 e-ink 设备可谓爱不释手。 http://t.cn/zO8lTIc  显示地图 
微博位置: http://t.cn/zO8lTIc
发布时间: 2012-05-09 20:45
点赞数: 1   转发数: 1   评论数: 5
发布工具: S60客户端

1613:我打算把 valgrind massif 这款 heap profiler 整合进 ngx_openresty 测试集群，以便捕捉 memcheck 无法检测到的那几类内存泄漏问题。同时@calio 先前报告的 ngx_rds_json 模块在超大结果集下容易栈溢出的问题也有望通过它来测试。有了测试集，我们可以监视的维度和指标确实太多了，嘿嘿～测试为王！  
微博位置: 无
发布时间: 2012-05-08 23:10
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1614:刚刚应用了 Brian Akins 同学的补丁，为 lua-resty-memcached 库添加了字符串 table 类型的 value 参数的支持：http://t.cn/zOQVsa7 例如 memc:set("dog", {"a kind of ", {"an"}, " animal"}) 这样对于某些应用场景下可以免去 Lua 拼字符串的开销，可以跑得更快一些。  
微博位置: 无
发布时间: 2012-05-06 16:50
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1615:我们家都特别喜欢阅读，已经有一只 Kindle DX，一只 Kindle 3，两只 Kindle Touch，总体感觉就是 Kindle 系列产品确实越做越好了，特别是屏幕的显示效果越来越赞了。只是我有些不爽于 Touch 中不再暴露 system/collections.json 文件给用户任意处理图书的 Collections...  
微博位置: 无
发布时间: 2012-05-04 22:29
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

1616:前两天按照@drdrxp 提供的报告，我定位了 nginx 核心中跳转到 named location 的 C 函数里的一个小 bug. 它可能会让那些配置了 ngx_eval/ngx_lua 等东西的 named location 在 rewrite 阶段挂起。补丁只有一行，已提交给 nginx 官方：http://t.cn/zOHaOCD 该补丁将包含在下一个 ngx_openresty 发布中。  
微博位置: 无
发布时间: 2012-05-04 14:49
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1617:Matthieu Tourne 同学在他的 ngx_lua 开发分支中还实现了 ngx.req.init_body, ngx.req.append_body,以及 ngx.req.finish_body 接口，结合 ngx_lua 现有的“下游cosocket”接口，可以用Lua实现高效的流式输入过滤器，就像Tengine 引入的 C 级别的输入过滤器机制那样，但和 Tengine 并无关系，更无依赖。  
微博位置: 无
发布时间: 2012-05-04 14:32
点赞数: 0   转发数: 19   评论数: 5
发布工具: 微博 weibo.com

1618:Matthieu Tourne 同学这两天在他的 ngx_lua 开发分支上实现了 log_by_lua 和 log_by_lua_file 配置指令，这样我们可以用 Lua 注册 log 阶段的处理程序了，结合现有的共享内存字典接口，可以做一些了不起的实时请求统计工作，见 http://t.cn/zOHaLrO 中 README 文档。晚些时候我会把相关补丁融合进来。  
微博位置: 无
发布时间: 2012-05-04 14:27
点赞数: 0   转发数: 6   评论数: 10
发布工具: 微博 weibo.com

1619:emscripten 项目非常有趣：http://t.cn/zOHbos5 它把 LLVM 中间码转换为 JavaScript 代码，从而可以实现把那些拥有 LLVM 编译器实现的语言翻译成 JS. 我有意仿照它搞一个 llvm2lua 转换器，这样很多编程语言就有望直接运行在 ngx_openresty 平台之上了，享受到“同步非阻塞”的所有好处   
微博位置: 无
发布时间: 2012-05-03 22:22
点赞数: 0   转发数: 9   评论数: 7
发布工具: 微博 weibo.com

1620:请大家尽量使用 openresty 邮件组（http://t.cn/zOjEwZA ）来交流技术问题，而尽量不要通过微博，这样我回复起来可以有更多人看到（通过搜索引擎等途径），同时我回复时也不会受到微博的那些限制，另外更多的 openresty 用户也方便参与到讨论中来。多谢合作！:)  
微博位置: 无
发布时间: 2012-05-02 21:27
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1621:我打算给把性能测量的功能也成进 Test::Nginx::Socket 测试台，准备通过 --- bench 来标记“性能测试用例”。我目前最关心的指标是平均响应时间。把这个加进测试集群的报告里去，才能及时知晓不同版本间性能的变化。从前我给量子统计的业务测试台也加过性能回归功能。 福明南路  显示地图 
微博位置: 福明南路
发布时间: 2012-04-30 10:53
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

1622:这个月大部分时间都花在了各种交流分享活动，以及测试工具链的开发上了，导致我的 Gmail 的 TODO 标签下挤压了几十封用户邮件尚未完全处理完毕，其中很多是添加新特性的补丁有待审核和应用。不能很快处理掉的邮件我一般会立即简单回复一下，以免对方担心我没有看到邮件 [呵呵] http://t.cn/zOYnhDb  显示地图 
微博位置: http://t.cn/zOYnhDb
发布时间: 2012-04-30 10:16
点赞数: 0   转发数: 0   评论数: 3
发布工具: S60客户端

1623:昨天是“发布日”，同时还上传了 SSH::Batch 0.029 到 CPAN，包含了一位用户提供的补丁，给 atnodes 脚本添加了 -q 选项以启用 SSH 的安静模式。 铁路大道  显示地图 
微博位置: 铁路大道
发布时间: 2012-04-30 10:01
点赞数: 0   转发数: 1   评论数: 0
发布工具: S60客户端

1624:今天发布了 Test::Nginx 0.19 新版到 CPAN：http://t.cn/hehfyG 相比上一次发布的变更记录在这里：http://t.cn/zOYJy5J 包含了过去三个月的所有新特性和 bug 修复 [呵呵] 我们的所有 nginx 模块的测试集以及 lua-resty-* 库都是由这个 Perl 测试台驱动的～  
微博位置: 无
发布时间: 2012-04-29 12:45
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1625:刚刚发布了 ngx_openresty 开发版 1.0.15.1: http://t.cn/aCdPzo 完整的变更列表在这里：http://t.cn/zOYMiaS 突然发现已经有一个多月没有任何发布了，于是变更之多也相当于两次稳定版之间的变化了[呵呵] 经过考虑，我打算还是先基于 nginx 核心 1.0.15，到 1.2.x 分支的升级需要更多时间。。。  
微博位置: 无
发布时间: 2012-04-29 11:33
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1626:今天 kaifuxu 同学报告了 ngx_lua cosocket 中的一处微妙的 bug，即当从连接池中取出一连接后但不立即使用而发起其他 I/O 操作时，可能会导致段错误：http://t.cn/zOYbYyo 我在 bigplum 同学的帮助下，很快修复了此问题。已经提交的补丁在这里：http://t.cn/zOYbYyK  
微博位置: 无
发布时间: 2012-04-28 23:55
点赞数: 0   转发数: 1   评论数: 6
发布工具: 微博 weibo.com

1627:我给 Amazon EC2 测试集群又添加了对十多个 OpenResty 组件的测试，包括我的所有那些 lua-resty-* 库，请见最新的测试报表：http://t.cn/zOjYAFN 至此，测试集群第一期的工作终于告一段落了；明天开始要着手新的 ngx_openresty 发布了！有了这一套测试基础设施，我们下面可以迭代得更快了！  
微博位置: 无
发布时间: 2012-04-28 23:50
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1628:今天我给 qa.openresty.org 测试报告又添加了同时使用 mockeagain 读模式和 valgrind/memcheck 这两个工具来运行测试集的相关结果。在运行测试的过程中，还真的捕捉到了 ngx_lua 模块的一处内存问题（而且只能在这种测试模式下才能复现）。最新的报告见 http://t.cn/zOjYAFN 请注意表格中新增了一列。  
微博位置: 无
发布时间: 2012-04-27 18:24
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1629:从 qa.openresty.org 测试报告上的计时结果看，Amazon EC2 的 High-CPU Medium 实例的 Linux i386 还是明显比 Linux x86_64 要慢一些，特别是当启用 mockeagain 或者 valgrind/memcheck 工具的时候 [呵呵]  
微博位置: 无
发布时间: 2012-04-27 17:57
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1630:刚刚修正了 ngx_lua 一行调试代码中的内存非法读取的问题。它位于 cosocket 对象的行读取方法中，仅当使用 --with-debug 选项编译 nginx 时才存在，并且仅当极端网络条件下才会出现。这个问题是 mockeagain 读模式和 valgrind 携手捕捉到的。修正它的补丁在这里：http://t.cn/zOjWpDh 工具就是力量！  
微博位置: 无
发布时间: 2012-04-27 16:34
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1631:这些日子我用 perl/bash 实现了基于 Amazon EC2 的 ngx_openresty 回归测试集群工具链。它生成的最新的测试报表总是会出现在这里：http://t.cn/zOjyuTg 目前包含的操作系统种类、nginx 核心的版本、以及参与测试的openresty组件还比较少，同时也没有 valgrind memcheck 测试模式，后面几天再慢慢加。  
微博位置: 无
发布时间: 2012-04-26 16:29
点赞数: 0   转发数: 13   评论数: 7
发布工具: 微博 weibo.com

1632:Allison Randal 谈开源：http://t.cn/zOl09zM 唐凤的中文译本在这里：http://t.cn/zOloUWE 不熟悉 Allison 的同学可以看一下 wikipedia 上的条目：http://t.cn/zOl09zI [呵呵]  
微博位置: 无
发布时间: 2012-04-25 09:56
点赞数: 1   转发数: 5   评论数: 0
发布工具: 微博 weibo.com

1633:为了对 mockeagain 这样的测试工具本身进行回归测试，我特意搜集了历史上由 mockeagain 或者 etcproxy 捕捉过 bug 的软件的快照和相应的测试用例。每次当我修改 mockeagain 之后，我就会把那些软件的用例用 mockeagain 全跑一遍，确保那些历史上的 bug 还会被准确捕捉到。  
微博位置: 无
发布时间: 2012-04-24 21:23
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1634:今天在用 mockeagain 读模式运行 ngx_lua 的测试集时注意到，mockeagain 也会对 UDP 数据包进行切片，这显然是不可接受的（nginx 的 DNS 解析器直接报“short message”的错误），所以我给 mockeagain 加上了对 socket 函数的拦截，过滤那些类型不为 SOCK_STREAM 的句柄，补丁在：http://t.cn/zOlXXpM  
微博位置: 无
发布时间: 2012-04-24 21:16
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1635:mockeagain 工具（http://t.cn/SIHrNh ）的读模式今天捕捉到了它的第一个全新的 bug，即 ngx_lua 模块下游 cosocket 对象的 receive 方法在极端网络条件下可能会挂起的问题。我刚刚已经提交了补丁修正了它：http://t.cn/zOlXfcc 这个 bug 其实也能为 etcproxy 捕捉到，但 mockeagain 无疑更迅捷～  
微博位置: 无
发布时间: 2012-04-24 21:12
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1636:@hugozhu 同学的这个用 ngx_lua 来代理php到后端的网络请求的尝试非常有趣。这正是晓哲和徐景原先在雅虎时设想的让nginx代理php的阻塞IO的思路。//@hugozhu 回复@agentzh:测试例子放上去了 http://t.cn/zOl4VC1 ，麻烦你看看测试方法，配置和代码是否可以改进，接下来我看一下PHP状态保持的解决方案。  
微博位置: 无
发布时间: 2012-04-24 11:20
点赞数: 1   转发数: 13   评论数: 41
发布工具: 微博 weibo.com

1637:哈哈！刚刚看到 nginx 1.1.x 开发版分支终于以 1.2.0 的形式变成稳定版了。看来下面我得基于 1.2.x 来发布新的 ngx_openresty 开发版了，呵呵。“计划跟不上变化” :) 我这些日子一直致力于 Amazon EC2 测试集群的构建；届时回归新版本的 nginx 核心或者 nginx 模块将变得快捷和充分许多。  
微博位置: 无
发布时间: 2012-04-23 23:15
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1638:今天终于修正了 Test::Nginx 在 Valgrind 运行模式下遇到极端情况会挂起的问题。原来是因为多处地方在 die 之前没有及时清理 fork 出来的子进程所导致的：http://t.cn/zOWDsyO 同时为 Test::Nginx::Socket 加上了建立 TCP 连接操作的超时保护。挂起在 Amazon EC2 全自动批处理的环境中是不可接受的。  
微博位置: 无
发布时间: 2012-04-23 19:33
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1639:@仲伟涛 Re "OpenResty近期有加入mongodb的计划吗？" 你可以在 google 里面搜索“openresty mongodb”，应该可以看到 bigplum 同学基于 ngx_lua cosocket 编写的 mongodb 的 Lua 驱动。我记得@nightsailer 同学也好像也开发过一个实现 :)  
微博位置: 无
发布时间: 2012-04-23 11:20
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1640:今天我为 mockeagain 工具添加了对 socket 读操作的切片支持：http://t.cn/SIHrNh C 级别的 recv, recvfrom 和 read 函数都被伪装过了。测试显示，原先由 etcproxy 捕捉到的 libdrizzle, ngx_echo 以及 ngx_redis 等模块中和读取状态机相关的微妙 bug 现在也能通过 mockeagain 可靠复现，真是开心～  
微博位置: 无
发布时间: 2012-04-21 22:08
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1641:Amazon EC2 的 2.5 个“EC2 计算单位”的 CPU 明显不及我的 ThinkPad T400 的 Core2Duo T9600 的 CPU 快呀，哈哈！从 nginx 模块的测试集通过 valgrind 运行的效果就能明显看出这一点。看来我得试试 3.25 个单位、4 个单位、乃至 5.5 个单位的高端 EC2 实例的效果了。。。哈哈！  
微博位置: 无
发布时间: 2012-04-21 21:57
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1642:这两日，我用 Perl 写了一个简单的小编译器，叫做 opsboy，可以根据一种小语言输入，自动生成无依赖的 perl 脚本，完成复杂环境的布署工作：http://t.cn/zOWvAVA 基本原理和 make 相同，只是增加了许多高级原语，比如判断 PATH 环境变量中某个程序是否可见，或者某种程序正在运行中等等。  
微博位置: 无
发布时间: 2012-04-21 10:21
点赞数: 0   转发数: 16   评论数: 9
发布工具: 微博 weibo.com

1643:今天在 Amazon EC2 上拉了几台 High-CPU Medium 实例跑 ngx_openresty 的测试集。单用 valgrind 把我们绝大部分的 nginx 模块的测试集跑一遍下来时，就已经花费了近 2 个小时的光景，真是慢啊。。。看来得换更高 CPU 的实例或者进一步切分到多机来搞并行化了 :)  
微博位置: 无
发布时间: 2012-04-20 17:57
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1644:我正在考虑将 ngx_lua 拆分为多个 nginx C 模块，以便让最核心的 ngx_lua 模块尽可能地精简。比如可以拆分为 ngx_lua, ngx_lua_shdict, ngx_lua_re, ngx_lua_string 这几个。接口的向后兼容仍将会予以保证，但在编译时需同时编译所有的 nginx 子模块 :) 这样也更为灵活，更易扩展 :)  
微博位置: 无
发布时间: 2012-04-19 12:04
点赞数: 0   转发数: 7   评论数: 6
发布工具: 微博 weibo.com

1645:在 Mac OS X Lion 上压测 nginx 的时候，要特别小心两个问题，一是较常见的 ab 版本在这个系统上有 bug，需要更新到最新版（见 http://t.cn/zOOymSe ），二来 Mac 系统的动态端口范围特别小，需要显式调大（见 http://t.cn/zOOymSD ）。感谢 Markus Walther 在 openresty 邮件组中把这个问题理清楚。  
微博位置: 无
发布时间: 2012-04-19 10:20
点赞数: 0   转发数: 18   评论数: 9
发布工具: 微博 weibo.com

1646:根据@Simon李晓明 同学先前在 openresty 邮件组中的报告，我刚刚在 ngx_openresty 的仓库中把 <openresty_prefix>/lualib/?/init.lua 添加进了 ngx_lua 模块默认的 Lua 包搜索路径列表（package.path），补丁在 http://t.cn/zO0dNXT 该更动将包含在下一个 ngx_openresty 开发版发布 1.0.15.1 中 :)  
微博位置: 无
发布时间: 2012-04-18 15:34
点赞数: 0   转发数: 3   评论数: 16
发布工具: 微博 weibo.com

1647:在 Jónas Tryggvi Jóhannsson 同学的建议下，刚刚给 ngx_lua 模块添加了新的 Lua 级别的常数 ngx.HTTP_OPTIONS 用于指示 HTTP 的 OPTIONS 方法，同时为 location capture API 添加了对此方法的支持：http://t.cn/zO0ryyZ  
微博位置: 无
发布时间: 2012-04-18 14:34
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1648:刚刚应用了 Vitaly Peretiatko 同学的一个补丁，为 ngx_set_misc 模块添加了 set_rotate 配置指令，文档在这里：http://t.cn/zO09Fiw 已包含在该模块的 v0.22rc7 预发布中：http://t.cn/zO09FiZ  
微博位置: 无
发布时间: 2012-04-17 18:04
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1649:我听说淘宝静龙同学将在未来的一段时间内跟随晓哲老师从事 ngx_lua 模块的一些开发工作，这一次利用同行的机会，我和晓哲老师列了一个长长的 TODO 列表供静龙同学选择 :) 多是一些小但又比较重要的特性。比较大的 TODO 项目，比如 ngx.thread API 和 UDP cosocket API 之类，还是留给我自己吧，呵呵。  
微博位置: 无
发布时间: 2012-04-14 12:37
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1650:在旧金山遭遇罕见的雷雨天气之后，今天国航的飞机又在起飞前被地勤人员给磕坏了飞机尾巴。。。已经延误两个多小时了，看来今天是回不了国了。。。我从北京返回福州的航班可能也得改签。。。下回我还是老老实实地坐港龙航空公司的飞机吧。。。  
微博位置: 无
发布时间: 2012-04-14 10:05
点赞数: 0   转发数: 3   评论数: 12
发布工具: 微博 weibo.com

1651:几天前在网易公司的分享让我觉得非常享受。我甚至一度自己陶醉于我所讲的主题，而忘记了身在何方。特别感谢网易的朋友们听得也非常认真和投入，因为我对观众的反应是非常敏感的，只要有一丝躁动和不安，我就会被严重干扰从而影响到我的表达 :)  
微博位置: 无
发布时间: 2012-04-12 09:18
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

1652:今天我在 MySQL 2012 上的 nginx 演讲很顺利，我只有 30 分钟，却需要讲 87 张幻灯片。我很惊讶我能流畅地快速讲下去，就像使用汉语一样。听众的反应看起来很不错。这是我的第一次英语演讲，虽然时间非常紧张，但比我预期的要好得多 :)  
微博位置: 无
发布时间: 2012-04-12 09:15
点赞数: 0   转发数: 58   评论数: 33
发布工具: 微博 weibo.com

1653:早上和晓哲老师在 Santa Clara 靠海湾的地方散步，不想看到一条尖脑袋的灰褐色长蛇从自行车道上悠然地徐徐滑过～～我们赶紧抢上前拍照。。。  
微博位置: 无
发布时间: 2012-04-12 03:44
点赞数: 0   转发数: 0   评论数: 9
发布工具: 微博 weibo.com

1654:这一周多都在忙着做幻灯片，在线播放的版本在这里：http://t.cn/zO9jhhD （使用方向键翻页），这是为我们在 MySQL Conference 2012 大会上的 nginx 演讲准备的（4 月 11 日下午在 Santa Clara, CA）。PDF 格式的幻灯在这里：http://t.cn/zO9jhhe 欢迎大家批评指正 :)  
微博位置: 无
发布时间: 2012-04-08 18:36
点赞数: 0   转发数: 13   评论数: 10
发布工具: 微博 weibo.com

1655:应网易公司的邀请,明天我将前往网易北京进行ngx_openresty相关的技术交流,同时学习一下OpenResty各组件在网易的生产应用。感谢张仕强,感谢丁磊。  
微博位置: 无
发布时间: 2012-04-08 09:57
点赞数: 0   转发数: 8   评论数: 17
发布工具: 短信

1656:既然刚才给出了 100KB 大结果集的结果，那么不妨再 show 一下 ngx_srcache + ngx_memc 对于单行小结果集 mysql 查询在 4 台 memcached 节点组成的分布式缓存命中时的 rps 随并发度的变化。我们看到，只比 ngx_drizzle 略有提升，确实已经快到天花板了。。。[呵呵]  原图 
微博位置: 无
发布时间: 2012-04-07 19:28
点赞数: 0   转发数: 31   评论数: 20
发布工具: 微博 weibo.com

1657:ngx_srcache + ngx_memc 这种缓存的效率看来还确实不错，比如 100KB mysql 大结果集查询在缓存命中时的情况添加进了下面这张图中（黄色曲线）。图中列出的其他所有东西，比如 lua, php, nodejs 都可以很方便地享受到 ngx_srcache 的缓存服务   原图 
微博位置: 无
发布时间: 2012-04-07 19:20
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1658:对于单行的小结果集查询，node-mysql + node-generic-pool 相比 php-fpm + php-mysql 还是有性能优势的，rps 高了一倍的样子，绝对值也有差不多 1000 rps，但和 ngx_openresty 的组件相比，貌似还有些差距 [呵呵] 下图中的测试数据仍然来自 Amazon EC2 Small 实例组成的测试集群。  原图 
微博位置: 无
发布时间: 2012-04-07 18:29
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1659:貌似 node-mysql 的作者真不在乎性能？对于 100KB 的大结果集查询，并且命中 MySQL 查询缓存时，node-mysql + node-generic-pool 的性能是最差的，甚至不如 php-fpm + php-mysql. 我的 nodejs 脚本在这里：http://t.cn/zO9bEgl 哪位 NodeJS 专家帮我把把脉？使用的各组件都是当前的最新版本。  原图 
微博位置: 无
发布时间: 2012-04-07 18:21
点赞数: 0   转发数: 11   评论数: 5
发布工具: 微博 weibo.com

1660:我刚才在对比测试大结果集查询时，发现NodeJS在使用 node-mysql库访问MySQL时，上下文切换次数居高不下，都快赶上 php-fpm + php-mysql了。但Node只起了一个进程，而且 strace 确认了确实是非阻塞的（不像 node-mysql-libmysqlclient 和 node-db-mysql 那样滥用 OS 线程池玩阻塞通信），很是奇怪  原图 
微博位置: 无
发布时间: 2012-04-07 18:02
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1661:runner-mei 同学在 Windows 上使用微软的 VC 编译器捕捉到我们各个 nginx 模块中不少和 ANSI C 标准不相符的细节，比如这个未显式包含 stdint.h 的例子：http://t.cn/zO9AdsD 看来 ngx_openresty 有望很快移植到 Windows 环境了，嘿嘿 :)  
微博位置: 无
发布时间: 2012-04-07 13:37
点赞数: 0   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

1662:我现在在 Amazon EC2 上拉了 6 台 Small 实例来做各种 mysql 客户端的测试。1 台跑 weighttp 压测工具，1 台跑 web server，还有 4 台跑完全一样的 mysql 5.1，然后在 web server 一侧做到 4 个 mysql 节点的随机哈希。测试用例运行、数据采集以及日志生成是由几个很简单的 bash 脚本自动化的[呵呵]  
微博位置: 无
发布时间: 2012-04-07 12:31
点赞数: 0   转发数: 9   评论数: 1
发布工具: 微博 weibo.com

1663:非阻塞 I/O + I/O 多路复用方式还可以极大地节约内存。单个 php-fpm worker 进程说实话已经算小巧的了，但也扛不住随着并发度的提高而不断地 fork 新的进程出来。。。下图是 Amazon EC2 Small 实例上的 mysql 慢查询的实测结果。之所以 500 并发以后 php 内存减势放缓，是因为 CPU 资源已经耗尽了。  原图 
微博位置: 无
发布时间: 2012-04-07 12:15
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1664:从 Amazon EC2 的机器上访问 github 可真是快呀，pull 和 push 都有本地操作的快感。我隐约记得 github 本身也有在使用 AWS :)  
微博位置: 无
发布时间: 2012-04-07 10:16
点赞数: 0   转发数: 2   评论数: 15
发布工具: 微博 weibo.com

1665:CPU 上下文切换在 Amazon EC2 Small 实例上大约有 60us 的 CPU 时间开销（在我的本上大约有 15us 的样子）。阻塞 I/O 下拼多进程或者多线程确实伤不起啊。。。相比非阻塞 I/O + I/O 多路复用确实耗多了。在 EC2 集群上做了一个小测试，有图有真相  原图 
微博位置: 无
发布时间: 2012-04-07 08:55
点赞数: 0   转发数: 11   评论数: 16
发布工具: 微博 weibo.com

1666:今天花了不少时间在 openresty 邮件组里帮助 ngx_srcache 模块的一位用户排查他那里的随机缓存不命中的问题。结果他一直使用的是 crit/alert 这样高级别的 error_log 级别，于是在 nginx 错误日志里一直看不到任何 error 级别的出错消息，自然也就没法诊断问题了。无论如何已经证明这里并没有我的 bug.  
微博位置: 无
发布时间: 2012-03-31 16:21
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1667:我不会幻想着捉尽代码中的虫子，因为如果那样想的话，我会放弃很多工程上很实用的测试方法。只要是可以增加遇见虫子概率的工作，不论代价，我都会努力去实施，特别是那些可复用的高级测试工具的开发。虽说花上好几小时排查出一个很低级的 bug 会很郁闷，但虫子每少一个，这个世界就会变得更美好一点。  
微博位置: 无
发布时间: 2012-03-31 15:15
点赞数: 0   转发数: 8   评论数: 0
发布工具: 微博 weibo.com

1668:昨天在 Sparsh Gupta 同学的机器上追踪一个 nginx CPU 热循环的 bug，最后发现是因为他把一个 upstream 配置块中的 server 全都标记为 backup 所导致的：http://t.cn/zOSZfz6 在这种情况下 nginx 直接热循环不响应，也没有任何出错信息。浪费时间不偿命啊，呵呵。Maxim Dounin 随后附上了一个小补丁。  
微博位置: 无
发布时间: 2012-03-31 10:12
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1669:Amazon EC2 真是玩各种分布式集群试验的理想平台啊！比如ec2-describe-instances|grep agentzh|awk '{print $15}' 这一行命令就能拿我标记为 agentzh 的EC2集群的所有机器的内部 IP 地址列表，实在太爽！如果有 IT 公司愿意提供经费给他的员工在 EC2 上免费做各种试验，那真可谓是明智之举！  
微博位置: 无
发布时间: 2012-03-29 16:12
点赞数: 0   转发数: 7   评论数: 5
发布工具: 微博 weibo.com

1670:我汗啊，ngx_lua 的 markdown 文档太长了，多次导致 github 渲染项目首页超时，于是 github 就一劳永逸地取消了对 ngx_lua 项目首页的格式化渲染，直接显示 markdown 源码了：http://t.cn/a9q4te 崩溃啊崩溃！看来我得在README.markdown文件里直接放指向 wiki 文档页的链接了，@chaoslawful 觉得呢？  
微博位置: 无
发布时间: 2012-03-29 10:25
点赞数: 0   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

1671:bigplum 同学正在把 Lua 世界中的 Mongol 库（一个基于 LuaSocket 的 MongoDB 驱动）移植到 ngx_lua 环境：http://t.cn/zOXevwL 他说 ngx_lua cosocket API 对 LuaSocket 库的兼容性让他的移植工作变得非常简单  
微博位置: 无
发布时间: 2012-03-28 16:02
点赞数: 0   转发数: 10   评论数: 4
发布工具: 微博 weibo.com

1672:Lighttpd 的 http 压力测试工具 weighttp 看起来有点儿意思：http://t.cn/zOXrXtl 它支持多线程（从而可以充分利用多核），同时使用了 libev 库作并发调度，还支持 HTTP 1.1 keepalive，也会统计响应的 HTTP 状态码。唯一的美中不足是不能像 http_load 那样支持输入多个 URL 进行轮询。  
微博位置: 无
发布时间: 2012-03-28 14:10
点赞数: 0   转发数: 18   评论数: 9
发布工具: 微博 weibo.com

1673:刚刚在 ngx_lua 中提交了对 cosocket 的超时处理部分的细微优化：http://t.cn/zO6upGz 此更动在我的 lua-resty-redis 和 lua-resty-mysql 的简单性能测试中，可以带来大约 2.5% 的稳定的性能提升 [呵呵]  
微博位置: 无
发布时间: 2012-03-25 22:12
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1674:今天发布了 ngx_openresty 新的稳定版 1.0.11.28: http://t.cn/aCdPzo 已经有快两个月没有发布稳定版了 [呵呵] 完整的发布公告在这里：http://t.cn/zO68uyt 把这个稳定版踢出门之后，我又可以放手对 ngx_lua 模块的 cosocket 进行各种性能优化了   
微博位置: 无
发布时间: 2012-03-25 18:36
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1675:发表了博文 《Nginx 配置指令的执行顺序（十一）》 -  紧跟在 post-access 阶段之后的是 try-files 阶段。这个阶段专门用于实现标准配置指令 try_files 的功能，并不 http://t.cn/zO64EPG  
微博位置: 无
发布时间: 2012-03-24 12:07
点赞数: 0   转发数: 11   评论数: 2
发布工具: 新浪博客

1676:我现在养成了一个习惯，即回复私下发给我的用户邮件时，都会顺手抄送给 openresty google 邮件组（http://t.cn/zOctexB ），只要讨论不涉及敏感信息。这样其他用户就有机会看到，并从中获益。多亏了@ZoomQuiet 同学前一阵子的推动，我才又把这个邮件组给利用起来，呵呵。  
微博位置: 无
发布时间: 2012-03-24 10:31
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1677:@kai10k 一直在同步把我的连载教程译成英文。今天我终于让构建系统可以同时生成英文版的电子书了！预生成好的英文电子书可以从这里下载：http://t.cn/S6xzEP 最方便的自然还是单页 HTML 版的了：http://t.cn/zOiepiw 再次感谢@kai10k 的辛勤工作！[呵呵]  
微博位置: 无
发布时间: 2012-03-23 17:54
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1678:即便我现在终日赋闲在家，也总是会感慨时间之不足。想来，总是有自己感兴趣同时又很值得去做的事情，其本身已经是很幸福的了  我现在正努力拒绝不断地向我的 TODO 列表里添东西的巨大诱惑。。。  
微博位置: 无
发布时间: 2012-03-23 15:32
点赞数: 0   转发数: 2   评论数: 11
发布工具: 微博 weibo.com

1679:@ZoomQuiet 同学今天为 ngx_openresty 设计了一个 logo，又轻又快又坚固的“飞去来器”，同时像字母 L（Lua 的 L）。（说是同时像字母 N，我倒是没看出来。。。）大家看看，提提意见～[呵呵]  原图 
微博位置: 无
发布时间: 2012-03-22 18:34
点赞数: 0   转发数: 13   评论数: 11
发布工具: 微博 weibo.com

1680:刚刚在 ngx_srcache 模块的官方 wiki 文档中加了一节，专门介绍了如何让 ngx_srcache 和 ngx_redis/ngx_redis2 模块一起工作，以便让 redis 而不是 memcached 成为缓存层所使用的存储后端： http://t.cn/zOiXxum 当使用 redis 作为后端时，是不存在 memcached server 那样的 1MB 大小限制的   
微博位置: 无
发布时间: 2012-03-22 17:32
点赞数: 0   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

1681:刚刚发布了 ngx_openresty 开发版 1.0.11.27: http://t.cn/aCdPzo 包含了过去一周所有的 bug 修复，主要涉及 ngx_lua 与 ngx_echo 模块，以及 nginx 核心。详细的变更记录见这里：http://t.cn/zOh752q 感谢所有的贡献者和用户！[呵呵]  
微博位置: 无
发布时间: 2012-03-22 16:42
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1682:runner-mei 同学貌似最近在 review 我们的 ngx_lua 的源代码。他已经发现了两处代码级别上的小问题了，呵呵。细节见 http://t.cn/zOi74NT 与 http://t.cn/zOi74NH 赞啊！  
微博位置: 无
发布时间: 2012-03-21 21:07
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1683:工具真的太重要了！今天用我们的 etcproxy 工具轻松捕捉并修复了 Sergey A. Osokin 编写的 ngx_redis 模块中一处状态机越界读的问题：http://t.cn/zOJDlAV 没过多久，我又用我们的 mockeagain 工具捕捉到并修复了 nginx 底层的 ngx_http_upstream 基础设施中的一处微妙的状态机 bug. 工具的时代！  
微博位置: 无
发布时间: 2012-03-21 16:34
点赞数: 0   转发数: 17   评论数: 10
发布工具: 微博 weibo.com

1684:@定球呀球 （林青）今天给了我一个很大的惊喜，他终于为他基于 AJAX 网页的 slides.htm 幻灯片引擎（http://t.cn/SIjRJa ）添加了输出 PDF 的功能。比如我最近一次分享的幻灯片的 PDF 文件是这个样子的：http://t.cn/zOJhWXp 感谢“万能的球”！  
微博位置: 无
发布时间: 2012-03-19 17:51
点赞数: 0   转发数: 15   评论数: 5
发布工具: 微博 weibo.com

1685:我们在福州的第一个春天里感觉有些特别：昨天还是炎炎盛夏时，今天却又回到了瑟瑟深秋。。。  
微博位置: 无
发布时间: 2012-03-19 16:10
点赞数: 0   转发数: 0   评论数: 7
发布工具: 微博 weibo.com

1686:用户们对 ngx_lua 模块的共享内存字典越来越感兴趣，因为它在不少性能评测中都取得了很好的结果。于是，越来越多的对于功能上的新需求也不断涌现。但我不想让 ngx_lua 成为另一个 php，所以不想在 ngx_lua 核心中胡乱加东西了。我打算支持通过外部 Nginx C 模块来定制和扩展 Lua 的共享内存相关 API.  
微博位置: 无
发布时间: 2012-03-19 14:19
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

1687:发表了博文 《Nginx 配置指令的执行顺序（十）》 -  运行在 post-rewrite 阶段之后的是所谓的 preaccess 阶段。该阶段在 access 阶段之前执行，故名 preacces http://t.cn/zOM3whQ  
微博位置: 无
发布时间: 2012-03-16 22:21
点赞数: 0   转发数: 4   评论数: 3
发布工具: 新浪博客

1688:德国的 Alexander Kriegisch 同学今天给我的 Makefile::GraphViz 项目（http://t.cn/S4oi5g ）贡献了好几个补丁： http://t.cn/zOMEYGJ 当用户还在为我大学时代编写的开源项目提供反馈和补丁时，我的心情有些复杂。。。[呵呵]  
微博位置: 无
发布时间: 2012-03-16 20:20
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1689:前几日在起草《Nginx 配置指令的执行顺序（十）》的时候，意外发现 ngx_lua 模块的 access_by_lua 指令不能和 Nginx 核心的 satisfy any 配置语句一起工作，于是顺手修正了这个 bug，并把此修复包含在了 ngx_lua 0.5.0rc19+ 和 ngx_openresty 1.0.11.23+ 发布中 :) 写作的过程也是发现新 bug 的过程。  
微博位置: 无
发布时间: 2012-03-16 16:59
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1690:今天又发布了 ngx_openresty 开发版 1.0.11.25: http://t.cn/aCdPzo 包含了 nginx 官方的一个涉及安全的补丁：http://t.cn/zOMJNoj 同时修正了ngx_srcache 模块中一条出错信息中的小错误。完整的更动列表见 http://t.cn/zOh752q  
微博位置: 无
发布时间: 2012-03-16 11:47
点赞数: 0   转发数: 7   评论数: 1
发布工具: 微博 weibo.com

1691:刚刚发布了 ngx_openresty 开发版 1.0.11.23: http://t.cn/aCdPzo 完整的变更日志在这里：http://t.cn/zOh752q 感谢所有的用户和贡献者 :)  
微博位置: 无
发布时间: 2012-03-15 18:19
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

1692:现在采纳我媳妇儿的建议，对于连载的 Nginx 教程，我打算尽量每两天正式发表一篇，看看能坚持多久，呵呵。GitHub 仓库里一般会有一二篇更新的初稿，但正式发表前还会经过我和我媳妇儿的很多修订：http://t.cn/zOI9ZhU 推荐大家阅读正式发表后的版本：http://t.cn/S4kape  
微博位置: 无
发布时间: 2012-03-14 10:46
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1693:发表了博文 《Nginx 配置指令的执行顺序（九）》 -  紧接在 server-rewrite 阶段后边的是 find-config 阶段。这个阶段并不支持 Nginx 模块注册处理程序，而是由 N http://t.cn/zOIxrlh  
微博位置: 无
发布时间: 2012-03-13 23:37
点赞数: 0   转发数: 13   评论数: 5
发布工具: 新浪博客

1694:下午和@chaoslawful 在IM上详细讨论了一下 ngx_lua 下一个比较大的 TODO，即用户级 coroutine 的支持。很快，我发现这个 coroutine 接口能实现的功能和我期望的不太一样，我期望的是类似 thread 和 Erlang 轻量级进程那样的东西，比如这个虚构的 Lua 脚本示例：http://t.cn/zOIGWIx  
微博位置: 无
发布时间: 2012-03-13 17:24
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1695:多多参加开源世界的重要项目，多多参加业界的高质量聚会进行分享，就容易有许多“天上掉下来的工作”，其中也不乏非常好的工作机会。这是我自己的切身体会，对于多年前还身为学生的我来说，亦是如此 :)  
微博位置: 无
发布时间: 2012-03-13 16:01
点赞数: 1   转发数: 16   评论数: 8
发布工具: 微博 weibo.com

1696:tocer 同学刚刚为 ngx_openresty 打了针对 archlinux 系统的安装包：http://t.cn/zOflBEP  
微博位置: 无
发布时间: 2012-03-12 11:39
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1697:发表了博文 《Nginx 配置指令的执行顺序（八）》 -  前面我们详细讨论了 rewrite、access 和 content 这三个最为常见的 Nginx 请求处理阶段，在此过程中，也顺便介绍了运 http://t.cn/zOfoy7s  
微博位置: 无
发布时间: 2012-03-11 23:18
点赞数: 0   转发数: 30   评论数: 7
发布工具: 新浪博客

1698:正坐在回福州的动车上。刚刚突然码性大起，很快就在我的本上为 lua-resty-redis 库添加了对 redis pipelining 的支持，总代码提高到了 212 行。这个特性应该是这个库的最后一个 TODO 了。以后真的没有再用 ngx_redis2 的理由了  
微博位置: 无
发布时间: 2012-03-11 15:10
点赞数: 0   转发数: 13   评论数: 6
发布工具: S60客户端

1699:刚刚发现我被 wiki.nginx.org 的管理员给 block 了，提示理由是“Spamming links to external sites”，我晕。。。我只是多加了一些 Nginx 相关资源的站外链接而已。。。至于么。。。心情不好了，今儿不发表新 Nginx 教程了。。。  
微博位置: 无
发布时间: 2012-03-09 22:53
点赞数: 0   转发数: 4   评论数: 12
发布工具: 微博 weibo.com

1700:在去厦门的动车上，把昨晚起草的 Nginx 教程的手稿录入机器。。。确实有两篇以上的长度 G15沈海高速  显示地图 原图 
微博位置: 无
发布时间: 2012-03-09 16:12
点赞数: 0   转发数: 2   评论数: 8
发布工具: S60客户端

1701:今晚伴着雨声，终于动笔起草完了新的 Nginx 教程，大约是两篇左右的篇幅，仍然属于《Nginx 配置指令的执行顺序》系列，明天会正式录入机器并请我媳妇儿进行例行审阅。我们将继续介绍余下的那些 Nginx 请求处理阶段以及相关的一些模块和配置指令。写作的感觉很棒，像抄书一样有灭浮去躁之功效[呵呵]  
微博位置: 无
发布时间: 2012-03-08 22:36
点赞数: 0   转发数: 4   评论数: 13
发布工具: 微博 weibo.com

1702:刚刚发布了 ngx_openresty 开发版 1.0.11.21：http://t.cn/aCdPzo 包含了最近几天所有的新特性和 bug 修复（涉及 lua-resty-redis 库, lua-resty-string 库, 和 ngx_lua 模块）：http://t.cn/zOh752q 感谢所有的用户和贡献者 :)  
微博位置: 无
发布时间: 2012-03-07 18:09
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1703:刚刚把 SSL cosocket API 也加入到了 ngx_lua 模块的短期 TODO 列表中：http://t.cn/zOcS13u 未来有了这个，MySQL 和 PostgreSQL 数据库传输协议的 SSL 支持，以及 HTTPS 就很容易搞了。欢迎有志之士贡献补丁哈～  
微博位置: 无
发布时间: 2012-03-07 17:22
点赞数: 0   转发数: 4   评论数: 0
发布工具: 微博 weibo.com

1704:欢迎大家到 OpenResty 邮件列表讨论 ngx_openresty 乃至 nginx 本身的各种有趣的问题：http://t.cn/zOctexB 感谢 Zoom.Quiet 同学的推动。  
微博位置: 无
发布时间: 2012-03-07 10:27
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1705:前面几周的 bug 报告“洪峰”终于过去了，现在我又迎来了新一轮的 feature request 高潮。我不得不在我的 Gmail 里建了一个 TODO 标签以追踪所有相关的邮件。我担心照此趋势，我每日处理邮件的速度终将落后于收到新邮件的速度。我现在终于可以理解为何 Nginx 的老大 Igor Sysoev 同学几乎不回邮件了。  
微博位置: 无
发布时间: 2012-03-07 09:21
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1706:今天在 ngx_lua v0.5.0rc17 中为共享内存字典添加了 flush_all 命令，类似 memcached 的 flush_all 命令的作用，即清空所有项目：http://t.cn/zOcL49Q 非常感谢 Weiqiang (strongpapa)同学提供的补丁。后面打算再添加一个 keys() 方法以返回所有的 key.  
微博位置: 无
发布时间: 2012-03-06 23:21
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1707:刚刚应@lhmwzy 的需求，为 lua-resty-string 库添加了新模块 resty.sha224, resty.sha256, resty.sha384, 和 resty.sha512，从而暴露了 OpenSSL 的整个 SHA-2 哈希函数集的 C API：http://t.cn/zOtY19N  
微博位置: 无
发布时间: 2012-03-05 23:12
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

1708:最近一个关于 ngx_lua 的 FAQ 是在 nginx 请求中如何 sleep 一小段指定的时间。目前虽然没有在 ngx_lua 中实现专门的 ngx.sleep()，但可以暂时通过 ngx.location.capture() + echo_sleep配置指令实现之。ngx_echo 模块的 echo_sleep 指令可以支持毫秒精度的时间，且是非阻塞的：http://t.cn/zOtWJFp  
微博位置: 无
发布时间: 2012-03-05 21:19
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1709:刚刚应 Chris Love 的请求，为 lua-resty-redis 添加了对 evalsha 命令的支持：http://t.cn/zOtWVx2 这个全新的 evalsha 命令并没有单独列出在 redis 文档的命令列表中，而是作为 eval 命令的一个变种，在 eval 的文档中顺带着介绍的：http://t.cn/Sf10u4  
微博位置: 无
发布时间: 2012-03-05 21:16
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1710:每日总是先忧用户之所忧，先喜用户之所喜，长年累月下来自然很容易会感觉辛苦了，呵呵。所幸最近一连几日没有看邮箱，刚刚花了几个小时竟也把邮件都处理完了，没看到什么需要费劲解决的“硬茬子”，嘿嘿。  
微博位置: 无
发布时间: 2012-03-05 21:10
点赞数: 0   转发数: 1   评论数: 14
发布工具: 微博 weibo.com

1711:我已经在我维护的 libdrizzle 1.0 源码包中取消了 ./configure 脚本对 gcc 4.2+ 的版本检查（目前只检查 gcc 4.0+）。该源码包的位置在这里：http://t.cn/S44D8L 具体安装方法见这篇文档：http://t.cn/aN0npE  
微博位置: 无
发布时间: 2012-03-01 16:41
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1712:刚刚修复了 ngx_redis2 模块和 lua-redis-parser 库不能解析 redis 的“nil multi bulk reply”的 bug，多谢@0597虾 的报告。像 blpop 这样的 redis 命令就可能会返回这种东西。而新近开发的 lua-resty-redis 库中则无此问题。已包含在了 ngx_openresty 开发版 1.0.11.19 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2012-03-01 16:04
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1713:刚刚发布了 ngx_openresty 开发版 1.0.11.17: http://t.cn/aCdPzo 新增了 lua-resty-memcached, lua-resty-redis, lua-resty-mysql, lua-resty-upload 和 lua-resty-string 这 5 个新组件，同时升级了 ngx_lua 到最新版。详细的更动日志请见 http://t.cn/zOh752q 现在压缩包的大小提高到了 2.7 MB.  
微博位置: 无
发布时间: 2012-02-29 15:49
点赞数: 0   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

1714:好吧，我刚刚自己在 ngx_openresty 中把 nginx 核心中硬编码的子请求数上限提高到 100，昨天 Maxim Dounin 就在官方仓库里把这个上限提高到了 200：http://t.cn/zOGBIob 看来群众的呼声力量大啊。。。  
微博位置: 无
发布时间: 2012-02-29 11:28
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1715:下图是今天我的任务列表，呵呵。每天都有这样一个列表，完成一项就勾一项，特别满足  原图 
微博位置: 无
发布时间: 2012-02-28 21:11
点赞数: 0   转发数: 12   评论数: 16
发布工具: S60客户端

1716:Lanshun Zhou 今天报告了 nginx 红黑树查找操作中的一个 bug 可能会导致内存泄漏：http://t.cn/zOGMn0b 我刚刚将该补丁也应用到了 ngx_lua 的共享内存字典实现中：http://t.cn/zOGMn04 又是 premature optimization 惹的祸，呵呵。  
微博位置: 无
发布时间: 2012-02-28 14:53
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1717:刚刚创建了 lua-resty-string 项目：http://t.cn/zOGhz0M 使用 LuaJIT 的 FFI 特性可以单纯用 Lua 代码暴露 nginx 中的简单 C API，不必去搞 Lua C 库. 目前已暴露了 OpenSSL 的 MD5 和 SHA1 接口，还有 nginx 核心中的 ngx_hex_dump 函数，都极为简单。我以后再也不在 ngx_lua 中随便添加这种 API 了  
微博位置: 无
发布时间: 2012-02-27 21:35
点赞数: 0   转发数: 2   评论数: 13
发布工具: 微博 weibo.com

1718:Adam Kennedy 在 CPAN 上的模块数排名一度位居第一，许多像 PPI 这样著名的 Perl 模块都是他开发的：http://t.cn/zObdpsf Adam 多年前曾经感叹，许多 CPAN 作者犯下的最大的错误便是没有及时响应用户的反馈，许多都慢慢烂掉，而他自己的许多项目很快都由他的用户来驱动。他说他只扮演着发起人的角色。  
微博位置: 无
发布时间: 2012-02-27 17:38
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1719:Nginx自带的fastcgi_params文件里有这么一行“fastcgi_param REQUEST_METHOD $request_method”，而 $request_method 变量的值永远是主请求的方法名称，因此这意味着对于 POST 子请求访问 ngx_fastcgi 模块的情况就会出问题。解决的办法很简单，就是用 ngx_echo 模块的 $echo_request_method 替代之。  
微博位置: 无
发布时间: 2012-02-27 17:11
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

1720:文本协议确实要容易调试得多，记得原来做 lua-resty-mysql 的时候，经常一个一个去数字节（幸好，它还没让我去数比特，呵呵），现在调试 fastcgi 协议实现时，勉强还能用 nc，因为光看看其中的 ascii 字节，倒也经常足够解决问题了 :)  
微博位置: 无
发布时间: 2012-02-27 16:37
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1721:越是追求完美，越是能感觉到与完美之间的巨大差距，或许最有益的便是此追求之过程，而非达到彼虚幻之结果。  
微博位置: 无
发布时间: 2012-02-27 15:44
点赞数: 1   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

1722:为明天的 Tech-Club 分享胡乱准备了一套幻灯片：http://t.cn/zO4enIi （在 Web 浏览器中打开此地址后，使用方向键翻页）幻灯片主要是为不在场的朋友准备的，呵呵，许多想讲的东西都不能反映在幻灯上。时间仓促，也没做什么有趣的图片或动画。无论如何，算是第一次覆盖到我最近半年多以来所做的工作。  
微博位置: 无
发布时间: 2012-02-25 23:47
点赞数: 0   转发数: 35   评论数: 11
发布工具: 微博 weibo.com

1723:刚刚发布了 ngx_openresty 开发版 1.0.11.15: http://t.cn/aCdPzo 包含了过去十天所有的 bug 修复和代码优化，主要集中在 ngx_lua 模块。完整的变更日志见这里：http://t.cn/zOh752q 各个 lua-resty-* 库尚未包含在 ngx_openresty 软件包中，后面得空了我再添加。[呵呵]  
微博位置: 无
发布时间: 2012-02-24 14:11
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1724:若方案A为ngx.location.capture+ngx_drizzle+lua-rds-parser，方案B为lua-resty-mysql，则在我的本上，对于单行结果集，方案A为 7883 q/s，而方案B为 6440 q/s；对于百行以上的结果集，方案A为 1278 q/s，而方案B为 1150 q/s.二者差距已不是很大。后面搞搞 lua-resty-mysql-native应该可以反超 A  
微博位置: 无
发布时间: 2012-02-24 11:55
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1725:在使用数据库时，大多数工程师都会特别注意具体查询本身的执行效率，其实昂贵的数据库连接的利用率也很重要，当前端应用抓着 DB 连接去做其他事情（比如访问其他耗时后端服务），这些连接在这段时间就是白白空闲着，与之关联的许多后端资源也白白浪费。因此当使用 lua-resty-*时应及时让空闲连接入池。  
微博位置: 无
发布时间: 2012-02-23 22:14
点赞数: 0   转发数: 7   评论数: 14
发布工具: 微博 weibo.com

1726:老婆正在激情四射地给机场地勤工程师们上英语课，我则躲在教室外面思考 lua-resty-mysql 库的优化方法。刚刚想到一个用 Lua 来 JIT Lua 的思路，感觉很有前途的样子，回头手上有机器了测量一下效果，呵呵。 连江中路  显示地图 
微博位置: 连江中路
发布时间: 2012-02-23 20:47
点赞数: 0   转发数: 2   评论数: 3
发布工具: S60客户端

1727:刚刚仿照 libdrizzle的做法，对 lua-resty-mysql 库中的little-endian转换器进行了优化，现在对于小结果集查询，整体有稳定的 3% 以上的吞吐量提升。补丁在这里：http://t.cn/zOU0tvg 后面再搞一个 lua-resty-mysql-native 库看来还是有必要的，因为纯Lua实现在性能上要超越 ngx_drizzle 还有些难度。  
微博位置: 无
发布时间: 2012-02-23 18:21
点赞数: 0   转发数: 0   评论数: 10
发布工具: 微博 weibo.com

1728:今儿一早又收到了 Brian Akins 同学的针对 ngx_lua 模块的一个小补丁，修正了共享内存字典接口中的一个小 bug: http://t.cn/zOUKavW 即当同时指定 exptime 参数和 flags 参数时，exptime 参数原先会被不恰当地忽略 :)  
微博位置: 无
发布时间: 2012-02-23 15:13
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1729:这两天在 LuaJIT 的作者 Mike Pall 的帮助下，我对 ngx_lua 的接收缓冲区管理进行了重写。现在不再使用 Lua 自己的 luaL_Buffer 接口，而是使用我们自己编写的循环利用的定长缓冲区链表。原先基于 luaL_Buffer 的实现是错误的，因为 luaL_Buffer 要求 Lua 栈不被修改，而这里必然要跨越 yield 来使用。  
微博位置: 无
发布时间: 2012-02-22 23:23
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1730:和媳妇儿的几个同学打羽毛球，看来我还是乒乓球打得比较好~ 宫巷  显示地图 原图 
微博位置: 宫巷
发布时间: 2012-02-22 20:38
点赞数: 0   转发数: 0   评论数: 4
发布工具: S60客户端

1731:感谢@wangbin579 同学发现了ngx_lua 模块中的多处小问题（包括@chaoslawful 老师当年写的代码注释中的拼写错误），呵呵：http://t.cn/zOUPXQf 期待来自@wangbin579 的更多补丁和问题报告   
微博位置: 无
发布时间: 2012-02-22 16:44
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1732:刚刚磁盘满了，vim 写 swap 文件报错，结果我一手贱，打了 :w! 命令。。。于是文件被截断。。。写了大半天的代码都丢失了。。。vim 备份文件里也是被截断了的版本。。。  
微博位置: 无
发布时间: 2012-02-22 14:17
点赞数: 0   转发数: 10   评论数: 14
发布工具: 微博 weibo.com

1733:今天尝试从源码构造 gcc 3.2 失败，因为我现有的 gcc 二进制版本 4.4 和 4.6 都太新了。。。gcc 的 bootstrap 还真是纠结。。。  
微博位置: 无
发布时间: 2012-02-19 21:30
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1734:好吧。。。一个断断续续跟踪了好几天的疑似 ngx_lua cosocket 连接池的 bug 原来并不存在。。。是因为我的测试用例里有一个小错误。。。汗啊。。。哈哈！确实 bug 无处不在呀～关键还是要有手段高效地追踪问题 :)  
微博位置: 无
发布时间: 2012-02-19 14:09
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1735:刚刚加强了 ngx_lua cosocket 中将空闲连接放入连接池时的状态检查和出错处理，即显式检查 cosocket 接收缓冲区以及系统 socket 接收缓冲区中是否存在未消耗掉的可读数据，如果有，则表明连接状态可疑，于是拒绝入池。见这里的两个针对性的测试用例：http://t.cn/zOLTfEx  
微博位置: 无
发布时间: 2012-02-19 13:50
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1736:epoll ET和rtsig在Nginx核心中被称为“贪婪事件”接口，即必须一直读到EAGAIN才能放心地去等下一个可读事件，即使当前的recv调用返回的数据少于指定的接收缓冲区的大小。于是使用epoll ET时，读事件结构通常都会置“就续"标志，于是连接在入连接池之前都需要一次额外的系统调用来判断是否为过期事件。  
微博位置: 无
发布时间: 2012-02-19 13:21
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1737:刚刚修复了@欧远宁 报告的 ngx_lua 子请求接口中的一个小问题，即原先GET和HEAD等方法的子请求也会自动继承父请求的请求体（如果有的话），现在改成只有POST和PUT子请求在未显式指定请求体时，才会自动继承父请求的请求体。此修复（连同今天的其他修复）都已包含在 0.5.0rc13 中：http://t.cn/zOP3mpl  
微博位置: 无
发布时间: 2012-02-18 22:56
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1738:刚刚修复了 lua-resty-mysql 库不能正确解析行首第一个字段为 NULL 或者大于 250 字节的数据串的结果集的 bug. 多谢@lhmwzy 同学的报告 :) 该修复已包含在 v0.02 发布中：http://t.cn/zOLXt9c  
微博位置: 无
发布时间: 2012-02-18 21:49
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1739:今天起床时想到 ngx_lua cosocket 中还有一个会导致诡异现象的 bug，下午也通过一个精心设计的测试用例确认并修复了。如果使用边沿触发的事件接口，对于空闲状态的 cosocket 对象，如果之前曾做过读操作，并且此时突然有可读事件到来，则会导致数据被意外读取，只因我先前没有及时重置读写处理程序 :)  
微博位置: 无
发布时间: 2012-02-18 18:20
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1740:前两天一哥们报告了最新的 ngx_lua 模块无法被 gcc 3.2 编译的问题。原来 gcc 3.2 不支持在宏调用的参数列表中间使用 #if 这样的宏指令。我隐约记得微软的 C 编译器好像亦有此限制。看来后面有必要再从源码编一个 gcc 3.2 用于兼容性测试了，我的本儿上目前只有 4.4 和 4.6 这两种 gcc 版本  
微博位置: 无
发布时间: 2012-02-17 23:10
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1741:今天修复了ngx_lua cosocket中的一处很傻的bug：我在receive方法返回时没有及时清除作读超时检测用的定时器，从而在调用过receive之后让cosocket对象保持空闲的时间超过读超时，定时器就会触发，误报出错误来。感谢@欧远宁 在生产环境中捕捉到了这个 bug  该修复已包含在 ngx_lua 0.5.0rc11 中。  
微博位置: 无
发布时间: 2012-02-17 22:48
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1742:刚刚用我的博客评论数据表简单对比测试了一下 ngx_drizzle + ngx_rds_json 组合与 ngx_lua + lua-resty-mysql + lua-cjson 组合间的性能差别。对于 15.4KB 大小 103 行的结果集输出，前者跑一个 worker 进程在我的本上稳定在 1940 q/s，而后者是 1400 q/s. 如果不用 lua-cjson 输出，则是约 1600 q/s.  
微博位置: 无
发布时间: 2012-02-16 20:20
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

1743:刚刚用我的个人博客的评论数据测试我的 lua-resty-mysql 驱动时，发现当字段值长于 255 个字节时，就超时了。仔细一看，原来我原先用 Lua 随便写的 little endian 解析器完全写错了，丢人啊，立马修复了这个问题。同时标记了 v0.01 版：http://t.cn/zO2WSZh  
微博位置: 无
发布时间: 2012-02-16 20:01
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1744:我现在越来越认同 Don Knuth 的“可重复编辑的代码”（re-editable code）比“可复用的代码”要有意义得多。大多数时候，可复用只是一个美好愿景或者意外惊喜（happy accident），可编辑、易修改才意味着无限的可能性与实实在在的自由。  
微博位置: 无
发布时间: 2012-02-16 15:25
点赞数: 1   转发数: 13   评论数: 10
发布工具: 微博 weibo.com

1745:ngx_lua 模块的 cosocket API 一下子让非阻塞客户端库的开发变得非常容易。我前面写的 mysql, memcached 和 redis 驱动都能轻易通过我们的工具链的测试，这在之前是很难想象的。libdrizzle 的早期版本就曾被我们的etcproxy工具捕捉到其状态机的一个诡异bug，而libpq库至今尚未通过我的mockeagain测试。  
微博位置: 无
发布时间: 2012-02-16 15:18
点赞数: 0   转发数: 1   评论数: 9
发布工具: 微博 weibo.com

1746:我已经拜托@珣新 仿照我的 lua-resty-mysql 库去搞 lua-resty-postgresql 库了。基于 ngx_lua 的 cosocket API 实现一个非阻塞的 Pg 驱动应该也就几百行 Lua 代码的工作量，况且 Pg 的传输协议貌似也有比较详细的官方文档：http://t.cn/zO29z8K 我不想再和 Pg 官方的 libpq 库纠结了，真没必要的说~  
微博位置: 无
发布时间: 2012-02-16 14:50
点赞数: 0   转发数: 0   评论数: 10
发布工具: 微博 weibo.com

1747:这几日署名“外面的世界”的国内用户报告了我的 ngx_memc 模块在 Windows 上使用微软的 cl 编译器构造时产生的编译错误，甚是有趣。看来是时候将 ngx_openresty 移植到 Windows 平台了  
微博位置: 无
发布时间: 2012-02-16 12:10
点赞数: 0   转发数: 1   评论数: 15
发布工具: 微博 weibo.com

1748:今天对 ngx_lua 的 cosocket 所做的一个简单优化是在读事件正在被监听并且没有就续的读事件时，跳过 recv 调用。这样经常可以节约一次系统调用。我自己的一个小例子在压测中，因此从 8500+ qps 提升到了 8600+ qps.  
微博位置: 无
发布时间: 2012-02-15 22:46
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1749:刚刚在 ngx_lua v0.5.0rc10中优化了下游输出缓冲区的管理策略，现在它会自动回收和循环利用 chainlink 和 buf，这样便可支持向下游流式输出大数据的场景，同时对于较小数据量的响应体输出而言，也可以有效减少缓冲区动态分配的次数，从而让性能有可测量的提升（在我一个小例子中有稳定的 4% 的提升）。  
微博位置: 无
发布时间: 2012-02-15 22:42
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1750:昨天修复了@欧远宁 同学前天报告的 cosocket API 中的一个 bug. 之前，cosocket API不能在子请求接口 ngx.location.capture 等之前使用。后来此问题被定位到 tcpsock:send()方法中忘置了一个标志位。该修复已包含在最新的 ngx_lua 0.5.0rc7 和 ngx_openresty开发版 1.0.11.11 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2012-02-15 15:52
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1751:刚刚修复了一下 lua-resty-mysql库通过unix domain socket连接本地MySQL服务器的支持。只要为 connect 方法的选项参数表指定 path 选项，就可以了，例如 db:connect{ path="/var/run/mysql/mysql.sock",user="foo",password="bar",database="test" } 就可以了。这个特性也一直是 ngx_drizzle 的 TODO.  
微博位置: 无
发布时间: 2012-02-14 11:30
点赞数: 0   转发数: 0   评论数: 9
发布工具: 微博 weibo.com

1752:刚刚给我的 lua-resty-mysql 库添加上了比较像样的 markdown 格式的文档，呵呵：http://t.cn/zOwDami  
微博位置: 无
发布时间: 2012-02-13 22:00
点赞数: 0   转发数: 1   评论数: 10
发布工具: 微博 weibo.com

1753:刚刚发布了 ngx_openresty 开发版 1.0.11.9：http://t.cn/aCdPzo 包含了 ngx_coolkit 0.2rc1 模块，并升级了 ngx_lua 模块到最新的 0.5.0rc6 版。这个版本的 ngx_lua 实现了新接口 ngx.sha1_bin：http://t.cn/zOAamGm 我的 lua-resty-mysql 库用到了这个接口，同时也用到了 LuaJIT 的 bit 标准库。  
微博位置: 无
发布时间: 2012-02-13 21:05
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

1754:刚刚又在lua-resty-mysql库中修正了set_keepalive方法和connect方法的实现，现在基本上可以使用ngx_lua cosocket连接池来用作 MySQL 连接池了。目前这个库一共不过493行Lua代码（不含空行和注释）。未来需要给cosocket连接池中的连接加上绑定用户属性的支持，这样mysql连接的许多状态信息也可以保持 :)  
微博位置: 无
发布时间: 2012-02-13 18:30
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1755:刚刚写了一点代码就给 lua-resty-mysql 库添加了多结果响应和多语句查询的支持。现在可以在单个 SQL 查询中使用逗号分隔多个 SQL 语句，无论是 SQL DDL 语句还是 SQL DML 语句都可以。具体用法请见这里的测试用例：http://t.cn/zOAMXdn 这样，MySQL 事务以及调用 MySQL 存储过程现在应当都能工作了！  
微博位置: 无
发布时间: 2012-02-13 16:28
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1756:今天把我基于 ngx_lua cosocket 的 lua-resty-mysql 库推到了 github 仓库上：http://t.cn/zOwDami 同时实现了非结果集查询的功能，比如 drop table 之类，见这个已经通过的测试用例：http://t.cn/zOwDamJ 改明儿再搞结果集查询，即 select 查询的支持。  
微博位置: 无
发布时间: 2012-02-12 18:56
点赞数: 0   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

1757:刚刚修复了 ngx_lua 模块自 v0.5.0rc1 起引入的一个小衰退，即和 nginx 0.8.x 一起编译时会有错误。原来 1.0.0 之前的 nginx 核心中函数 ngx_strerror 名为 ngx_strerror_r. 多谢欧远宁同学的报告[呵呵]  
微博位置: 无
发布时间: 2012-02-12 17:18
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1758:今天开做 lua-resty-mysql 库，现在已经可以通过用户名和密码建立到远方 mysql 5.5 的数据库连接了。明天再接着实现一下简单的 select 查询功能 :) 用纯 Lua 来解析二进制 packet 还是不及 C 语言痛快和高效，未来可以考虑用 LuaJIT FFI 内联一些专门的 C 函数调用来做 packet解析，从而保证极限性能。  
微博位置: 无
发布时间: 2012-02-11 22:07
点赞数: 0   转发数: 6   评论数: 14
发布工具: 微博 weibo.com

1759:西湖公园踏青，水仙郁金香梨花开得正旺~ 光荣路  显示地图 原图 
微博位置: 光荣路
发布时间: 2012-02-11 14:49
点赞数: 0   转发数: 0   评论数: 2
发布工具: S60客户端

1760:付超群同学提供性能测试结果称，基于 ngx_lua cosocket API 的 lua-resty-redis 库在 8 核服务器上用 ab 压测 nginx 的吞吐量达到 4w q/s，竟然明显高于 ngx_redis2 模块的 3.5w q/s，这倒是有些意外。难道 Ragel 生成的状态机 C 代码的开销会如此明显？  
微博位置: 无
发布时间: 2012-02-11 11:51
点赞数: 0   转发数: 6   评论数: 5
发布工具: 微博 weibo.com

1761:今天在动车上仔细阅读了一下 MySQL 线路协议，发现虽然字段众多，细节繁杂，但其根本的二进制 Packet 布局规则却是极方便解析的。不像某些考虑人类可读性的文本协议，还需要复杂的流式解析技术。感觉 lua-resty-mysql 库的大部分代码都可以从文档自动生成了 http://t.cn/zOZDrMe  显示地图 
微博位置: 无
发布时间: 2012-02-10 20:45
点赞数: 1   转发数: 9   评论数: 6
发布工具: S60客户端

1762:一般来说，使用的语言和工具的抽象水平越高，对性能问题的控制力也就越差，程序的优化空间也就越小，除非…除非…我们拥有对整个软件栈的绝对的理解力和控制力。对于各种功能方面的诡异问题其实也同样如此。死守在软件栈这座金字塔顶端的人既是幸运的，也是最不幸的  http://t.cn/zOZBgax  显示地图 
微博位置: 无
发布时间: 2012-02-10 17:57
点赞数: 1   转发数: 20   评论数: 5
发布工具: S60客户端

1763:刚刚在动车上思考了一下 lua-resty-http 库的实现。基于现有的 ngx_lua cosocket API 实现 HTTP 1.0 和HTTP 1.1客户端还是极容易的，无论是chunked编码解析还是 HTTP keepalive. 还能方便地实现流式输入和输出。 天山支路  显示地图 
微博位置: 天山支路
发布时间: 2012-02-09 15:35
点赞数: 0   转发数: 8   评论数: 5
发布工具: S60客户端

1764:Nodejs 的内部 OS 线程池确实太容易被滥用了，本是为了规避那些不得不阻塞的文件 I/O 之类的操作，却被一些哥们用于和数据库等东西的网络通信，并发能力上立马退化成 Apache worker mpm 了，与 php-fpm 的 I/O 模型也差不多了，悲剧啊。 82省道  显示地图 
微博位置: 82省道
发布时间: 2012-02-09 10:31
点赞数: 0   转发数: 3   评论数: 17
发布工具: S60客户端

1765:儿时写作文总希望多年后再读时还能觉得有意义，所以养成了反复修改和字斟句酌的习惯；后来大一些时读《程序设计实践》又认识到反复打磨代码的重要意义，从此特别喜欢不断地重写和调整自己写的代码。我发现正是在此过程中自己进步最明显，而不是在尝试做全新东西的时候。 G15沈海高速  显示地图 
微博位置: G15沈海高速
发布时间: 2012-02-09 09:37
点赞数: 1   转发数: 20   评论数: 6
发布工具: S60客户端

1766:刚刚修正了 ngx_coolkit 模块中的内建变量 $remote_passwd 不能从用户Lua代码读取的问题：http://t.cn/zOzn0k0 多谢@陈小玉-smallfish 的报告。@120斤的大青蛙 先前就曾和我纠结过Nginx变量的NGX_HTTP_VAR_NOHASH标志的问题；置了这个标志的变量就不能通过ngx_http_get_variable函数动态获取了[呵呵]  
微博位置: 无
发布时间: 2012-02-08 15:12
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1767:每天早上醒来时，脑袋里迷迷糊糊地就会自动回放和扫描前一天编写的那些代码。待全醒时，一般已经捕捉到一些有趣的 bug 或者疏漏了。所以起床第一件事几乎总是把这些问题先快速地记录在小本子上，然后再去洗漱  
微博位置: 无
发布时间: 2012-02-08 12:10
点赞数: 0   转发数: 4   评论数: 20
发布工具: 微博 weibo.com

1768:Brian Akins尝试在我的lua-redis-parser库中使用Lua自己的 luaL_Buffer操作来取代我原先的单次malloc内存分配策略，结果他的 benchmark结果显示比原先慢了50%，见这里的讨论: http://t.cn/zOzl8tt 他有些吃惊。其实宁可多付出一些 CPU 资源以事先计算好缓冲区的总大小，也比多几次动态分配高效得多。  
微博位置: 无
发布时间: 2012-02-08 09:25
点赞数: 1   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1769:Lua 比较让人郁闷的一个地方是不能将 nil 值直接存储在 table 中。所以像 lua-cjson 这样的库特意引入了cjson.null这样特殊的 userdata 值来专门表示"null"值。为方便起见，我在ngx_lua 0.5.0rc5中添加了ngx.null常量来达到同样的目的，本质上它就是一个 NULL 指针作为轻 userdata，和cjson.null相等。  
微博位置: 无
发布时间: 2012-02-07 20:41
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1770:今天一位用户告诉我 ngx_redis2 模块和基于 ngx_lua cosocket 的 lua-resty-redis 库，在他的 8 核服务器上通过 unix domain socket 连接 redis 服务器进行简单查询，使用 ab -k -c300 都可以压到单机 3 万 qps 以上。他说他先前写的 php 应用达到 3k qps 就顶天了。看来 cosocket API 的性能确实不错.  
微博位置: 无
发布时间: 2012-02-07 18:51
点赞数: 0   转发数: 31   评论数: 6
发布工具: 微博 weibo.com

1771:Brain Akins 同学今天一早又发给我一个小补丁，修复了 ngx_lua 修改 Last-Modified 响应头功能的一个小 bug: http://t.cn/zOzfTpt Brain 同学的补丁总是会带上相应的测试用例，真是无可挑剔 :) 每天应用这种质量的补丁，也是挺小资的生活了  
微博位置: 无
发布时间: 2012-02-07 15:23
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1772:@chaoslawful 和我在 MySQL 2012 大会上即将于 4 月 11 日作的英语演讲：http://t.cn/zOz57X2 等当前这一波开发完成之后，就得好好开始准备了 :P 我很想在此之前搞定 lua-resty-mysql 库，这样到时候也可以 show 一下，呵呵。  
微博位置: 无
发布时间: 2012-02-07 12:23
点赞数: 0   转发数: 9   评论数: 25
发布工具: 微博 weibo.com

1773:今天初步完成了 lua-resty-redis 库的开发，一个基于 ngx_lua cosocket API 的同步非阻塞的 redis 客户端库：http://t.cn/zOzzAMe 160 行纯 Lua 代码（不含空行和注释）就已支持了所有的 redis 命令：http://t.cn/hbnMt5 目前就差 pipelining API 了，改天再添加一下，应当也极简单 ;)  
微博位置: 无
发布时间: 2012-02-06 22:48
点赞数: 0   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

1774:在福州森林公园散步时，看到这片芦苇，不禁想起夏达《子不语》中那片迷人的芦苇海。@夏达  原图 
微博位置: 无
发布时间: 2012-02-06 16:53
点赞数: 0   转发数: 0   评论数: 2
发布工具: S60客户端

1775:刚刚为 ngx_lua cosocket 对象的 send 方法实现了对Lua字符串 table 的支持，这样在向socket发送请求时就不必在 Lua 级别进行昂贵的字符串拼接操作了（现有的ngx.say和ngx.print方法也早就支持了这个特性）。该特性已包含在ngx_lua v0.5.0rc3和ngx_openresty开发版 1.0.11.3 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2012-02-06 14:06
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

1776:昨儿用Perl写了一个简单的srclines脚本，用来统计代码的行数（去除空行、注释和调试代码）：http://t.cn/zO7u3By 用它统计出 lua-resty-memcached 库的纯代码行为 432 行，而 ngx_lua 的 cosocket 部分的代码是 2282 行，ngx_lua 整体的代码量是 13050 行。每行都不超过80列，这是由另一脚本保证的。  
微博位置: 无
发布时间: 2012-02-06 12:49
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1777:测试 lua-resty-memcached 这样依赖 ngx_lua 模块的 Lua 库时，我仍然使用 Test::Nginx 来组织和驱动它的测试集。比如 lua-resty-memcached 的一个测试文件是长这个样子的：http://t.cn/zO7nu55 编写测试和文档的时间占到了绝大部分，因为实现太直截了当了，嘿嘿～  
微博位置: 无
发布时间: 2012-02-06 11:25
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1778:这几年 C 写多了便会不由自主地觉得 C++ 代码是“杂草”。记得原先在淘宝工作的时候，一次拿到晓哲老师提供的一份使用了灵巧指针的 C++ 代码，我二话没说就立马用纯 C 把它给改写了，这才觉得舒坦。。。  
微博位置: 无
发布时间: 2012-02-05 20:29
点赞数: 0   转发数: 20   评论数: 18
发布工具: 微博 weibo.com

1779:今晚开始做 lua-resty-redis 库。Redis 协议相比 Memcached 虽然命令的数量多出很多，但所有命令的请求和响应格式都是统一的，所以实现代码应当会更加简单。现在我基于 cosocket 写各种客户端库已经写 high 了  
微博位置: 无
发布时间: 2012-02-05 18:48
点赞数: 0   转发数: 1   评论数: 11
发布工具: S60客户端

1780:看到人多就害怕，还是来乌山走走吧~ http://t.cn/zO7aOPH  显示地图 原图 
微博位置: http://t.cn/zO7aOPH
发布时间: 2012-02-05 16:34
点赞数: 0   转发数: 0   评论数: 3
发布工具: S60客户端

1781:南后街看花灯，全是人啊…  原图 
微博位置: 无
发布时间: 2012-02-05 16:25
点赞数: 0   转发数: 0   评论数: 3
发布工具: S60客户端

1782:这两天为lua-resty-memcached库实现了几乎整个memcached的TCP文本协议（目前只差"gets"和"cas"命令没有实现了）：http://t.cn/zO76y41 包括同时查询多个键的get命令也实现了。未来还会再添加pipelining支持。这些功能都是我的ngx_memc模块中一直想做却一直很难做的TODO，现在在Lua里实现都极为简单。  
微博位置: 无
发布时间: 2012-02-05 14:52
点赞数: 0   转发数: 4   评论数: 7
发布工具: 微博 weibo.com

1783:刚刚应用了 Brian Akins 同学的几个补丁，为 ngx_lua 的共享内存字典添加了用户 flags 支持，就是类似 memcached 的 32 位 flags 那种：http://t.cn/zO7i5yl 已经包含进了 ngx_lua 0.5.0rc2 预发布中：http://t.cn/S6qd6B  
微博位置: 无
发布时间: 2012-02-05 14:14
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1784:CNN 的系统工程师 Bian Akins 同学最近开始向我的各个 ngx_openresty 组件大量地提交补丁，既有小的 bug 修复也有小的新特性。我感觉有些忙不过来了   
微博位置: 无
发布时间: 2012-02-05 14:09
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1785:Neil Richardson 多年前编写的 lua-Memcached 库虽然现在也能不加修改地运行在 ngx_lua cosocket API 之上，但其代码质量实在不敢恭维，很多地方的错误处理都不严谨。要是这样的库运行在我服务的公司生产环境里，我晚上会睡不好觉的。所以重新仔细编写一个 lua-resty-memcached 库还是很有必要的[呵呵]  
微博位置: 无
发布时间: 2012-02-04 21:05
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1786:MoonScript 语言看起来很有意思：http://t.cn/aRgJ7i 因为它的编译器可以生成与 LuaJIT 完全兼容的 Lua 代码，所以 MoonScript 程序应当可以在 ngx_lua 平台上直接运行呀～哈哈！  
微博位置: 无
发布时间: 2012-02-04 19:55
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1787:看到一些同学以“专注”为借口拒绝多学几种语言。其实我觉得“专注”是相对的，是基于广泛的学习、了解和实践之后有选择的深入，而不应成为自己偷懒的借口。这样至少不会像某些语言社区的个别过激派成天叫嚷：“看！我们多牛逼！我们有元编程！我们有DSL！”殊不知其他语言社区的人们都玩了几十年了。  
微博位置: 无
发布时间: 2012-02-04 16:01
点赞数: 2   转发数: 25   评论数: 8
发布工具: 微博 weibo.com

1788:包括 memcached 和 redis 在内的许多后端使用的通信协议都在设计时特意考虑到简化协议解析器的实现，所以我在 ngx_lua cosocket 中也特意提供常用的原语以充分利用这些协议设计中常见的模式及其便利。如果我们还是得老老实实地用最通用也是最复杂的技术去进行流式解析的话，实在是太傻太可惜了，呵呵。  
微博位置: 无
发布时间: 2012-02-04 15:23
点赞数: 1   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1789:现在真有些后悔原先我们花了太多力气去开发各种后端服务的 nginx upstream 模块，用 C 写原生的 upstream 模块和给 Nodejs 和 Erlang 写非阻塞客户端一样累（当然，Ragel 代码生成器让这个过程简单了不少，但还是很麻烦），而且还有许多功能上的限制。我早就该给 ngx_lua 实现 cosocket API 了，哈哈！  
微博位置: 无
发布时间: 2012-02-04 15:10
点赞数: 1   转发数: 10   评论数: 3
发布工具: 微博 weibo.com

1790:“必须把测试用例的编写变得容易，程序员才不会跳过它。”如果实际回报远低于测试自动化的投入，那种 TDD 实践就是失败的。引用电视剧《亮剑》中李云龙的一句台词便是：“赔本的买卖咱不做！”许多好事做过了反成了坏事。判断是否“过”了的标准便是投入产出比。OOP 和 TDD 都是如此。  
微博位置: 无
发布时间: 2012-02-03 23:32
点赞数: 1   转发数: 9   评论数: 4
发布工具: S60客户端

1791:ngx_lua的cosocket在行为上类似于Erlang gen_tcp的“被动模式”，而nodejs net库的客户端socket API貌似只支持Erlang的“主动模式”。我不太清楚nodejs是如何规避“主动模式”下的“message flood”风险的，不过在被动模式下，貌似更容易简化用户级别上的流式解析状态机的表达和避免复杂的缓冲区管理。  
微博位置: 无
发布时间: 2012-02-03 22:30
点赞数: 0   转发数: 11   评论数: 7
发布工具: 微博 weibo.com

1792:Taylor Weibley 先前赞助了我 400 美元用于支持 ngx_lua 模块流式大文件上传功能的开发。由于请求体的流式读取 API 依赖 cosocket，所以我便先搞定了 cosocket API，然后再把下游连接封装一个只读的 cosocket 对象了事。现在这个 grant 余下的工作就是用纯 Lua 来实现 lua-resty-upload 库了  
微博位置: 无
发布时间: 2012-02-03 16:54
点赞数: 0   转发数: 10   评论数: 6
发布工具: 微博 weibo.com

1793:刚刚发布了 Test::Nginx 模块的 0.18 版到 CPAN: http://t.cn/hehfyG 在未来的几个小时内将会出现在您附近的 CPAN 镜像服务器上。发表在 nginx-devel 邮件列表中的发布公告在这里：http://t.cn/zOh01Vq 相比上一个版本，我添加了许多新功能。祝玩得开心 :)  
微博位置: 无
发布时间: 2012-02-03 16:28
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1794:今儿一大早又收到一位国外用户的 github pull 请求：http://t.cn/zOhK2Sp 补丁修复了我的 lua-redis-parser 库中一行多余的 lua_pushlstring 调用。我经常能收到这样的报告反映我曾经犯下的很傻很天真的小错误。让全世界的用户帮我进行代码 review 的感觉真好～  
微博位置: 无
发布时间: 2012-02-03 12:58
点赞数: 0   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

1795:我一直喜欢相对简单而小巧的代码编辑器，比如vim，而且对于像我这样经常只能通过文本终端在许多机器之间跳来跳去的人来说也成了必要的习惯。在我家64 MB 内存、赛扬330 CPU的PC上运行庞大的IDE时的开发体验成为了最痛苦的回忆之一。所以我不会去使用那些需要功能强大的IDE来克服其本身弱点的编程语言。  
微博位置: 无
发布时间: 2012-02-03 12:47
点赞数: 0   转发数: 5   评论数: 8
发布工具: 微博 weibo.com

1796:刚刚在 github 上面创建了 lua-resty-memcached 库的项目：http://t.cn/zOhquQ7 这是我的第一个基于 ngx_lua cosocket 的客户端库。实现了 get, set 和 flush_all 等 memcached 命令，代码都极为简单。后面再慢慢加新功能。欢迎大家贡献补丁哈 :D  
微博位置: 无
发布时间: 2012-02-02 21:05
点赞数: 0   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

1797:好的代码是写给机器的诗。在抄写一些仔细写出的代码时，经常会有儿时抄诗时的那种喜悦。  
微博位置: 无
发布时间: 2012-02-02 13:47
点赞数: 1   转发数: 8   评论数: 5
发布工具: S60客户端

1798:刚刚把 ngx_lua 模块的 git cosocket 分支合并到了 master 分支上，同时在 ngx_lua 官方 wiki 文档中比较详细地介绍了 cosocket API 的用法：http://t.cn/SPmsC6 （在文档中搜索"socket"即可）。下面得为 ngx_lua 准备一个全新的 rc 发布以包含 cosocket 新特性了，哈哈！  
微博位置: 无
发布时间: 2012-02-01 22:22
点赞数: 0   转发数: 7   评论数: 3
发布工具: 微博 weibo.com

1799:ngx_lua 的 cosocket 部分的代码目前也就 3000 行多一点点，包括空行、注释和调试代码。我在设计上大量参考了 nginx 核心中的 ngx_http_upstream 部分以及连接池模块的实现，但并没有继承标准 upstream 的那些不必要的限制。不得不佩服nginx的作者Igor Sysoev和Maxim Dounin在设计上的深厚功力 ;)  
微博位置: 无
发布时间: 2012-02-01 13:39
点赞数: 1   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1800:刚刚又发布了 ngx_openresty 新的稳定版 1.0.10.48：http://t.cn/aCdPzo 发布公告在这里：http://t.cn/zOP0dim 下面几个开发版我们将基于 nginx 1.0.11+ 核心并包含 ngx_lua cosocket :)  
微博位置: 无
发布时间: 2012-02-01 13:00
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1801:刚刚发布了 ngx_lua 正式版 v0.4.1，发布公告在这里：http://t.cn/zOPprZT 这个版本主要包含了 master 分支上最近积累的一些 bug 修复，并未包含什么新特性 :)  
微博位置: 无
发布时间: 2012-02-01 12:19
点赞数: 0   转发数: 1   评论数: 10
发布工具: 微博 weibo.com

1802:减少内存动态分配的次数是提升系统性能的关键之一。Nginx 核心提供了ngx_chain_update_chains和 ngx_chain_get_free_buf函数用于请求内部的缓冲区循环复用。刚刚基于此实现了ngx_lua子请求接口和cosocket接口间的缓冲区共享复用。 131县道  显示地图 
微博位置: 131县道
发布时间: 2012-01-31 22:20
点赞数: 1   转发数: 8   评论数: 3
发布工具: S60客户端

1803:我开始设计 lua-resty-upload 库的流式 multipart/form-data 读取和解析API. 原本想参考一下 PHP 的文件上传库的API设计，结果看后大为失望，并不比ngx_upload模块高明多少。所以我还是模仿 Erlang inet库的接口设计吧。 宋诏路  显示地图 
微博位置: 宋诏路
发布时间: 2012-01-31 18:53
点赞数: 0   转发数: 1   评论数: 3
发布工具: S60客户端

1804:我基于ngx_lua模块的cosocket接口用纯Lua实现了一个简单的memcached客户端库，并写了一个示例接口先set再get最后输出结果，同时启用cosocket连接池。ab 70并发压力测试显示比原来基于Nginx子请求和ngx_memc模块，吞吐量提升高达13.6% 319省道  显示地图 
微博位置: 319省道
发布时间: 2012-01-31 18:34
点赞数: 0   转发数: 14   评论数: 3
发布工具: S60客户端

1805:刚刚修复了ngx_lua cosocket中的一个有趣的bug：Nginx请求清理机制和Lua GC协作上原先存在问题，即当Lua GC提前释放我的userdata之后，在Nginx请求清理处理程序中就不该再使用它了。通过定义 __gc元方法在GC发生时取消请求处理程序就解决了。 http://t.cn/zOP5ssR  显示地图 
微博位置: http://t.cn/zOP5ssR
发布时间: 2012-01-31 18:26
点赞数: 0   转发数: 2   评论数: 1
发布工具: S60客户端

1806:不带任何参数的 C 函数声明还是得显式地在括号里面加上void，比如“int foo(void)”这样，否则 C 编译器会当作不完整的隐式声明处理，于是捕捉不到调用时提供参数这样的错误。今天就收到了bigplum (Simon)同学报告的ngx_lua模块中的这样一个问题：http://t.cn/zOvKMxG 从git blame看是@珣新 引入的:D  
微博位置: 无
发布时间: 2012-01-29 22:10
点赞数: 0   转发数: 22   评论数: 13
发布工具: 微博 weibo.com

1807:在我自己的经验中，不少无关痛痒的症状或者报错时常是一些隐藏很深的重大 bug 的线索。所以我在开发过程中，通常不会放过一些意料之外的现象和行为，即便在常见用法下不会出现。Paul Fox 同学最近也正是从一个不那么有趣的 bug 深挖出他的 dtrace linux 移植中的一个很深的问题：http://t.cn/zOvM319  
微博位置: 无
发布时间: 2012-01-29 15:37
点赞数: 1   转发数: 30   评论数: 7
发布工具: 微博 weibo.com

1808:这几日提交了 ngx_lua 模块的 cosocket 连接池的第一个原型实现到 cosocket 分支。目前代码中写死了每个 host-port 对的连接池容量为 10 个连接，池中连接的最长空闲时间也写死了 60 秒，超时了就立即关闭连接，后面再改成可配置的。目前的资源管理主要是围绕 Lua GC 来组织的，这可以简化不少问题 :)  
微博位置: 无
发布时间: 2012-01-28 22:45
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1809:[1/2]我从小一直希望能达到平和、幸福、清净、无恼的精神境界。幼年时喜爱绘画，因为常在作画时进入类似的精神状态。青少年时代之后仅在进行极为抽象和纯粹的数学演绎和逻辑思辨时才有这样的体验。此外在阅读佛教最古老的上座部三藏时亦能趋近，当然后世出现的那些充满玄幻和超自然事物的佛经就无此作  
微博位置: 无
发布时间: 2012-01-27 10:09
点赞数: 1   转发数: 4   评论数: 7
发布工具: S60客户端

1810:That's my name~~ 迎宾大道  显示地图 原图 
微博位置: 无
发布时间: 2012-01-26 17:14
点赞数: 0   转发数: 0   评论数: 6
发布工具: S60客户端

1811:Nginx 核心中常常是把 C 语言当做汇编语言来使的，我现在也深受这种编码风格的影响，当直接在内存布局和寻址偏移量的级别思考算法时，有时可以大大简化算法，同时又能达到极高的性能。 241省道  显示地图 
微博位置: 241省道
发布时间: 2012-01-26 16:04
点赞数: 0   转发数: 7   评论数: 2
发布工具: S60客户端

1812:入住溧阳天目湖国际饭店~ http://t.cn/z0s5uiK  显示地图 原图 
微博位置: http://t.cn/z0s5uiK
发布时间: 2012-01-26 13:48
点赞数: 0   转发数: 2   评论数: 2
发布工具: S60客户端

1813:昨天和老婆回到镇江老家，果然。微微有些感冒，不过不妨碍我思考 ngx_lua cosocket 内建连接池的实现。现在的主要困难还是平衡 Lua GC 和 Nginx 自己的内存管理策略。就像为Firefox编写二进制插件时需小心 XPCOM引用计数和 JS GC 之间的区别。 谷阳大道  显示地图 
微博位置: 谷阳大道
发布时间: 2012-01-25 22:46
点赞数: 0   转发数: 1   评论数: 2
发布工具: S60客户端

1814:ngx_lua 模块的 cosocket 分支已经很接近合并回 master 分支的状态了，虽然 cosocket 的内建连接池支持和 UDP 支持仍然是 TODO. 下面几天的主要工作就是撰写已经实现了的 cosocket 功能的文档，并发布一个 ngx_lua 的新版本出来。  
微博位置: 无
发布时间: 2012-01-24 10:46
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

1815:在设计 ngx_lua 模块的请求体流式读取接口时，很自然地看到它与 cosocket 接口之间的相似性：由 http 客户端建立的“下游连接”所对应的 socket 也可以直接视为一种 cosocket。为了最大限度地复用 cosocket 分支上的代码，我打算引入 ngx.req.socket()方法，直接返回一个只读的cosocket对象了事   
微博位置: 无
发布时间: 2012-01-23 13:10
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1816:CloudFlare 公司的安全工程师们正在尝试通过补丁给 Lua 实现引入随机哈希算法：http://t.cn/z0FqFRv 他们打算在解决这一问题之后基于 ngx_lua 模块来构建他们新版的 Web 应用防火墙（WAF）。  
微博位置: 无
发布时间: 2012-01-23 12:35
点赞数: 0   转发数: 9   评论数: 3
发布工具: 微博 weibo.com

1817:去年除夕我在@定球呀球 家开发 ngx_lua 模块的 ngx.location.capture_multi 并行子请求接口，今年除夕我则是在我媳妇儿娘家开发 ngx_lua 模块的 cosocket 接口。在过去的几个小时中，cosocket 对象的 receiveuntil 方法终于实现完整并通过现有的测试用例了。在爆竹声中 hacking，感觉真的很棒～   
微博位置: 无
发布时间: 2012-01-23 00:19
点赞数: 0   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

1818:MapleSoft 公司的 Maple 软件包是我最喜欢的数学符号计算引擎之一。我在学生时代设计和开发的许多解题系统和程序形式化变换系统都是利用 Maple 来进行数学求模的。今天看了下官网上最新的 Maple 15 的报价，非学生版都在 1000 多美元以上，可惜我不再是学生，不能再享受学生版的 99 美元特价了   
微博位置: 无
发布时间: 2012-01-22 16:20
点赞数: 0   转发数: 2   评论数: 10
发布工具: 微博 weibo.com

1819:对于网络超时设置的自动化测试，我一般的用例编写模式是：连接某个网站必然会 iptables 掉的奇怪端口，比如 12345，以测试建立连接阶段的超时，然后在需要写 socket 的时候去读 socket，便可以测试读取超时，而写超时的测试因为各级写缓冲的存在而变得困难，我选择使用 mockeagain 的写超时摸拟功能。  
微博位置: 无
发布时间: 2012-01-22 12:31
点赞数: 1   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

1820:刚刚又顺手整理出来一个大学时做的一个针对正则表达式和有穷自动机的学习型项目，使用 Perl 编写的 re::DFA 模块：http://t.cn/z0kTvHm 可以从正则表达式生成 NFA、DFA 以及最简 DFA（包括这些自动机的图片），还可以将正则表达式分别编译为 Perl 和 C 代码（基于最为高效的“最简 DFA”模型）。  
微博位置: 无
发布时间: 2012-01-21 20:03
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

1821:刚刚看到，@chaoslawful 和我申请的 Percona Live MySQL 2012 大会（http://t.cn/z0kKBEy ）的演讲“Scripting MySQL with Lua and libdrizzle inside Nginx”已经被大会组委会选中了。演讲时间是美国当地时间 4 月 11 日下午 3:30 到 4:30，一个小时。我去年办的 B-1 签证看来又可以用上了 :)  
微博位置: 无
发布时间: 2012-01-21 11:01
点赞数: 0   转发数: 3   评论数: 16
发布工具: 微博 weibo.com

1822:看到@定球呀球 开始积极地工作在 ngx_openresty 项目的 git nginx-1.1.x 分支上了，哈哈！开心啊～等 nginx 1.1.x 成为稳定版之后，我们就可以发布基于这个分支的 ngx_openresty 发布了！:D  
微博位置: 无
发布时间: 2012-01-20 21:54
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1823:纯粹的流式解析器需要比较复杂的状态机，比如 socket 接收缓冲区只分配一个字节的极端情形。在 Nginx 核心中手工编写的解析状态机大多需要或多或少地缓冲数据，缓冲区配置过小就会出问题。这也是我钦佩 Ragel 的纯流式解析能力的原因。 G15沈海高速  显示地图 
微博位置: G15沈海高速
发布时间: 2012-01-20 15:09
点赞数: 1   转发数: 6   评论数: 5
发布工具: S60客户端

1824:在过去的八年时光中，我的开发工作流都是典型的测试驱动方式，无论大小项目，公司的还是自己业余的，都会有一个比较像样的测试集。测试驱动能让我很快进入工作状态，无论是做新功能还是修bug，我的目标都很明确，那就是让眼前的那个测试用例通过。因此即使同时在跟其他人聊天，工作也不会太受干扰。  
微博位置: 无
发布时间: 2012-01-20 12:07
点赞数: 1   转发数: 17   评论数: 6
发布工具: S60客户端

1825:昨晚利用 mockeagain 工具运行 ngx_lua 模块的测试集时，捕捉到 cosocket 对象的 send 方法在差网络条件下的一个 bug，原来我当时把两个标志位的值给置反了，汗。很快我就提交了修复。我这个 mockeagain 模拟器已经在捉虫运动中立下了许多功勋。  
微博位置: 无
发布时间: 2012-01-20 11:58
点赞数: 0   转发数: 1   评论数: 1
发布工具: S60客户端

1826:昨晚我在 ngx_lua 模块的 cosocket 分支中为 socket 对象实现了 settimeout 方法，可以用于在 Lua 代码中动态覆盖 nginx 配置文件中的超时设置，比如 lua_socket_read_timeout 配置指令的设置。  
微博位置: 无
发布时间: 2012-01-20 11:51
点赞数: 0   转发数: 1   评论数: 0
发布工具: S60客户端

1827:下午一直在陪老婆逛街，同时忙里偷闲地思考着 ngx_lua cosocket 的连接池实现。打算在年前将 ngx_lua 项目的 git cosocket 分支合并到 master，但可能暂时不会有连接池支持。反正 ngx_proxy 模块大家用了这么多年也一直是短连接，哈哈！  
微博位置: 无
发布时间: 2012-01-19 18:17
点赞数: 0   转发数: 4   评论数: 11
发布工具: 微博 weibo.com

1828:这几日我修复了 ngx_lua 模块中的一类比较严重的衰退，即 ngx.exec, ngx.exit，ngx.set_uri(uri, true) 以及 ngx.redirect 这几个本不应该返回的函数调用实际上会返回。这个衰退是在 ngx_lua v0.3.1rc4 和 ngx_openresty 1.0.6.13 中引入的。多谢@cyberty 同学详尽的报告！  
微博位置: 无
发布时间: 2012-01-19 13:00
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1829:福州电信的 DNS 名字服务器太恶心了，最近改造成了找不到域名就自动返回一个默认的垃圾小 P 站的 IP 地址。。。这种流氓手段真是防不胜防啊。。。  
微博位置: 无
发布时间: 2012-01-19 12:20
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1830:使用 clang 静态分析器对 ngx_lua 源码进行了扫描，捕捉到不少逻辑上的小问题，甚为有趣。我在提交了对 ngx_lua 的这个小补丁后，clang 终于安静了，呵呵：http://t.cn/z0DlUN8 静态代码分析真是好东西 :)  
微博位置: 无
发布时间: 2012-01-19 10:36
点赞数: 0   转发数: 12   评论数: 3
发布工具: 微博 weibo.com

1831:昨晚从源码编译了 svn 里面最新的 llvm/clang，结果发现在我的 ThinkPad 上只需要 20 多分钟，且没有特别的依赖项需要单独安装。而先前在同一台本上从源码编译最新的 gcc 4.6.2 则折腾了我一个半钟头，哈哈！  
微博位置: 无
发布时间: 2012-01-19 09:44
点赞数: 0   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

1832:新年快到了，用 graphviz 画张图，作为自己未来几年的学习路线图 :)  原图 
微博位置: 无
发布时间: 2012-01-18 21:23
点赞数: 0   转发数: 18   评论数: 4
发布工具: 微博 weibo.com

1833:我现在越来越多地通过 nginx 调试日志来对各个 nginx 模块进行“白盒”性质的回归测试。这比为了测试专门暴露API要简便多了，且不会在产品代码中引入性能开销。当然，借助于 dtrace/systemtap 这样的动态追踪工具也可以实现类似的甚至更好的效果，只是它们并非完全跨平台而且整合进测试台会更累一些。  
微博位置: 无
发布时间: 2012-01-18 20:09
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1834:今天为我的 Test::Nginx::Socket 测试台引入了 --- no_error_log 段，支持测试 error.log 文件中不出现指定的一个或者多个模式的消息行。文档可以参见这个补丁：http://t.cn/z0DJXzL 这些测试工具也是和我的各个 nginx 模块项目共成长的 ;)  
微博位置: 无
发布时间: 2012-01-18 20:00
点赞数: 0   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

1835:Lua 的协程 API 缺乏强制终止正在运行中的协程的功能，yield 接口只能暂停，却不能直接取消当前协程中的后续代码的执行。对于 ngx_lua 而言，当客户端提前断开连接，以及用户Lua代码执行 ngx.exit(), ngx.redirect()等操作时，都需要这种强行终止协程的能力。我们目前在这里使用了一些折衷的技巧 :(  
微博位置: 无
发布时间: 2012-01-17 14:06
点赞数: 0   转发数: 7   评论数: 16
发布工具: 微博 weibo.com

1836:刚刚发布了 ngx_openresty 今年第一个稳定版 1.0.10.44: http://t.cn/aCdPzo 发布公告在这里：http://t.cn/z0eacQt 上一个稳定版还是一个月之前发布的。主要变更主要还是各种 bug 修复，同时将 LuaJIT 升级到了最新版本，从而能在 Mac OS X Lion 上直接用 llvm-gcc 构造。感谢所有的贡献者和用户！  
微博位置: 无
发布时间: 2012-01-16 22:52
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

1837:刚刚发布了 ngx_headers_more 模块的 v0.16 正式版，发布公告在这里：http://t.cn/z0e54EM 这个模块也已经有 6 个多月没有正式版发布了。现在的变更主要就是用户驱动的各种 bug 修复了 :)  
微博位置: 无
发布时间: 2012-01-16 15:17
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1838:一位做 SNS 游戏的哥们正尝试结合使用 ngx_lua 和 kyotocabinet-lua 来构建。之前有一位外国友人也做过类似的尝试，据说在性能上取得了极好的效果。不过，kyotocabinet-lua 在具体实现上有些外行，滥用了全局环境表来存储它的内部状态数据，因此用在 ngx_lua 中时须用自己的 lua 模块简单封装一下。  
微博位置: 无
发布时间: 2012-01-16 12:36
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1839:刚刚应用了 Pan Fan (nightsailer) 同学的补丁，ngx_openresty 的打包脚本（即生成 ngx_openresty 的 tar.gz 包的脚本）现在也可以在 Mac OS X 等系统上工作了。sed 工具的 -i 选项确实是 Gnu sed 的一个独有的特性 :P  
微博位置: 无
发布时间: 2012-01-15 23:41
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1840:高中时我天天向文科出身的祖父解释我在自动化解题、编译、图像处理、计器仿真等许多方面的工作,我经常借助许多比喻让祖父能大致理解其中的核心想法。现在我仍喜欢像我学习幼儿教育的老婆解释我正在琢磨的算法,依然其乐无穷!  
微博位置: 无
发布时间: 2012-01-15 21:38
点赞数: 0   转发数: 1   评论数: 6
发布工具: 短信

1841:“先做出一个实现,然后再扔掉它。不论你是否乐意,你几乎总是需要这么做。”我在公司里面开发许多东西时,经常会迫于业务压力先搞出某种折衷的实现,以临时顶上去。其实折衷并不可怕,可怕的是日后即使有时间也很难平滑替换这些在线部件。于是如何折衷,在设计上也大有讲究。  
微博位置: 无
发布时间: 2012-01-15 20:44
点赞数: 1   转发数: 24   评论数: 6
发布工具: 短信

1842:LuaSocket 的 receive 函数用来解析 HTTP 1.1 chunked 这样的格式还是很够的，但对于 multipart/form-data 这种以指定的字符序列来标识流边界的格式，还是不够方便。我打算自己引入一个 receiveuntil 函数来处理这种情形，比如 receiveuntil("--BbC04y") 就会返回 --BbC04y 之前的数据，还可支持分片。  
微博位置: 无
发布时间: 2012-01-15 14:01
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1843:"开源不是把有趣的事情留给自己，而把枯燥的事情留给别人。”其实在公司里做事也是如此。我刚开始上班时总想着以后带人了可以集中精力做最有趣的工作，但后来真带人了，却只一心想着尽量让小朋友们多做些创造性的事情，而把不少脏活累活留给自己——其实许多最终还是留给机器，只有机器配做这些 ;)  
微博位置: 无
发布时间: 2012-01-14 21:18
点赞数: 1   转发数: 35   评论数: 6
发布工具: 微博 weibo.com

1844:雨中游鼓浪屿~  
微博位置: 无
发布时间: 2012-01-14 17:16
点赞数: 0   转发数: 0   评论数: 6
发布工具: Kjava客户端

1845:刚刚发布了 ngx_echo 模块的正式版 v0.37，发布公告在这里：http://t.cn/z0d3gKG 这个模块已经有 6 个月没有发布正式版了，所以 ChangeLog 还是有些长，呵呵。惭愧啊惭愧 :)  
微博位置: 无
发布时间: 2012-01-13 17:15
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1846:在几个月前我都是每天被各种 bug 报告淹没，现在 bug 报告几乎遇不见了，每天却被各种新特性请求给淹没了。。。我估计等这批新特性都搞定了，又要轮到 bug 报告大潮了，哈哈！因为新实现的功能难免问题会多一些 :) 就准备着如此周而复始了～呵呵～这就是开源生活 :)  
微博位置: 无
发布时间: 2012-01-13 15:48
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

1847:刚刚发布了 ngx_openresty 开发版 1.0.10.43: http://t.cn/aCdPzo 修复了 charlieyang 同学报告的不能和 ./configure --with-openssl=DIR 构造命令一起工作的问题，同时修正了 --with-openssl=DIR 选项不支持 DIR 为相对路径的问题。最后把 ngx_lua 模块更新到了 v0.4.0 版：http://t.cn/SI17Ru  
微博位置: 无
发布时间: 2012-01-12 21:32
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

1848:发表了博文 《Nginx 配置指令的执行顺序（七）》 -  来看一个 ngx_static 模块服务磁盘文件的例子。我们使用下面这个配置片段：  location / {  root /var/www http://t.cn/z0di19Q  
微博位置: 无
发布时间: 2012-01-12 21:08
点赞数: 0   转发数: 7   评论数: 1
发布工具: 新浪博客

1849:非常感谢@龙伟进 赞助我的 Sparc 主机！实在是太帅了！ :D  
微博位置: 无
发布时间: 2012-01-12 15:54
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1850:在开发性能要求很高的基础件时，我一直很信奉 C++ 的那条设计原则，即“if you don't use it, you don't need to pay for it.”虽然并不能总是做到这一点，但“惰性求值”和“插件化”等都是实现这个目标的有效手段。  
微博位置: 无
发布时间: 2012-01-12 14:17
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1851:刚刚发布了 ngx_lua 模块的正式版 v0.4.0，发布公告在这里：http://t.cn/Sa1IxU 这个模块的上一次正式版发布还是去年 9 月份，已经有 4 多个月没有发布正式版了，以后得更勤快一些，免得发布时巨长的 ChangeLog 写个半死 :P  
微博位置: 无
发布时间: 2012-01-11 23:16
点赞数: 0   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

1852:确实很需要一本专门讲解 Nginx C 模块开发的书。在看许多同学写的 Nginx 模块源码时，受限于 Nginx 核心方面的知识，同时不了解像 mockeagain, etcproxy, valgrind 等这些工具，经常出各种有趣的问题。当然，另一方面，我也希望大家在考虑用 C 实现 Nginx 模块之前，可以先考虑一下使用 ngx_lua 模块。  
微博位置: 无
发布时间: 2012-01-11 22:16
点赞数: 0   转发数: 5   评论数: 1
发布工具: 微博 weibo.com

1853:折腾了半天，最后发现 PayPal 不支持为身在中国的用户提供“捐赠”按钮服务，原本想着放一个在 openresty.org 首页上的。。。这不是逼咱们移民么？  
微博位置: 无
发布时间: 2012-01-11 15:15
点赞数: 0   转发数: 4   评论数: 17
发布工具: 微博 weibo.com

1854:今天早上有一位国外用户表示愿意赞助我为 ngx_lua 模块实现流式读取请求体的接口，以及基于此接口的流式文件上传功能。我们有望在 2 月之前看到这些新特性了！  
微博位置: 无
发布时间: 2012-01-11 15:13
点赞数: 0   转发数: 4   评论数: 9
发布工具: 微博 weibo.com

1855:一早收到 António Almeida 同学的邮件，说他已经在基于 ngx_lua 模块的 cosocket API 做项目了，敦促我们赶紧把 cosocket 分支合并到 master. 我看了很汗啊。看来得抽时间完成 cosocket 的连接池支持，以便早日让它进 master :)  
微博位置: 无
发布时间: 2012-01-11 10:50
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1856:发表了博文 《Nginx 教程的连载计划》 -  下面以教程系列为单位，列举出了已经发表和计划发表的连载教程： Nginx 新手起步 Nginx 是如何匹配 URI 的 Nginx 变量漫谈 Ngin http://t.cn/SaITaN  
微博位置: 无
发布时间: 2012-01-10 21:47
点赞数: 0   转发数: 32   评论数: 10
发布工具: 新浪博客

1857:原来在雅虎工作的时候@罗翅膀716 老骂我,后来到淘宝上班了就轮到@chaoslawful 骂我了。其实身边有一个人常常骂骂自己是非常幸运的,特别是当对方水平比自己,而且骂得经常有些道理的时候。  
微博位置: 无
发布时间: 2012-01-10 21:06
点赞数: 0   转发数: 1   评论数: 10
发布工具: Kjava客户端

1858:作为一名开源作者，我经常会收到用户的 bug 报告，其中有的写得非常清楚，有的则写得非常含糊，比如只是说“你的东西不能工作”，却不告诉我在什么情况下怎么不能工作，也不附上他使用的操作系统的名字（比如是 Linux 还是 FreeBSD？）、操作系统的类型（比如是64位还是32位？）以及相关软件的版本号。  
微博位置: 无
发布时间: 2012-01-10 17:41
点赞数: 0   转发数: 44   评论数: 20
发布工具: 微博 weibo.com

1859:我不会在我的Nginx书中讨论Nginx C模块开发或讲解Nginx核心中C代码层面上发生的事情(但我会讨论通过Lua来扩展)。事实上我会避免书中出现C代码。这个主题留给@淘叔度 的团队编写的书讨论吧!  
微博位置: 无
发布时间: 2012-01-10 15:01
点赞数: 0   转发数: 23   评论数: 7
发布工具: 短信

1860:我写连载教材时喜欢先在纸上起草,因为自己不太善于对着电脑思考,而随后在把草稿输入机器时,其实也不会严格遵照草稿,而是进行二次创作。抛开草稿在录入时重写全文的情况也曾有过。使用五笔这样几乎没重码的输入法是重要的,因为能避免分心。  
微博位置: 无
发布时间: 2012-01-10 14:42
点赞数: 0   转发数: 1   评论数: 4
发布工具: 短信

1861:昨晚完成了下一篇即将发表的“Nginx配置指令的执行顺序(七)”的初稿。可惜媳妇儿最近几天去北京出差,所以等她回来审过之后才能发出,呵呵。这个系列应该可以出到(十)以上,还有不少内容有待写出。  
微博位置: 无
发布时间: 2012-01-10 13:36
点赞数: 0   转发数: 1   评论数: 1
发布工具: 短信

1862:ngx_postgres 的作者 Piotr Sikora 同学今年发力了，继初步完成 ngx_zeromq 模块（http://t.cn/S6kWyM ）之后，又开始开发 ngx_mongodb 模块了，并计划在未来几个月内发布，见这里：http://t.cn/Sa2AAv 这些模块通过 nginx 子请求，应当都可以为 ngx_lua 直接调用 :) 真是期待呀 :D  
微博位置: 无
发布时间: 2012-01-10 12:12
点赞数: 0   转发数: 10   评论数: 9
发布工具: 微博 weibo.com

1863:我编写 Nginx 一书的主要依据是Nginx核心及其模块的C源码，辅之以许多精心设计的测试用例。这在实际撰写的过程中被证明是正确的选择，因为我曾经写到一半时才发现设计的测试用例的运行结果和我的预期不一致，抑或是在翻阅源码验证一个想法时，发现上一篇某个地方的表述不准确，这都会导致文章被重写。  
微博位置: 无
发布时间: 2012-01-09 22:11
点赞数: 0   转发数: 4   评论数: 12
发布工具: 微博 weibo.com

1864:我在撰写 Nginx 连载教程的过程中总是经常回想起我的用户们经常犯的错误或者感到困惑的地方,以及我曾在回信中作过的无数遍的讲解。这些回忆不由自主地引导着我的写作脉络,充实着我的写作素材。  
微博位置: 无
发布时间: 2012-01-09 20:35
点赞数: 0   转发数: 2   评论数: 2
发布工具: 短信

1865:刚刚发布了 ngx_openresty 开发版 1.0.10.41: http://t.cn/aCdPzo 主要将 ngx_upstream_keepalive 模块升级到了最新的 0.7（原先是 0.3），同时修复了 ngx_echo 模块中的几个小问题。详情请参见更动日志：http://t.cn/SI17Ru 未来几天内将发布新的稳定版 :)  
微博位置: 无
发布时间: 2012-01-09 18:30
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1866:在构思我的 nginx 书的过程中，我经常会发现 nginx 及其模块中的不少功能上的“阴暗角落”，这刺激着我们努力通过开发去消灭其中那些可以消灭掉的“角落”。毕竟我不想把太多的“缺点”和“不足”记录到我的书里 ;) 或许这也是开发者写书的一大好处吧。  
微博位置: 无
发布时间: 2012-01-09 17:49
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

1867:昨晚在读《研究是一门艺术》一书时看到了“写作有助于记忆”这个观点，不禁深感赞同。虽然当有全职工作时难有充足的时间进行比较系统的写作，但当我们即使耐心地向别人通过许多比较正式的邮件描述一些复杂问题时，也有助于我们对那些重要细节的理解和记忆 :)  
微博位置: 无
发布时间: 2012-01-09 10:40
点赞数: 1   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

1868:性能测试领域看到的笑话太多了，比如不启用上游连接池去压 nginx 结果把动态端口用尽，最后成了测试 nginx 疯狂地刷不带缓冲的错误日志的性能，再比如压测 Erlang 服务时不启用系统poll、不设置OS线程数、不尝试native方式编译，更有甚者拿又慢又烂的ruby/java/perl/python 的客户端去压测高性能服务。  
微博位置: 无
发布时间: 2012-01-08 15:08
点赞数: 0   转发数: 27   评论数: 15
发布工具: 微博 weibo.com

1869:我一直在故意把“Nginx 子请求”、“Nginx 内部跳转”等高级主题分散在前面的教程系列（或者说章节）中介绍。困难的主题采取旁敲侧击、适时重复的教学方法效果最佳。当然，后续会有专门的教程系列（或者说一章）来介绍“Nginx 子请求”这样的主题的，不过那时讲解和学习的压力就小很多了。请大家耐心～  
微博位置: 无
发布时间: 2012-01-08 14:04
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1870:近两年 Nginx 第三方模块的极大丰富，使得通过简单浅显的配置示例来演示和讲解 Nginx 核心中的方方面面成为可能（当然，在此过程中，初学者也可以顺便对那些模块慢慢地熟悉起来）。而在此之前，这是难以想象的，所以现在我动笔写书写教程真可谓是“恰逢其时”！:D  
微博位置: 无
发布时间: 2012-01-08 12:36
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1871:记忆力是需要培养的，至今我还能做到大篇大篇的源码直接在脑袋里回放，来找一些诡异的 bug. 想来少年时代经常参加所谓的“爱国主义知识竟赛”，那可都是整本书整本书地背诵的。因为从小喜欢历史，中学的历史课本我也是整本书整本书地背诵的（连脚注也不例外）。其实人的大脑好比 RAM ，存取速度最快。  
微博位置: 无
发布时间: 2012-01-08 11:03
点赞数: 0   转发数: 9   评论数: 6
发布工具: 微博 weibo.com

1872:我曾说过，抄书这种学习方法是我意外间发现的。初三时，我酷爱化学，总是缠着当时的初中化学老师提各种奇怪的问题，老师拗不过，借给我一本他当年大学时用的课本，《分析化学》。我如获至宝，爱不释手，但借的书总要还，但又不能立马消化，于是我便抄书，抄了整个暑假，结果意外地发现了抄书的奥妙！  
微博位置: 无
发布时间: 2012-01-08 10:44
点赞数: 3   转发数: 61   评论数: 20
发布工具: 微博 weibo.com

1873:如果你把抄书和抄代码仅视为一种“态度”，那可就大错特错了，我可不是那种笨人。我当年学习 Nginx 源码的时候，白天上班就对着 Kindle 抄 C 源，同时就已暗记于心，晚上回家在房子里来回踱步，在脑海中反复回放白天抄过的源码，直至融会贯通，深得其奥妙。这段日子持续了一二月后，便大彻大悟了。  
微博位置: 无
发布时间: 2012-01-08 10:36
点赞数: 5   转发数: 147   评论数: 40
发布工具: 微博 weibo.com

1874:发表了博文 《Nginx 配置指令的执行顺序（六）》 -  前面我们在 （五） 中提到，在一个 location 中使用 content 阶段指令时，通常情况下就是对应的 Nginx 模块注册该 lo http://t.cn/SXLZXO  
微博位置: 无
发布时间: 2012-01-07 22:52
点赞数: 0   转发数: 5   评论数: 1
发布工具: 新浪博客

1875:刚刚在 nginx-devel 邮件列表里又回复了两位开发人员的问题，一位是 Nginx Lua 开发者，一位是 Nginx C 开发者（见 http://t.cn/SXzFAj 和 http://t.cn/SXzFAl )我在 09 年刚开始 Nginx 相关开发的时候也希望得到老手帮助，但那会儿主要靠抄写源码来学习，我的 Kindle DX 就是那会儿为看源码买的。  
微博位置: 无
发布时间: 2012-01-07 19:49
点赞数: 0   转发数: 12   评论数: 2
发布工具: 微博 weibo.com

1876:有一个在百度里 rank 很高的网站转了我的 nginx 教程却未征得我的允许也没有标记“转载”字样，更没有注明出处。我正生气着，不想做这个网站的哥们有一天突然在 gtalk 上找我请教 nginx 方面的问题。结果聊到最后他不小心自报家门，我才知道撞上“冤家”了。对方得知原委后，态度很好，保证立即纠正。  
微博位置: 无
发布时间: 2012-01-07 11:41
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

1877:昨晚刚刚得知，美国一家著名的新闻媒体网站也在生产上应用了我们的 ngx_lua 等模块。他们布署的 nginx 安装包就是基于 ngx_openresty 制做的。巧的是，大学时代我还曾写过一个 Perl 脚本去他们的网站上批量抓取英语新闻下来精读学习，不想若干年后，这个网站背后就运行着我的 C 代码。感觉真是神奇……  
微博位置: 无
发布时间: 2012-01-07 11:12
点赞数: 0   转发数: 7   评论数: 8
发布工具: 微博 weibo.com

1878:发表了博文 《Nginx 配置指令的执行顺序（五）》 -  Nginx 的 content 阶段是所有请求处理阶段中最为重要的一个，因为运行在这个阶段的配置指令一般都肩负着生成“内容”（content http://t.cn/S6nUJ9  
微博位置: 无
发布时间: 2012-01-06 23:23
点赞数: 0   转发数: 4   评论数: 3
发布工具: 新浪博客

1879:“写作优先，有多余的时间再做其他事。”－－《迈克尔·芒格：提高写作水平的十条建议》http://t.cn/apSVQD 这条建议真的非常之好，我现在也把写作放在每天工作的第一位了（或许也就仅次于微博？）多谢 @出版人周筠 老师的推荐！  
微博位置: 无
发布时间: 2012-01-06 21:13
点赞数: 0   转发数: 7   评论数: 4
发布工具: 微博 weibo.com

1880:发表了博文 《Nginx 配置指令的执行顺序（四）》 -  ngx_lua 模块提供了配置指令 access_by_lua，用于在 access 请求处理阶段插入用户 Lua 代码。这条指令运行于 a http://t.cn/S6MCjd  
微博位置: 无
发布时间: 2012-01-05 22:58
点赞数: 0   转发数: 19   评论数: 9
发布工具: 新浪博客

1881:“语言定义了思维的边界”，写作确实有助于我们把一系列认识和思想系统化和条理化。有趣的是，即使是平时和我一起工作并且经常交流的好朋友，也常常能从我的文章中得到许多新的收获，这是我预先没有想到的 ;)  
微博位置: 无
发布时间: 2012-01-05 18:25
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1882:在公司里面写代码经常是容易的，因为一般只有一种操作系统需要支持，同时受公司业务模型的影响，也只有有限的几种玩法。但如果开源出来有许多公司许多人在生产上使用，那情况就大不相同了，一下有 N 种操作系统需要支持，也会有 N 种玩法作用于你的代码，而其中有些操作系统和玩法甚至是你闻所未闻的。  
微博位置: 无
发布时间: 2012-01-05 10:42
点赞数: 0   转发数: 0   评论数: 14
发布工具: 微博 weibo.com

1883:今天经过一位熟悉 PHP 的 ngx_lua 用户的提点，我才知道 W3C 标准建议服务器支持使用分号字符（;）作为查询串（query string）中的参数对分隔符。PHP 支持通过 arg_separator 配置指令修改此分隔符：http://t.cn/SiBspe 看来有必要在 ngx_lua 中也引入一条 lua_arg_separator 配置指令了，呵呵。  
微博位置: 无
发布时间: 2012-01-04 20:21
点赞数: 0   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

1884:现在我的 Test::Nginx 测试台可以同时对 Nginx 生成的 HTTP 响应以及 Nginx 错误日志进行指定的检查，未来或许还可以考虑把 dtrace 输出的自动检测支持也添加进来，呵呵。“黑盒测试”虽然简便易行，但在许多需要更高精细度的场合下，还是远远比不上“白盒”:)  
微博位置: 无
发布时间: 2012-01-04 15:36
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1885:Piotr Sikora 同学这几日正在紧锣密鼓地开发 ZeroMQ 的 Nginx 模块，当然他并没有基于 ngx_lua cosocket 来实现，而是直接在 C 级别上将 XREQ sockets 挂载到 Nginx 事件模型的处理流之上。感兴趣的同学可以关注一下这里的讨论：http://t.cn/SiTcbN  
微博位置: 无
发布时间: 2012-01-04 11:30
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1886:Piotr Sikora 在 nginx 邮件列表中演示了如何综合使用 ngx_auth_request, ngx_postgres 以及 ngx_headers_more 模块来实现基于 Pg 数据库和浏览器基本验证对话框的访问控制：http://t.cn/SiPyi9 当然，这里如果使用 ngx_lua 模块的 access_by_lua 的话，可以更灵活一些，比如替换 Pg 为 mysql 之类。  
微博位置: 无
发布时间: 2012-01-02 16:34
点赞数: 0   转发数: 7   评论数: 2
发布工具: 微博 weibo.com

1887:刚刚在 ngx_lua 的 max-args 分支中为 ngx.req.get_uri_args 和 ngx.req.get_post_args 方法添加了默认解析最多 100 个查询参数的限制。同时为它们添加了一个可选的函数参数，让用户指定上限值（0 表示无限制，不指定时默认 100）。最核心的补丁在这里：http://t.cn/SJOmqE 积极防御哈希表攻击 :)  
微博位置: 无
发布时间: 2012-01-01 14:02
点赞数: 0   转发数: 12   评论数: 3
发布工具: 微博 weibo.com

1888:新年的阳光晒得人懒洋洋的…  原图 
微博位置: 无
发布时间: 2012-01-01 11:38
点赞数: 0   转发数: 0   评论数: 3
发布工具: 2012版Symbian客户端

1889:新年第一天，和媳妇儿一起走环山木栈道~ http://t.cn/SJNusG  显示地图 原图 
微博位置: http://t.cn/SJNusG
发布时间: 2012-01-01 11:30
点赞数: 0   转发数: 0   评论数: 3
发布工具: 2012版Symbian客户端

1890:dtrace是今年我学习的给我震撼最大的东西。原先在生产环境中追踪一些诡异的bug以及制作nginx内部工作细节的演示动画的时候就想着自己基于libgdb搞个类似的东西,当然相比dtrace只是玩具了。有了它,许多有趣的试验和演示动画都可以轻松玩转了!  
微博位置: 无
发布时间: 2011-12-31 14:54
点赞数: 1   转发数: 39   评论数: 15
发布工具: Kjava客户端

1891:dtrace的D脚本写多了就越来越有写awk脚本的感觉,只是略有不同的是,awk脚本一般是处理行文本的状态机,而D脚本是处理运行中的整个软件栈的状态机,呵呵。  
微博位置: 无
发布时间: 2011-12-31 13:43
点赞数: 0   转发数: 1   评论数: 1
发布工具: 短信

1892:性能测试其实是很深的主题,像功能测试一样,测试台自身也可能有bug. 所以我们需要借助源码以及dtrace这样的工具对测试对象的内部工作细节拥有足够多的了解才不致于犯下低级错误而把不正确的性能评测结果拿出去到处宣扬。  
微博位置: 无
发布时间: 2011-12-31 13:26
点赞数: 0   转发数: 2   评论数: 2
发布工具: 短信

1893:刚刚应用了 Chris Dumoulin 提供的一个补丁，修复了 ngx_headers_more 模块中的一个 bug: 原先如果请求头里有 20 多项的时候，删除 20 个以后的某一个“标准请求头”（比如 Host 头）时，会导致数据丢失。该更动已包含在 ngx_openresty 开发版 1.0.10.35 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-12-30 23:23
点赞数: 0   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

1894:学生应当学会利用网络和图书资源，学校间的差距常被许多人夸大了。我本科四年看的全部是美国大学的各科影印版教材，学校下发的中文书只有在最后一学期积欠考试的时候才翻过。大学期间，我就在 IRC 上直接享受到了 Larry Wall, Audrey Tang 等知名黑客手把手的编程指导了。他们的思维方式对我影响极大。  
微博位置: 无
发布时间: 2011-12-30 21:59
点赞数: 1   转发数: 28   评论数: 15
发布工具: 微博 weibo.com

1895:今天读海港工程和英语双学位的妹妹打电话告诉我说，她想实现一个针对海港贸易专业文献的英到汉的翻译程序。由于她缺少计算机专业方面的知识背景，我于是给她开了一个长长的书单让她去图书馆找。对于学生来说，总是可以天马行空地去玩，我非常支持她的“壮举”，呵呵。  
微博位置: 无
发布时间: 2011-12-30 18:44
点赞数: 0   转发数: 0   评论数: 7
发布工具: 微博 weibo.com

1896:今天忙了一天才整理出来三个学生时代做的项目。当时还做了许多有趣的东西，比如一个程序形式化证明系统、交流稳恒电路题求解器、结构化程序变换器、逻辑电路仿真器，等等。现在回过头来看，我自己也惊讶当年充沛的精力和十足的干劲。。。当时做的每一个学习型的项目，对今天的我来说，都是一笔财富。  
微博位置: 无
发布时间: 2011-12-30 18:14
点赞数: 0   转发数: 6   评论数: 11
发布工具: 微博 weibo.com

1897:刚刚整理了一下我在高中时设计并在本科时实现的“高中立体几何定性证明系统”。概览文档在 http://t.cn/SxB8ye 而知识库文档在这里：http://t.cn/SxB8yD 代码仓库我给挪到了 github 上：http://t.cn/SxB8yk 测试集在我的 Linux 上现在还能通过，测试用例都取自高中时我特意搜集的真实的高考题。  
微博位置: 无
发布时间: 2011-12-30 17:16
点赞数: 1   转发数: 30   评论数: 11
发布工具: 微博 weibo.com

1898:我昨晚上确实有些发飙了，表示抱歉。因为我的学习背景和大多数人是如此的不同，所以或许我有必要多在这里介绍过去做的一些项目（也正如一些朋友在评论中建议的那样），否则不少朋友不能理解甚至会误解我说的一些话。我不太方便公开在公司里做的东西，因为可能会涉及商业秘密，同时必然牵扯到业务细节。  
微博位置: 无
发布时间: 2011-12-30 12:10
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1899:刚刚小鱼儿兄在网上跟我说：“早上刷牙的时候，突然想起以前前公司的代码，大概有10w+的代码。如果用lua来替换，保守估计能减少40%以上，要是当年有你的lua模块，多好啊”是啊，都怪我，没早点开始做 ngx_lua 模块 :)  
微博位置: 无
发布时间: 2011-12-30 11:53
点赞数: 0   转发数: 12   评论数: 12
发布工具: 微博 weibo.com

1900:发表了博文 《Nginx 配置指令的执行顺序（三）》 -  前面我们已经知道，除非像 ngx_set_misc 模块那样使用特殊技术，其他模块的配置指令即使是在 rewrite 阶段运行，也不能和 n http://t.cn/Sx0HTF  
微博位置: 无
发布时间: 2011-12-29 23:18
点赞数: 0   转发数: 2   评论数: 2
发布工具: 新浪博客

1901:要做通用的变魔术的东西是困难的，但针对具体问题领域、具体业务领域进行抽象和建模却是容易的。所以，一定要先把问题研究透了，搞明白了，然后其他都好办了。就像我当年在教机器证明高中几何题时，首先我得自己把这类题目吃透一样。同样后来我教机器求解任意复杂稳恒交流电路题时，也得自己先弄明白。  
微博位置: 无
发布时间: 2011-12-29 21:10
点赞数: 0   转发数: 16   评论数: 4
发布工具: 微博 weibo.com

1902:如果你觉得这些做法值得写 paper，那又错了。这些做法并没有什么学术含量。只是许多人根本不会想到，“原来我还可以这么做！”具体实现方法一点儿都不稀奇，稀奇的是思路，是意识，是对问题本身的理解。  
微博位置: 无
发布时间: 2011-12-29 20:58
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1903:我觉得在编程学习的早期，还是不要过早接受太多的二手知识以及各种工程方法论。我们已经习惯去接受现成的答案和现成的做法。这些二手知识和别人的经验在我们自己还未及深入思考前会损害我们的原创力，会禁铟我们的思想。这是天底下最不幸的事情。所以我招人的时候，宁可招一张白纸，但一定要有好奇心。  
微博位置: 无
发布时间: 2011-12-29 20:55
点赞数: 0   转发数: 29   评论数: 9
发布工具: 微博 weibo.com

1904:在淘宝的时候，面对着一个历史遗留的糟糕的 C 系统要改造，并且要做到快速响应变化的具体需求。我于是写了一个小脚本，先从这个老系统的 C 源码抽取信息，生成了一个“文档”，然后又写了一个小工具，从这个“文档”自动生成新系统的 C 源码。而且以后，需求变了，只要修改文档，系统就自动更新。  
微博位置: 无
发布时间: 2011-12-29 20:50
点赞数: 0   转发数: 11   评论数: 18
发布工具: 微博 weibo.com

1905:中学时代，在掌握了第一门编程语言 C 之后，我就开始着手教机器求解各科的高考题了。于是具体用什么语言什么工具来实现我一点儿都不关心，我只关心和机器沟通的效率，我是老师，机器就是学生。要让不少高中生都解不开的难题让机器应付自如，不仅解题方法要有高效的表达方法，题目本身也需要有效地表达  
微博位置: 无
发布时间: 2011-12-29 20:47
点赞数: 1   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

1906:不少看官说我讲的东西玄，其实早在学生时代，我就已经从 Intel 官方的 IA-32 开发人员手册这个PDF文档自动生成比较完整的 x86 反汇编器的实现了，包括C、Perl和 VHDL实现。在此过程中还发现了官方文档中的不少错误，还有 NASM 中的一个 bug. 从此，“文档即程序”和“程序即数据”的思想就深入骨髓了。  
微博位置: 无
发布时间: 2011-12-29 20:44
点赞数: 0   转发数: 25   评论数: 10
发布工具: 微博 weibo.com

1907:其实在构造很多复杂系统的时候，实现代码并不仅仅是代码，而是一组信息，我们传达给机器并为之理解的信息。就像我们和某人谈话是为了让对方明晓我们的“意思”，而非使用的具体词句一样。于是任何含有足够信息的简单的东西都可以用来作为代码的“源头”，换句话说，都可用来生成代码。这是编程的本质。  
微博位置: 无
发布时间: 2011-12-29 20:03
点赞数: 1   转发数: 22   评论数: 6
发布工具: 微博 weibo.com

1908:刚刚发布了 ngx_openresty 开发版 1.0.10.33: http://t.cn/aCdPzo 修复了 ./configure 脚本的 --add-module 选项不支持相对路径作为值的问题。多谢@120斤的大青蛙 的补丁 :)  
微博位置: 无
发布时间: 2011-12-29 11:21
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

1909:孟涣生先生一大早就开始跟我聊中国天文学史方面的内容，无奈我才疏学浅，只有听的份了：http://t.cn/SxcyOf 每次和孟先生聊，我都不禁自惭形秽起来。。。  
微博位置: 无
发布时间: 2011-12-29 10:45
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1910:发表了博文 《Nginx 配置指令的执行顺序（二）》 -  我们前面已经知道，当 set 指令用在 location 配置块中时，都是在当前请求的 rewrite 阶段运行的。事实上，在此上下文中，n http://t.cn/SxwtK0  
微博位置: 无
发布时间: 2011-12-28 20:47
点赞数: 0   转发数: 5   评论数: 14
发布工具: 新浪博客

1911:我在换了一个 A4 尺寸的大工作薄之后，发现自己明显比原先使小本子的时候更能写了，昨天下午起草的（二）实际录入机器的时候，发现篇幅上已经可以用作两篇教程了，耶！:D （我每一篇有一个不成文的字数约定，1300 个汉字，或者 1800 个出版商通行意义上的“字”。）  
微博位置: 无
发布时间: 2011-12-28 17:05
点赞数: 0   转发数: 0   评论数: 8
发布工具: 微博 weibo.com

1912:发表了博文 《Nginx 配置指令的执行顺序（一）》 -  大多数 Nginx 新手都会频繁遇到这样一个困惑，那就是当同一个 location 配置块使用了多个 Nginx 模块的配置指令时，这些指令 http://t.cn/SMHknJ  
微博位置: 无
发布时间: 2011-12-27 22:14
点赞数: 0   转发数: 19   评论数: 9
发布工具: 新浪博客

1913:按照目前的计划，《Nginx 简明教程》的篇幅大约在 200 千字到 300 千字之间（目前写好的基础素材有 20 千字），我希望这本书是一本拿在手上很轻盈的小册子 :) 计划将采取教材的编写方法，而不是参考手册，所以我不会以 Nginx 模块为单位进行讲解，而是围绕功能点、知识点和实际应用的各种需求。  
微博位置: 无
发布时间: 2011-12-27 19:28
点赞数: 0   转发数: 15   评论数: 22
发布工具: 微博 weibo.com

1914:今天下午我把“Nginx 配置指令的执行顺序（二）”也在我的小工作簿上起草好了，竟然写到笔没油了，汗。感觉越往后写越顺手，主要原因是依赖的那些基础知识点先前多已经介绍过了，所以不会再特别纠结于讲述顺序上的安排。最麻烦的其实就是刚开始的时候，一系列彼此依赖的基本知识点，先介绍谁都不好 ;)  
微博位置: 无
发布时间: 2011-12-27 17:32
点赞数: 0   转发数: 2   评论数: 9
发布工具: 微博 weibo.com

1915:我目前发表的所有 Nginx 教程在正式发布前都会首先经过我媳妇儿的仔细编辑。所以虽然“Nginx 配置指令的执行顺序（一）”现在已经基本写成，但我还是需要等媳妇儿傍晚下班回来 review 过才能发出。拥有一位在出版社做全职编辑工作的老婆真是一件很幸福的事情 :D @0597笛桃  
微博位置: 无
发布时间: 2011-12-27 15:02
点赞数: 0   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

1916:我一直很敬佩发明电磁感应定律的法拉第，他是能够用初等代数和通俗文字把现代教材必须用积分方程表达的定律描述得很清晰的语言大师。霍金也提到在他的宇宙学科普读物中每引入一个数学公式就会让销量减半的笑话。所以我在我的 Nginx 教程中也要不引用 Nginx 内部的 C 源码的同时也达到应有的深度！:D  
微博位置: 无
发布时间: 2011-12-27 11:40
点赞数: 1   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

1917:@罗翅膀716 曾跟我说，见多识广的一大好处就是校园招聘时不容易被有很深的 Windows 背景的小朋友们给随便“忽悠”了，哈哈！  
微博位置: 无
发布时间: 2011-12-27 10:45
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1918:虽说“代码不会骗人”，但如果带着一些偏见和误解去看的话，代码从某种意义上说，还是会“骗人”的 :) 所以最稳妥的办法是同时辅之以一系列精心设计的小实验来验证我们的理解。最怕的便是草草看完代码就急着下结论 ;) 虽然这是很简单的道理，但偷懒的诱惑经常让人无法抗拒。。。  
微博位置: 无
发布时间: 2011-12-26 16:18
点赞数: 1   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1919:这两天我开始构思第二个系列的 Nginx 教程了。该系列的名字就叫做“Nginx 中的执行顺序”吧。说到“顺序”，自然得从 Nginx 中的各个请求处理阶段开始谈起，然后再聊一聊带缓冲以及不带缓冲的输入和输出，还有同步操作与异步操作等等和“顺序”密切相关的有趣问题 :)  
微博位置: 无
发布时间: 2011-12-26 13:04
点赞数: 0   转发数: 27   评论数: 29
发布工具: 微博 weibo.com

1920:我刚刚发布了 ngx_openresty 开发版 1.0.10.31：http://t.cn/aCdPzo 将 LuaJIT 升级到了最新的 2.0.0beta9，同时包含了 ngx_lua 和 ngx_headers_more 模块的一些小 bug 修复，详情见更动记录：http://t.cn/SI17Ru 该发布并未包含 ngx_lua 的 cosocket 特性。  
微博位置: 无
发布时间: 2011-12-25 21:55
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

1921:最新发布的 LuaJIT 2.0.0 beta9 引入的一处改进是不再允许非法的字符转义序列，比如 "\s" 在标准 Lua 5.1 和 LuaJIT 2.0beta8 中都等效于"s"，因为 \s 不是合法的转义序列。而在 LuaJIT 2.0beta9 中会直接报语法错误：invalid escape sequence near '"' 该变化也被我们 ngx_lua 模块的测试集捕捉到了。  
微博位置: 无
发布时间: 2011-12-25 21:06
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1922:在森林公园划船中～  显示地图 原图 
微博位置: 无
发布时间: 2011-12-25 16:36
点赞数: 0   转发数: 0   评论数: 3
发布工具: 2012版Symbian客户端

1923:昨天从源码构造 gcc 编译器的过程中，顺便看了一下它的几个依赖库，比如 MPC, PPL, 还有 CLooG 都非常有趣：http://t.cn/hBu2aS 后面有时间值得好好学习和研究一下 :) 虽然自己编源码经常会比直接用二进制版本累很多，但时常能有这样的惊喜，也真的值了 ;)  
微博位置: 无
发布时间: 2011-12-25 14:25
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

1924:很高兴我的 mockeagain 极端网络模拟器 http://t.cn/SIHrNh 在 FreeBSD 8.2 上也能通过 LD_PRELOAD 机制很好地工作，只可惜在 Mac OS X 上还一直没能通过 DYLD_INSERT_LIBRARIES 跑起来 :(  
微博位置: 无
发布时间: 2011-12-25 13:48
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1925:其实还是从宿主 OS 的终端直接 ssh 到 VirtualBox 里跑着的虚拟机最为方便。最初我想不开，非要在 guest OS 里装桌面，那叫一个慢啊，呵呵。后来发现 VirtualBox 可以创建 host-only 网络适配器，再在 guest OS 里为相应的网络接口配置 DHCP 或者绑定静态 IP 地址，同时启动 sshd 服务就完事了 :)  
微博位置: 无
发布时间: 2011-12-25 11:44
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1926:运气太好，圣诞节一早碰上 Google 502 错误页。  原图 
微博位置: 无
发布时间: 2011-12-25 11:30
点赞数: 0   转发数: 1   评论数: 0
发布工具: 2012版Symbian客户端

1927:刚刚想不开，自己在 Linux 上从源码编了一个最新的 gcc 4.6.2，折腾了两个钟头才搞定。然后和本机原来的 gcc 4.4.3 作了一下比较，发现编译 Nginx 时慢了 10% 以上。不过我主要看重 gcc 4.6 新添加的 -Wunused-but-set-variable 和 -Wunused-but-set-parameter 警告功能，而且 Paul Fox 同学也很喜欢～  
微博位置: 无
发布时间: 2011-12-24 20:08
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

1928:Piotr Sikora 在 ngx_postgres模块的master分支中修复了与poll事件接口的兼容性问题，于是我得以让我的mockeagain工具作用于 ngx_postgres 的测试集。果然，即使是访问本机的Pg，也能可靠地捕捉到libpq库的非阻塞写的bug：未能很好地处理EAGAIN. 而同样条件下，ngx_drizzle模块的测试集则能全部通过。  
微博位置: 无
发布时间: 2011-12-24 16:30
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1929:和老婆吃完大餐在乌山散步~阳光真好~  原图 
微博位置: 无
发布时间: 2011-12-24 15:09
点赞数: 0   转发数: 2   评论数: 12
发布工具: 2012版Symbian客户端

1930:我们生活在一个技术世界百家争鸣、百花齐放的时代，虽然大家对协作谈得少了，但另一方面可供我们研究和比较的实现案例也空前丰富起来。对于类似的产品和工具，我们应少一些“非此即彼”的无谓争论，而应把更多精力放在具体得失的科学试验和精细分析上。从这个过程中提炼出来的经验和知识才最为宝贵。  
微博位置: 无
发布时间: 2011-12-24 11:00
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

1931:LuaNode 的作者刚刚告诉我，他也在 LuaNode 的 coroutines 分支中实现了我们的 cosocket 机制，依然有意兼容 LuaSocket 的 API：http://t.cn/SIGa9h 有趣的是，他也遇到了所谓的 Lua 协程调度的问题，我们也需要仿照 Erlang 和 Golang 这样的东西，自己实现协程调度器（scheduler）。越来越有趣了！  
微博位置: 无
发布时间: 2011-12-23 22:54
点赞数: 1   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1932:我突然发现 LuaSocket 库里面的 ftp.lua、smtp.lua 还有 http.lua 等 Lua 包都是建立在其 socket.tcp 包的基础上的。这意味着。。。它们理论上也可以在 ngx_lua 模块的 cosocket 设施上直接非阻塞运行！因为 cosocket 已经实现了 socket.tcp 模块的核心功能！当然，其中的一些库可能还得稍微修改一下。  
微博位置: 无
发布时间: 2011-12-23 16:41
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1933:我刚到福州的 4 个月里每天在家像驴一样地修我各个 nginx 模块里的 bug，现在我的 Gmail 收件箱里终于清静了 :D  
微博位置: 无
发布时间: 2011-12-23 16:16
点赞数: 0   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

1934:感谢“又拍云存储”(http://t.cn/ScVxoz )和“去哪儿网”(http://t.cn/hVxYd )分别赞助了我一年期的 GitHub 付费帐户（是的，一共两年，耶！）。“又拍云存储”和“去哪儿网”都是我们多个 Nginx 模块（乃至整个 ngx_openresty）的生产用户 :) 再次感谢支持！  
微博位置: 无
发布时间: 2011-12-23 15:49
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1935:原来在公司的时候，有人批评我们把 Lua 嵌入到 Nginx 中是“暴力强行嫁接”，我当时就很生气：Lua 天然就是被设计成嵌入到 C/C++ 系统中的，人家 MySQL Proxy 能嵌入 Lua，Tokyo Tyrant 能嵌入 Lua，Redis 能嵌入 Lua，甚至连 NetBSD kernel 都能嵌入 Lua，凭啥老子就不能？！  
微博位置: 无
发布时间: 2011-12-23 12:01
点赞数: 0   转发数: 32   评论数: 20
发布工具: 微博 weibo.com

1936:ngx_lua 模块的 cosocket 分支目前余下的比较重要的工作还有：TCP socket 对象的 settimeout 方法和 setoption 方法（目前这两个方法都是空操作），内建的 socket 连接池支持，以及 UDP socket API. 工作在这个分支上的时候可真是心潮澎湃呀，每天都有欣喜 :D  
微博位置: 无
发布时间: 2011-12-22 22:23
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1937:刚刚又试了一下 Daniele Alessandri 编写的 lua-redis 这个基于 LuaSocket 的 Lua 库，在 ngx_lua 上也能自动非阻塞运行：http://t.cn/SfEQdl 这证明了我们通过 cosocket 可以直接复用 Lua 世界里许多现成的客户端库，包括 memcached 和 redis 在内，只要是基于 LuaSocket 编写的纯 Lua 实现就可以。  
微博位置: 无
发布时间: 2011-12-22 22:15
点赞数: 0   转发数: 10   评论数: 19
发布工具: 微博 weibo.com

1938:刚刚测试了一下在 ngx_lua 中使用 cosocket 摸拟 LuaSocket 运行 Neil Richardson 编写的 lua-memcached 库，取得成功：http://t.cn/Sf81jE 当然，为了让这个对我们的 cosocket 一无所知的 lua-memcached 库相信我们的 ngx.socket 就是它所依赖的 LuaSocket，我们在 require 加后分别加了一行代码。  
微博位置: 无
发布时间: 2011-12-22 21:14
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1939:刚刚为 ngx_lua 模块的 cosocket 接口实现了 LuaSocket 库的 socket.connect() 快捷方式：http://t.cn/SfTOOn 当然，最后两个可选的参数 locaddr 和 locport 尚未实现 ;) 已经通过的测试用例在这里：http://t.cn/SfTOOR  
微博位置: 无
发布时间: 2011-12-22 18:44
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1940:早上用 valgrind memcheck 运行 ngx_lua 的测试集，捕捉到 nginx 核心中的一个内存相关的小 bug，于是弄了一个小补丁提交到了 nginx-devel 邮件列表：http://t.cn/Sf9J3y 该补丁将包含在 ngx_openresty 的下一个开发版中 :)  
微博位置: 无
发布时间: 2011-12-22 11:26
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

1941:在 nginx 核心的事件模型中，epoll 和 kqueue 都配置成边沿触发（ET），而 poll, select, /dev/poll 等等都是水平触发（LT）。我在测试我的 nginx C 代码时，总是需要分别用 ET 和 LT 运行测试集（外加 valgrind, etcproxy, mockeagain 等辅助工具），这样可以覆盖 nginx 事件模型中的大部分代码路径。  
微博位置: 无
发布时间: 2011-12-21 21:30
点赞数: 0   转发数: 13   评论数: 7
发布工具: 微博 weibo.com

1942:原来 Google 也是 Lua 玩家：http://t.cn/aNeqG1 难怪它曾出资 8000 欧元赞助 Mike Pall 同学开发 LuaJIT 2.0 的 x86_64 支持呢：http://t.cn/Stgpu9  
微博位置: 无
发布时间: 2011-12-21 16:15
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1943:我一直很注意控制 ngx_openresty 源码包的大小，就像控制 ngx_openresty 的内存占用一样。最近的几次发布的 tar.gz 包都稳定在 2.5 MB，虽然加了不少功能。相比 Nodejs 0.6.6 的 10.0 MB、PostgreSQL 9.1.1 的 15 MB 以及 MySQL 5.5.13 的 23 MB，我还有不小的“上升空间”，呵呵。  
微博位置: 无
发布时间: 2011-12-21 14:54
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

1944:我在从事 Nginx 相关的 C 开发过程中，一般需要花费 50% 以上的代码和文档，以及 90% 以上的时间、精力以及测试用例在各种异常情况的处理上 :)  
微博位置: 无
发布时间: 2011-12-21 13:03
点赞数: 0   转发数: 2   评论数: 6
发布工具: 微博 weibo.com

1945:ngx_lua 模块的 git cosocket 分支这几日进展顺利,我用 1000 多行 C 实现了 LuaSocket 库的 TCP 接口的主要部分。已经通过的测试用例在这里： http://t.cn/SVY2Lq 目前的实现还很粗糙，不支持非阻塞域名解析，并且 Lua Socket 对象不支持跨越 nginx 当前请求的边界。后面会逐步解决这些问题 :)  
微博位置: 无
发布时间: 2011-12-20 12:36
点赞数: 0   转发数: 20   评论数: 6
发布工具: 微博 weibo.com

1946:我在这几日在实现 ngx_lua 的 cosocket API 的过程中，不由想到，我们应该允许像 libpq 和 libdrizzle 这样现成的支持非阻塞通信的 C 客户端库，也能以 Lua C 模块（或者 LuaJIT FFI 扩展）的形式，动态挂载到 ngx_lua 的 cosocket 系统上去，就好像 libpq 等 C 库也是基于 cosocket 编写的纯 Lua 库。  
微博位置: 无
发布时间: 2011-12-20 10:20
点赞数: 0   转发数: 2   评论数: 8
发布工具: 微博 weibo.com

1947:和@定球呀球 一直筹划着自费在 Amazon EC2 上拉一个规模比较大的集群作各种与 C10K 问题相关的高并发测试和试验 :) 其实即使是在比较大的互联网公司工作，也难有真正很多的机器去让工程师去做试验（做生产倒是没问题）。  
微博位置: 无
发布时间: 2011-12-19 11:20
点赞数: 0   转发数: 3   评论数: 17
发布工具: 微博 weibo.com

1948:其实 ngx_lua 的 cosocket 支持是 php2lua, js2lua, perl2lua 等各种上层编译器的先决条件，我们毕竟不希望在摸拟这些语言的 mysql/memcached/redis 库的 API 时引入 nginx 子请求和 upstream 配置。话说晓哲等我实现 cosocket 已经等了快两年了 :P 我最近一直工作在 ngx_lua 的 git cosocket 分支上。  
微博位置: 无
发布时间: 2011-12-18 18:32
点赞数: 0   转发数: 2   评论数: 11
发布工具: 微博 weibo.com

1949:踩脚踏船是不错的健身运动啊~  显示地图 原图 
微博位置: 无
发布时间: 2011-12-17 16:24
点赞数: 0   转发数: 0   评论数: 1
发布工具: S60客户端

1950:和媳妇儿在福州西湖公园玩。“小南方”确实暖和，接近二十度的气温很舒服。  原图 
微博位置: 无
发布时间: 2011-12-17 15:41
点赞数: 0   转发数: 2   评论数: 7
发布工具: S60客户端

1951:Facebook 公司一年前赞助我的 GitHub 付费帐户快到期了，这一年来用得还挺好，比免费帐号确实爽不少，准备自己再续一年玩玩 :)  
微博位置: 无
发布时间: 2011-12-17 13:21
点赞数: 0   转发数: 0   评论数: 9
发布工具: 微博 weibo.com

1952:署名“天街夜色”的同学昨晚报告了 ngx_headers_more 模块修改 Accept-Encoding 头时的一个小 bug，即新添加此请求头，不能为 ngx_gzip 等其他 nginx 模块所识别。同时修复了 ngx_lua 模块的请求头修改接口中的相同问题。这些更动已包含在了 ngx_openresty 开发版 1.0.10.29 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-12-17 13:06
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

1953:今天修复了 ngx_lua 模块中的 ngx.flush(true) 同步刷写输出的功能中的一个小 bug. 这个 bug 是我昨天工作在 cosocket 分支上时，无意中在源码中发现的。为该 bug 设计测试用例让我费了些心思，好在因为有 mockeagain 这样的工具，变得容易了许多。其实很多时候准备测试用例比修 bug 本身要困难得多。  
微博位置: 无
发布时间: 2011-12-16 21:52
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

1954:Nginx 模块 Naxsi （http://t.cn/akdRJ5 ）的作者 bui 刚刚在 IRC 上找到我说，他现在的开发已经高度依赖我们的 Test::Nginx 测试台模块了，希望我能把他的 Naxsi 模块的名字也添加到 Test::Nginx 文档中的用户模块列表中：http://t.cn/ScoTuR 开心～  
微博位置: 无
发布时间: 2011-12-16 19:17
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1955:编写一些简单的 Perl 脚本对 C 源进行静态代码扫描往往可以收到特别好的效果，比如可以自动检测我经常犯但是编译器和测试集都不能捕捉到的编码错误，例如动态分配内存后未检查返回的指针是否为空，当然还能发现代码风格上的不一致问题，比如源码行是否超过 80 列以及是否误用了 C++ 行注释记法之类 :D  
微博位置: 无
发布时间: 2011-12-16 16:23
点赞数: 1   转发数: 14   评论数: 8
发布工具: 微博 weibo.com

1956:今天一哥们告诉我说，他都在 128MB 内存的 VPS 主机上用 ngx_openresty 跑基于 Pg 数据库的应用，我表示压力有点儿大 :P  
微博位置: 无
发布时间: 2011-12-16 15:46
点赞数: 0   转发数: 5   评论数: 9
发布工具: 微博 weibo.com

1957:我希望 IT 圈的科学氛围能够越来越浓起来，而不致越来越像时尚圈、娱乐圈和商圈。我也希望没事就跟我谈“钱途”，谈“流行”、谈“市场”的圈内人能够越来越少。当然，这只是我个人的希望，我不想也不能要求其他人也这么希望 :)  
微博位置: 无
发布时间: 2011-12-16 11:54
点赞数: 1   转发数: 7   评论数: 14
发布工具: 微博 weibo.com

1958:我在实现 ngx_lua cosocket 机制的过程中，突然意识到，如果要让我的 socket 对象跨越请求的边界，我也需要像 Erlang gen_tcp 那样引入“controlling process”的概念。当然，在 ngx_lua 的上下文中，“轻量级进程”便是 Lua coroutine，而这里的 coroutine 同时又是与 Nginx 的“当前请求”绑定的 ;)  
微博位置: 无
发布时间: 2011-12-15 20:57
点赞数: 0   转发数: 10   评论数: 2
发布工具: 微博 weibo.com

1959:Valgrind 工具箱中的 SGCheck 工具可用于检测栈变量和全局变量的内存问题。我发现使用 SGCheck 启动 Nginx 会比 Memcheck 工具慢上三倍以上。刚利用 SGCheck 运行 ngx_srcache 模块的测试集，并没有捕捉到有趣的内存 bug，后面再试试其他模块的测试集，反正现在我们可以通过环境变量来选择工具了 :D  
微博位置: 无
发布时间: 2011-12-14 21:54
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1960:刚刚为 Test::Nginx 测试台添加了一个新功能，即允许用户通过环境变量 TEST_NGINX_USE_VALGRIND 来指定自己的 valgrind 命令行选项。当置为 1 时，等价于值“--tool=memcheck --leak-check=full”，兼容老行为。如果我们希望使用 SGCheck 工具来运行测试，指定其值为“--tool=exp-sgcheck”就可以了。  
微博位置: 无
发布时间: 2011-12-14 21:50
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

1961:这两天修复了 ngx_srcache 自 v0.13rc1 引入的一处衰退，即它自从 v0.13rc1 起就不能和 ngx_xss 等输出过滤器模块一起工作。此更动已包含在 ngx_srcache v0.13rc3 和 ngx_openresty 开发版 1.0.10.25 中：http://t.cn/aCdPzo 感谢@珣新 昨天的报告！  
微博位置: 无
发布时间: 2011-12-14 20:52
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

1962:午后，坐在广场上晒太阳真不错～  原图 
微博位置: 无
发布时间: 2011-12-14 14:27
点赞数: 0   转发数: 0   评论数: 5
发布工具: S60客户端

1963:刚刚为我现有的 Nginx 系列教程生成了 .mobi 和 .epub 电子书格式的文件：http://t.cn/StGtLP 放在 Kindle 等阅读器中看还是挺爽的。写了一些 Perl 脚本利用 calibre 工具自动生成的。那些脚本都在教程的 git 仓库里面，直接在根目录上 make 一下就会生成。我会定期更新这两个电子书文件，呵呵。  
微博位置: 无
发布时间: 2011-12-12 23:17
点赞数: 0   转发数: 16   评论数: 9
发布工具: 微博 weibo.com

1964:drizzle 团队的 Brian Aker 同学说 libdrizzle 下面将重新以独立的库的形式单独发布，于是我们可以期望那些变态的 drizzle7 的依赖项检测可以统统消失了，呵呵。他们现在正在做这个工作。  
微博位置: 无
发布时间: 2011-12-12 11:21
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

1965:刚刚发布了 ngx_openresty 稳定版 1.0.10.24: http://t.cn/S5g7ck 这是第一个基于 nginx 1.0.10 核心的 ngx_openresty 稳定版。感谢所有的贡献者和用户的帮助与支持！:D  
微博位置: 无
发布时间: 2011-12-11 23:27
点赞数: 0   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

1966:发现作为一程序员，英语水平真的非常重要，下面几个月还得接受我媳妇儿为我准备的英语强化课程。我很庆幸本科四年读的全是美国各科的影印版教材，比如微积分、大学物理、逻辑设计、电路分析、编译原理、操作系统、生物信息学，等等等等，使得我后来许多年可以自如地和世界各国的程序员紧密联系在一起。  
微博位置: 无
发布时间: 2011-12-11 21:13
点赞数: 2   转发数: 18   评论数: 14
发布工具: 微博 weibo.com

1967:这棵大榕树好酷啊…  原图 
微博位置: 无
发布时间: 2011-12-10 14:35
点赞数: 0   转发数: 0   评论数: 5
发布工具: S60客户端

1968:发表了博文 《Nginx 变量漫谈（八）》 -  与 $arg_XXX 类似，我们在 （二） 中提到过的内建变量 $cookie_XXX 变量也会在名为 XXX 的 cookie 不存在时返回特殊值“ http://t.cn/S5cIag  
微博位置: 无
发布时间: 2011-12-09 23:47
点赞数: 0   转发数: 5   评论数: 2
发布工具: 新浪博客

1969:当年我把量子统计的 php-fpm 实现的数据接口用 ngx_lua + 标准 Lua 改写之后，真实的直通车报表的业务接口，在 mysql 自身的查询缓存命中时平均响应时间的变化：http://t.cn/S52F2E 后来从标准 Lua 切换到 LuaJIT 2.0 后真实业务接口的延时变化：http://t.cn/S52F2n 当然，并发能力更有极大提升。  
微博位置: 无
发布时间: 2011-12-09 18:36
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

1970:我刚刚对“Nginx 变量漫谈”系列已发表的那几篇文章，按读者反馈，进行了大面积修订，同时添加了文章间的交叉引用，方便读者跳转参考。我不希望读者转载的一大原因也正在于此：转载后的拷贝版本是死的，我就不能再同步更新了 ;) 当时，拒绝转载的另一大原因是版权要求，毕竟我是下了很大的工夫的。  
微博位置: 无
发布时间: 2011-12-09 16:12
点赞数: 0   转发数: 4   评论数: 10
发布工具: 微博 weibo.com

1971:在网上到处抓老朋友们聊天，才发现原来自己是最闲的 :P 做闲人的感觉真好，呵呵。  
微博位置: 无
发布时间: 2011-12-09 15:41
点赞数: 0   转发数: 0   评论数: 8
发布工具: 微博 weibo.com

1972:我在我的Nginx教程中遵循的一个原则是，尽量通过短小精悍的实例来佐证我陈述的原理和观点。我希望帮助读者养成不随便听信别人现成的观点和陈述，而通过自己运行实例来验证的好习惯。这种风格或许也和我的QA背景有关。事实上我在写作过程中也经常按我的例子的实际运行结果，不断对教程的内容进行修正。  
微博位置: 无
发布时间: 2011-12-09 11:35
点赞数: 1   转发数: 9   评论数: 7
发布工具: 微博 weibo.com

1973:我现在编写的教程是按所谓的“系列”来划分的，比如当前正在连载中的“Nginx 变量漫谈”系列。每一个系列基本上都可以粗略对应到未来出的 Nginx 书中的一“章”（当然内部还会重新组织内容并划分出“节”来）。我面向的读者是各个水平层次的 Nginx 用户，同时也包括未使用过 Nginx 的 Apache 等用户。  
微博位置: 无
发布时间: 2011-12-09 11:27
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

1974:发表了博文 《Nginx 变量漫谈（七）》 - 在 （一） 中我们提到过，Nginx 变量的值只有一种类型，那就是字符串，但是变量也有可能压根就不存在有意义的值。没有值的变量也有两种特殊的值：一种是“ http://t.cn/SqdV7I  
微博位置: 无
发布时间: 2011-12-08 23:23
点赞数: 0   转发数: 5   评论数: 2
发布工具: 新浪博客

1975:刚刚 Weibin Yao 同学在 GTalk 上如是说，“lua模块真不错，我所有的功能都测试成功了，呵呵。我觉得我写的大部分(nginx)模块都可以用lua模块来实现。”:D  
微博位置: 无
发布时间: 2011-12-08 17:36
点赞数: 0   转发数: 12   评论数: 5
发布工具: 微博 weibo.com

1976:发表了博文 《Nginx 变量漫谈（六）》 -  Nginx 内建变量用在“子请求”的上下文中时，其行为也会变得有些微妙。   前面我们已经知道，许多内建变量都不是简单的“存放值的容器”，它们一般会通 http://t.cn/Sq0GrH  
微博位置: 无
发布时间: 2011-12-07 23:33
点赞数: 0   转发数: 8   评论数: 3
发布工具: 新浪博客

1977:发表了博文 《Nginx 变量漫谈（五）》 -  前面我们已经了解到变量值容器的生命期是与请求绑定的，但是我当时有意避开了“请求”的正式定义。大家应当一直默认这里的“请求”都是指客户端发起的 HTTP http://t.cn/Sq4tNq  
微博位置: 无
发布时间: 2011-12-06 22:53
点赞数: 0   转发数: 7   评论数: 7
发布工具: 新浪博客

1978:今晚要发表的 Nginx 教程初稿，媳妇儿非要拍下来留念~  原图 
微博位置: 无
发布时间: 2011-12-06 21:34
点赞数: 1   转发数: 6   评论数: 9
发布工具: S60客户端

1979:刚刚收到一封技术求助邮件，开头竟是“hi 不知大名的nginx高手”，这种明显可以群发的邮件我只能直接忽略掉了，呵呵。  
微博位置: 无
发布时间: 2011-12-06 16:08
点赞数: 0   转发数: 1   评论数: 10
发布工具: 微博 weibo.com

1980:刚刚给 Test::Nginx 测试台添加了对环境变量 TEST_NGINX_USE_HUP 的支持：当该环境变量置为 1 时，脚试脚本设置的 repeat_each(N) 中的 N 个连续测试之间会自动向 Nginx 进程发 HUP 信号重新加载配置，这样就有机会发现 HUP 处理的一部分 bug. 环境变量 TEST_NGINX_VERBOSE 为 1 时可以看到调试输出。  
微博位置: 无
发布时间: 2011-12-06 12:58
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

1981:发表了博文 《Nginx 变量漫谈（四）》 -  在设置了“取处理程序”的情况下，Nginx 变量也可以选择将其值容器用作缓存，这样在多次读取变量的时候，就只需要调用“取处理程序”计算一次。我们下面就 http://t.cn/SGBA3w  
微博位置: 无
发布时间: 2011-12-05 23:10
点赞数: 0   转发数: 6   评论数: 3
发布工具: 新浪博客

1982:刚刚发布了 ngx_openresty 开发版 1.0.10.23: http://t.cn/aCdPzo 在这个版本中为 ngx_lua 模块添加了新常量 ngx.HTTP_GATEWAY_TIMEOUT (504)，同时为 ngx_rds_json 模块添加了更多的 debug 级别的日志输出。另外，把 ngx_xss 模块的 info 级别的输出都改为 debug 输出，以减少非调试版本的开销 :)  
微博位置: 无
发布时间: 2011-12-05 21:03
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

1983:今天听 cnhackTNT 跟我介绍了“上海非盈利Geek基地”这个有意思的组织，他们的网站在这里：http://t.cn/aOPXPT 号称 0x65 组织，哈哈！IT 人自己筹资在上海市中心经营一家非盈利的小咖啡厅，专用于 IT 人自己的聚会，呵呵～  
微博位置: 无
发布时间: 2011-12-05 14:58
点赞数: 0   转发数: 11   评论数: 9
发布工具: 微博 weibo.com

1984:对于希望长寿的开源软件来说，开放和协作是唯一的道路。虽然另立分支会让短期的需求得到快速满足，但对于开源软件来说，对外开放源代码只是万里长征走完第一步，社区的培育等工作都需长年付出极大艰辛。想当年雅虎什么都喜欢自己搞一堆 Y 字头分支，什么 yapache, ybsd, ywget 多数都烂在自己家里了。  
微博位置: 无
发布时间: 2011-12-05 12:10
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

1985:发表了博文 《Nginx 变量漫谈（三）》 - 也有一些内建变量是支持改写的，其中一个例子是 $args. 这个变量在读取时返回当前请求的 URL 参数串（即请求 URL 中问号后面的部分，如果有的话 http://t.cn/SGPwXH  
微博位置: 无
发布时间: 2011-12-04 14:04
点赞数: 0   转发数: 12   评论数: 5
发布工具: 新浪博客

1986:我以前从没用过@新浪博客 现在我终于意识到在上面写技术文章，真的需要精通 Perl，以便准备一系列文本处理脚本，以便和@新浪博客 的过滤和显示系统斗智斗勇。。。我的脚本都在这儿了，呵呵：http://t.cn/SbO5cg 作为一个不问政治的好用户，其实写点东西也不容易。。。  
微博位置: 无
发布时间: 2011-12-02 22:54
点赞数: 0   转发数: 8   评论数: 12
发布工具: 微博 weibo.com

1987:发表了博文 《Nginx 变量漫谈（二）》 -  关于 Nginx 变量的另一个常见误区是认为变量容器的生命期，是与 location 配置块绑定的。其实不然。我们来看一个涉及“内部跳转”的例子：   http://t.cn/Sb0SXD  
微博位置: 无
发布时间: 2011-12-02 22:11
点赞数: 0   转发数: 10   评论数: 7
发布工具: 新浪博客

1988:发表了博文 《Nginx 变量漫谈（一）》 -  Nginx 的配置文件使用的就是一门微型的编程语言，许多真实世界里的 Nginx 配置文件其实就是一个一个的小程序。当然，是不是“图灵完全的”暂且不论 http://t.cn/SbGRy2  
微博位置: 无
发布时间: 2011-12-01 19:21
点赞数: 0   转发数: 41   评论数: 13
发布工具: 新浪博客

1989:因为懒得自己架博客，就在新浪上开了一个：http://t.cn/S4kape 准备接下来在那里陆续发表一系列的教程性质的中文文章，尽量由浅入深地介绍 Nginx 和 OpenResty 的方方面面，同时也算是为我的 Nginx 一书准备基本素材。当然，现在只有一篇“缘起”充充台面，权当是一个开始吧～  
微博位置: 无
发布时间: 2011-11-30 21:32
点赞数: 0   转发数: 65   评论数: 53
发布工具: 微博 weibo.com

1990:我先前针对 nginx epoll 模块的 stale 写事件问题的补丁造成了 Linux AIO 功能的衰退。这个补丁被包含在 nginx 1.1.9 中以后，被一俄国用户报了出来。Maxim Dounin 提供了一个补丁的补丁，现在最新版本的补丁在http://t.cn/S4nd3z 已包含在 ngx_openresty 开发版 1.0.10.21 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-11-30 12:04
点赞数: 0   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

1991:刚刚在 ngx_openresty 开发版 1.0.10.19 中修复了 ngx_lua 的 ngx.re 正则接口中的一处内存管理问题。PCRE 的内存管理不好搞啊，大家都很怕它泄漏似的，所以 Nginx 核心里就搞得挺纠结，而 ngx_lua 在此基础上只能更纠结一些，而先前把我自己也给纠结进去了，现在总算理顺了，多谢 Vittly 同学的报告！  
微博位置: 无
发布时间: 2011-11-29 22:32
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

1992:媳妇儿刚刚帮我刨出来今年我在 PerlChina 2011 大会上的演讲视频：“Perl在淘宝量子店铺统计产品中的有趣应用”，其实讲 Perl 是假，讲 OpenResty 是真，呵呵 http://t.cn/S4WEFG  （分享自 @酷6网）  
微博位置: 无
发布时间: 2011-11-29 20:47
点赞数: 0   转发数: 12   评论数: 10
发布工具: 酷6网分享

1993:Nginx 邮件列表里有一哥们询问如何在 nginx 配置文件里作代数运算：http://t.cn/S4pHby 我自然毫不犹豫地把他领向了我们的 ngx_lua 模块。特别开心的是，楼主刚刚回复说：“it just works!”  
微博位置: 无
发布时间: 2011-11-29 17:36
点赞数: 0   转发数: 5   评论数: 7
发布工具: 微博 weibo.com

1994:刚刚和@chaoslawful 讨论了一下 ngx_lua 的抢占式协程调度问题，我们都认为当前 Lua 模块变量自动共享的行为需要改变，Lua 模块得做成像操作系统的动态链接库那样默认只共享代码但不共享数据，同时 worker 进程级别的数据共享未来须提供显式的接口。这样才能真正告别 race condition 等共享访问问题。  
微博位置: 无
发布时间: 2011-11-29 17:28
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

1995:gdb 的 backtrace 并不总是那么有用。因为崩溃的位置在许多情况下并不是问题出现的第一现场，而且很可能离第一现场已然十万八千里。在这些情况下，valgrind 就真的是无价之宝了，呵呵。而且有些情况没有崩溃，并不是因为真的没有内存问题，而只是因为运气好而已，而此时 valgrind 也经常能发现问题。  
微博位置: 无
发布时间: 2011-11-29 16:44
点赞数: 0   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

1996:MySQL 世界的开发人员也开始利用 Valgrind 工具箱中的 Helgrind 工具来捕捉多线程场景下的 race condition 和 deadlock 等 bug 了：http://t.cn/S49frR 当然，在此之前，valgrind 的 memcheck 工具已经是他们标准工具链的一部分了。当然，对于 nginx 这样的单线程应用，helgrind 倒是没有太大的用处  
微博位置: 无
发布时间: 2011-11-29 14:32
点赞数: 1   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

1997:今天收到了奥地利的 Jasmin Jessich 同学的邮件，修正了我的 Perl 模块 Makefile::GraphViz 中的 gvmake 脚本的一个小 bug，即不指定 --edge-len 命令行选项时，dot 程序会报 edge; 有语法错误。已包含在了 CPAN 发布 0.20 版中。没想到这个大学时代写的 makefile 可视化工具至今还有用户在推动开发！  
微博位置: 无
发布时间: 2011-11-29 12:41
点赞数: 1   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

1998:@定球呀球 刚才在 gtalk 上面这样总结我最近几个月在家的工作：“感觉很神奇，一个人满足很多很多需求。。。”是啊，我每天都要处理一堆的用户邮件和 IM 问询消息，真是够忙够累的，呵呵。  
微博位置: 无
发布时间: 2011-11-28 17:39
点赞数: 0   转发数: 4   评论数: 16
发布工具: 微博 weibo.com

1999:致 ngx_drizzle 的用户：这个版本的 drizzle7 是支持单独编译和安装 libdrizzle 1.0 的：http://t.cn/S44D8L 具体步骤请参见这里的文档：http://t.cn/aN0npE 应当不会有多少依赖项。  
微博位置: 无
发布时间: 2011-11-28 14:20
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2000:刚刚发布了 ngx_openresty 开发版 1.0.10.15：http://t.cn/aCdPzo 包含了下午用 mockeagain 捕捉到的一个与写超时检查相关的一个 bug. 该 bug 主要影响昨天实现的 ngx.flush(true) 同步刷输出功能。幸好发现得及时，嘿嘿～  
微博位置: 无
发布时间: 2011-11-26 21:42
点赞数: 0   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

2001:昨晚想到，还可以为我的mockeagain极端网络模拟器添加一个新功能，以便精确测试特定环节的写超时处理逻辑。比如在发送了指定内容模式的数据之后就引入指定的延时，然后才生成新的可写事件。被测试程序保持一个整体且不用动一行代码就可以测试各种可控的极端情况，乃是我这个工具的设计目标。  
微博位置: 无
发布时间: 2011-11-26 11:18
点赞数: 0   转发数: 5   评论数: 2
发布工具: S60客户端

2002:不同的 Linux 发行版自己对 kernel 所做的修改，让 Paul Fox 的 dtrace 移植变得非常困难。更要命的是，即使 Linux 标准的 kernel 里还有不少有趣的 bug 甚至衰退，或许这些 bug 存在的部分原因是 Linux 世界一直缺少像 dtrace 这么强大的工具吧（systemtap 这么多年了貌似还有很长的路要走）。  
微博位置: 无
发布时间: 2011-11-26 09:56
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

2003:回复@罗月宝:如果可能的话，你也可以直接利用 nginx 自己的静态文件服务来输出文件，而 Lua 代码可以通过 rewrite_by_lua 或者 access_by_lua 在早一些的处理阶段里植入。如果你一定要在 Lua 里输出大文件，可用 Lua 标准 io 库一块一块地读文件，并且每读一块就调用 ngx.print(data) ngx.flush(true)  
微博位置: 无
发布时间: 2011-11-26 09:27
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2004:我打算仿照使用广泛的 LuaSocket 库的 API 实现 ngx_lua 模块的同步非阻塞的 ngx.socket，也就是传说中的“cosocket”。这样现有的基于 LuaSocket 实现的同步阻塞的各种协议的客户端，只要稍加修改，就可以直接拿来作为 ngx_lua 的同步非阻塞的客户端了！再不用 nginx 子请求和各种 upstream 模块了！  
微博位置: 无
发布时间: 2011-11-25 22:18
点赞数: 0   转发数: 14   评论数: 11
发布工具: 微博 weibo.com

2005:刚刚为ngx_lua模块实现了同步刷输出的接口，即 ngx.flush(true)调用，当其wait参数为真时，这个函数会一直等到数据实际刷到系统发送缓冲区之后才会返回（或者写超时了），即它是一个同步调用，但仍是非阻塞的。文档在：http://t.cn/SUXVU5 已包含在ngx_openresty 1.0.10.13中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-11-25 21:29
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

2006:没有 mockeagain 的话，要制造写 EAGAIN，就须在用例中准备比较大的数据量来输出。比如在我的 linux 系统上，glibc 自己的 send buffer 默认大小约是 64KB，如果用 setsockopt 设置得很小，就受制于系统的 net.ipv4.tcp_wmem 中的默认值（16KB），所以二者都得改小，但又不能改太小，且副作用太大。  
微博位置: 无
发布时间: 2011-11-25 17:33
点赞数: 0   转发数: 3   评论数: 6
发布工具: 微博 weibo.com

2007:@姜大炮 老师有兴趣提供一个补丁，为 mockeagain 添加 epoll ET 支持不？哈哈？我可喜欢你的补丁了呢。。。哈哈！ http://t.cn/SAPEjl  
微博位置: 无
发布时间: 2011-11-25 15:54
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

2008:在编写复杂系统的时候，和实现功能同等重要的就是出错处理。在系统没有正确工作的时候，出错消息可以节约大量时间。Erlang 的作者们也极积倡导把错误及时抛出来，而不是默默地忽略它们（不过，Erlang 里的多数异常消息读起来真的有些吃力）。而 Perl 教主 Larry Wall 也是友好出错提示的顶级发烧友 ;)  
微博位置: 无
发布时间: 2011-11-25 11:38
点赞数: 1   转发数: 8   评论数: 4
发布工具: 微博 weibo.com

2009:今天林青 kindy为ngx_lua模块贡献了一个补丁，实现了ngx.now()接口可以返回毫秒精度的当前时间（通过读取Nginx的当前时间缓存）：http://t.cn/SyD3Mi 我在应用该补丁时又顺手实现了ngx.update_time函数，可用于强制更新时间缓存：http://t.cn/SyD3MS 已包含在了ngx_openresty 1.0.10.11发布中。  
微博位置: 无
发布时间: 2011-11-24 22:34
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2010:小鱼儿兄推荐的这一款 JSONView Chrome 插件，配合 ngx_openresty 开发 JSON 格式的数据接口，可真是绝配呀！哈哈！http://t.cn/Syunh8  
微博位置: 无
发布时间: 2011-11-24 15:54
点赞数: 0   转发数: 5   评论数: 6
发布工具: 微博 weibo.com

2011:几年前哥在北京工作的时候，一次跟远在南方的老妈通电话。老妈突然问我，“你以后究竟想成为怎样的一个人？”我不假思索地回答：“做一个伟大的程序员。”结果。。。身为计算固体力学博士和教授的老妈当即挂断了电话。。。  
微博位置: 无
发布时间: 2011-11-24 13:15
点赞数: 1   转发数: 32   评论数: 23
发布工具: 微博 weibo.com

2012:结合 Ragel 生成 C 代码的时候，还真不能照 Ragel 手册里那样写 char *p 这样的东西，因为 C 标准里并没有规定 char 是有符号还是无符号的，不同的 C 编译器的处理是不一样的，比如一些 PowerPC 上的 gcc，而且即便是大众平台，也可以用 -funsigned-char 改变行为。所以一定一定要显式写成 signed char  
微博位置: 无
发布时间: 2011-11-24 12:39
点赞数: 0   转发数: 8   评论数: 2
发布工具: 微博 weibo.com

2013:刚刚给我的 mockeagain 添加了对环境变量 MOCKEAGAIN_VERBOSE 的支持，如果该环境变量被置为非零整数，则 mockeagain 会在工作时输出比较详细的信息到 stderr（在 nginx 环境中则是输出到 error.log）。同时我让 Test::Nginx 测试台自动设置相应的 env 配置指令，以避免 nginx 自动清空这个环境变量。  
微博位置: 无
发布时间: 2011-11-23 22:19
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2014:这两天在 lua-l 邮件列表中看到，英勇无敌的 Mike Pall 同学在 LuaJIT 2.0 git HEAD 里已经为 FFI 实现了支持把 Lua 函数对象直接传递给任意的接受 C 函数指针作参数的 C 函数。Mike 自己也称之为“magic”. 这样各种回调界面的 C 库也可以直接在 Lua 里复用啦~~耶！  
微博位置: 无
发布时间: 2011-11-23 11:11
点赞数: 0   转发数: 7   评论数: 8
发布工具: 微博 weibo.com

2015:刚刚我发布了 ngx_openresty 开发版 1.0.10.7: http://t.cn/aCdPzo 该版本包含了这两天的所有工作，欢迎大家试用 :)  
微博位置: 无
发布时间: 2011-11-23 10:54
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2016:今天终于应用了 Marcus Clyne 同学在三个月之前提供的针对 ngx_lua 模块的补丁，添加了为子请求设置指定的Nginx变量值的 vars 选项，以及复制当前父请求的所有Nginx变量值到子请求中去的 copy_all_vars 选项：http://t.cn/SycJj4 这样我们向子请求传递数据就更容易了！已包含在了0.3.1rc31发布中。  
微博位置: 无
发布时间: 2011-11-22 23:06
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

2017:和媳妇儿去电影院看过《铁甲钢拳》之后，回来就发布了 ngx_lua v0.3.1rc30 和 ngx_openresty 1.0.10.5:http://t.cn/aCdPzo 这次发布的亮点就是@姜大炮 的补丁提供的 PCRE JIT 和 DFA 模式所对应正则选项。PCRE JIT可以让许多正则成倍地提速，但需要最新的PCRE 8.20并在构造时启用它的--enable-jit选项.  
微博位置: 无
发布时间: 2011-11-21 23:04
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2018:前一阵子看到了 failmalloc 这个小工具：http://t.cn/hrqp2W 和我的 mockeagain 一样是基于 LD_PRELOAD 的。Nginx 对于分配失败的处理是非常认真谨慎的。Maxim Dounin 也曾自己去摸拟分配失败时 malloc 返回 NULL 的情形，不过他当时是直接给 Nginx 核心打的补丁 ;)  
微博位置: 无
发布时间: 2011-11-21 16:55
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

2019:刚刚给我们的 Test::Nginx 测试台添加了对环境变量 TEST_NGINX_POSTPONE_OUTPUT 的支持。比方说当设置该环境变量为整数 1 时，Test::Nginx 自动生成的 nginx.conf 配置文件中就会有 postpone_output 1; 这一行。这样就可以禁掉所有用例的 nginx 写缓冲了。结合我的 mockeagain.so，简直就是绝配 :D  
微博位置: 无
发布时间: 2011-11-21 16:51
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2020:刚刚为 Test::Nginx::Socket 测试台添加了 --- error_log 节的支持，现在我们可以在 nginx 的测试用例中检查 error.log 中的输出了，比如 ngx_lua 模块的这个测试用例通过扫描 error.log 中的 debug 输出确认 pcre jit 确实工作了：http://t.cn/SLY05N  
微博位置: 无
发布时间: 2011-11-20 16:22
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2021:DTrace 真是好东西呀，可惜在 Linux 上面还不靠谱。就单冲这个，我也值得考虑在 Mac OS X 或者 FreeBSD 或者 Solaris 上搭建我的主开发环境 ;) 我看看 systemtap 的安装步骤我就不想继续了。。。可怜哥是 Slackware 的系统啊，不是 RHEL :)  
微博位置: 无
发布时间: 2011-11-20 15:12
点赞数: 1   转发数: 5   评论数: 17
发布工具: 微博 weibo.com

2022:PCRE 0.93/0.94 开始提供了一个 pcre_study 函数，可以对已编译的正则对象进行更深入的分析，以加速后续的匹配操作（通过 pcre_exec 或者 pcre_dfa_exec 函数）。从 8.20 开始，这个函数又提供了一个JIT标志，可以从 PCRE 编译后生成的字节码指令生成机器指令。Nginx 核心并没有利用到这个 pcre_study.  
微博位置: 无
发布时间: 2011-11-19 19:16
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2023:今天忙了一天，终于初步完成了 ngx_lua 模块中 ngx.re.gmatch 和 ngx.re.sub 函数的 PCRE JIT 模式与 DFA 模式选项"j"与"d"的实现修正与测试工作。明天接着测试余下的最后一个 ngx.re.gsub 的 JIT和 DFA支持，以及和PCRE各历史版本的兼容性。感谢@姜大炮 的补丁，要不这块工作不知何时才开始做呢 ;)  
微博位置: 无
发布时间: 2011-11-19 19:09
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2024:我的雅虎前同事@有为赵熠 时不时还会突然抓到我问几个 Perl 问题，感觉很亲切呀，哈哈！  
微博位置: 无
发布时间: 2011-11-19 17:59
点赞数: 0   转发数: 0   评论数: 11
发布工具: 微博 weibo.com

2025:CloudFlare 公司的 Ray 同学正在将 ngx_lua 模块的正则预编译缓存改造成经典的 LRU 策略的（目前是缓存满了就不再缓存正则编译结果了，当然，此缓存的大小可以配置）。Ray 遇到的主要困难是放入缓存的正则对象都是在 nginx 的内存池中分配的，而 nginx 的内存池会拒绝释放小内存块，从而可能造成泄漏。  
微博位置: 无
发布时间: 2011-11-19 16:17
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2026:《明朝那些事儿》一直是我这几个月的床头读物，时常一拿起就舍不得放下。我非常惊叹于作者对各种史料的掌控力，想到自己在自己的领域依然知之甚少，不由就自惭形秽起来。。。  
微博位置: 无
发布时间: 2011-11-19 14:38
点赞数: 0   转发数: 8   评论数: 11
发布工具: 微博 weibo.com

2027:原来 Nginx User 同学每天的工作就是写英文技术报告，我说他帮我改 ngx_lua 的英文文档，咋改得这么专业这么技术哩～～真是此项目之幸事！:D  
微博位置: 无
发布时间: 2011-11-18 23:33
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

2028:刚刚在 ngx_lua 模块的 git 仓库里建立了 pcre 分支：http://t.cn/SLUPV6 这个分支包含了@姜大炮 的 PCRE JIT 和 DFA 支持的补丁，不过问题还比较多。目前我已经基本修正了 ngx.re.match 函数的 "d" 和 "j" 正则选项的实现（分别对应 DFA 模式和 JIT 模式）。大家帮我 review 一下代码？  
微博位置: 无
发布时间: 2011-11-18 23:15
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2029:PCRE 的 DFA 引擎好弱啊，都不支持括号分组 capture 的，只会返回所有匹配的可能性，这有啥意义呀，一般也就只需要最长子串的匹配了。当然了，DFA 模式也不支持 JIT 加速了，呵呵。  
微博位置: 无
发布时间: 2011-11-18 23:11
点赞数: 0   转发数: 1   评论数: 6
发布工具: 微博 weibo.com

2030:看惯了 Nginx 工工整整的代码之后再看 PCRE 的 C 源码，就有些想吐的感觉－－这哥们几乎都不怎么缩进的啊。。。  
微博位置: 无
发布时间: 2011-11-18 21:26
点赞数: 0   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

2031:PCRE 8.20 中的 JIT 引擎自己有一个 SLJIT_MALLOC 内存分配器直接指向 malloc，这个东西并不受 pcre_malloc 的控制，于是让内存管理变得有些复杂。原本可以控制 PCRE 完全在 nginx 的内存池（pool）里分配分存的，现在对于 JIT 模式，还得自己注册内存池的 cleanup 回调了，遗憾了。。。@姜大炮  
微博位置: 无
发布时间: 2011-11-18 21:23
点赞数: 0   转发数: 1   评论数: 10
发布工具: 微博 weibo.com

2032:Perl 著名的 CPAN 模块发布和管理网络给所有 Perl 模块作者的一条忠告是，如果 CPAN 上已经有了一个功能类似的模块，那么请放下英雄主义和个人主义的光环，多多帮助已有的那个模块，多多协作，而不是闭着眼睛，直接另起炉灶。  
微博位置: 无
发布时间: 2011-11-18 12:22
点赞数: 1   转发数: 11   评论数: 8
发布工具: 微博 weibo.com

2033:我目前的工作队列里还有三个 ngx_lua 模块的补丁有待整合。这三个补丁都是添加新特性的，@姜大炮 提供的为 ngx.re 添加 PCRE DFA 和 JIT 加速选项的补丁，Marcus Clyne 为 ngx.location.capture 添加 vars 和 copy_all_vars 选项的补丁，以及我自己的为 ngx.flush 添加 wait 同步等待参数支持的补丁。  
微博位置: 无
发布时间: 2011-11-17 18:52
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2034:刚刚在 ngx_lua 0.3.1rc29 中包含了新接口 ngx.hmac_sha1: http://t.cn/S2n7LF 多谢@drdrxp 提供的补丁 :)  
微博位置: 无
发布时间: 2011-11-17 17:08
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2035:Nginx User 同学注意到 Lua 中的所谓的“long bracket”可以用来解决 Perl 正则表达式中的特殊逃逸序列的问题。例如我们可以在 Lua 里面直接写 ngx.re.match(str, [[\d+]]) 而不用再把正则串写成 "\\d+" 这种恶心的形式了，呵呵。相关文档在这里：http://t.cn/S2EGeS @Lance  
微博位置: 无
发布时间: 2011-11-17 16:19
点赞数: 0   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

2036:@淘叔度 今天在他的博客上宣布了淘宝核心系统部维护的 Nginx 分支，名为 Tengine：http://t.cn/S2RPV3 大家有兴趣 curl -I www.taobao.com 一下就能看到Server头显示的正是这个名字。Nginx 一度非常封闭的开发模式也曾让晓哲和我萌生过fork的念头，但考虑到投入巨大，如今我们就维护一个bundle了。  
微博位置: 无
发布时间: 2011-11-17 15:10
点赞数: 0   转发数: 4   评论数: 4
发布工具: 微博 weibo.com

2037:Nginx 最近一直在增强其非阻塞的动态 DNS 解析器，现在已经支持多 DNS 服务器搞简单的负载均衡，今天在 SVN 里也添加了对 DNS 记录的 TTL (Time To Live)缓存时间的支持。这样，Nginx 也越来越适合作为正向代理了，呵呵。  
微博位置: 无
发布时间: 2011-11-16 22:08
点赞数: 0   转发数: 9   评论数: 8
发布工具: 微博 weibo.com

2038:node.js 0.6.1 相比 0.4.8 还是进步不小的，至少 hello world 接口在 http_load -p 10 -s 5 下，从 8.4k r/s 提高到了近 10.1k r/s. 当然，和 ngx_lua hello world 在相同条件下的近 28k r/s 相比还有些差距 :) 作为比较，php-fpm 是约 6k r/s. 免责声明：这只是 hello world 测试而已，不要太认真。。  
微博位置: 无
发布时间: 2011-11-16 20:26
点赞数: 0   转发数: 23   评论数: 18
发布工具: 微博 weibo.com

2039:CloudFlare 的工程师 Matthieu Tourne 在邮件中告诉我，我们的 ngx_lua 模块已经帮他节省了好几天的工作量，他原先都是自己编写 Nginx C 模块的。诚然！我们如此辛苦地完善 ngx_lua 模块就是为了让大家多写 Lua 少写 C，同时又能获得和纯 C 实现相近的性能 ;)  
微博位置: 无
发布时间: 2011-11-16 16:50
点赞数: 0   转发数: 5   评论数: 10
发布工具: 微博 weibo.com

2040:刚刚我又发布了 ngx_openresty 1.0.10.1 开发版：http://t.cn/aCdPzo 这是第一个基于最新的 nginx 1.0.10 核心的版本。鉴于 nginx 1.0.10 相比前一个版本 1.0.9 变化非常小，所以这次升级就比较大胆了，呵呵。  
微博位置: 无
发布时间: 2011-11-16 15:30
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2041:好不容易等来了 valgrind 3.7.0 发布：http://t.cn/S269KU 刚刚在我的本上都从源码编了这个最新版。在 Linux 上感觉更轻快了一些，不过也可能是我的心理作用。不过它在 Mac OS X 上还是不让用户程序使用 SIGUSR2 信号（而 Nginx 用到了）。我现在的 C 相关开发确实非常依赖 valgrind 工具链了 ;)  
微博位置: 无
发布时间: 2011-11-16 15:15
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

2042:刚刚发布了 ngx_openresty 1.0.9.10 稳定版。Nginx 邮件列表里的发布公告在这里：http://t.cn/S2MMtY 感谢所有的贡献者和用户 :)  
微博位置: 无
发布时间: 2011-11-16 11:44
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2043:刚修了 mockeagain 的一个小 bug：原先没有考虑文件描述符可能为 0 的情况（即 stdin）：http://t.cn/S2LacZ 后面抽时间把 select 调用也支持了，呵呵，反正它和 poll 在接口和行为上很类似，就是 fd_set 处理起来稍微有些纠结 ;)  
微博位置: 无
发布时间: 2011-11-15 18:41
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2044:Matthieu Tourne 同学那一日问我 UDP 协议下的写，即使 socket 是阻塞模式，是否也不会阻塞 Nginx worker。我说，其实 UDP 虽然是发射后不管，但一旦系统的 socket send buffer 满了，还是会明显阻塞线程的。这种情况在应用写数据的速度高于网卡扔包的速度的时候必会出现。这与阻塞模式的 TCP 类似。  
微博位置: 无
发布时间: 2011-11-14 11:33
点赞数: 0   转发数: 15   评论数: 6
发布工具: 微博 weibo.com

2045:回复@敲代码的张洋 ngx_srcache 模块的 key 在文档示例中取作 "$uri?$args" 其实是并不推荐在生产上使用。一般我们须仔细地使用 Lua 等东西对 URI 参数进行刷选和排序以生成缓存用的 key. 目前这里确实不太便利。@珣新_去哪儿 将在近期实现 $srcache_key 变量以及相关的配置指令，以自动生成合适的key.  
微博位置: 无
发布时间: 2011-11-14 09:07
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2046:回复@敲代码的张洋 Nginx 的 rewrite 配置指令分好几种，比如加 break 修饰符时只改请求 URI 但不重新匹配 location，而什么也不加或者只加 last 修饰符的会重新匹配 location. 对于后一种情况，你应当在最终匹配到的 location 里面配置 srcache，毕竟原来的 location 已经跳出了。  
微博位置: 无
发布时间: 2011-11-14 09:02
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2047:回复@敲代码的张洋: php-fpm 阻塞在网络 I/O 上并不意味着 nginx 也会跟着阻塞。我觉得你可能是把“同步”和“阻塞”这两个概念给搞混了，呵呵。nginx 等待 fastcgi 对端的响应返回是同步的，但这个“等待”对应的 I/O 却是非阻塞的。如果照你所说，nginx 真的起众多 OS 线程去处理，那可真悲剧了。  
微博位置: 无
发布时间: 2011-11-14 08:54
点赞数: 0   转发数: 14   评论数: 4
发布工具: 微博 weibo.com

2048:刚刚测试了一下，发现 mockeagain.so 也可以和 valgrind 一起工作，实在太爽了。原先用 etcproxy 摸拟极端读取环境时，因 valgrind 会让程序运行速度降低一个数量级，导致数据包之间即使加进 1 毫秒的延时，仍会出现包合并的问题，影响了代码覆盖。现在爽了，mockeagain 根本不存在包合并这样的问题 :D  
微博位置: 无
发布时间: 2011-11-13 11:34
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2049:Nginx 公司正在整理官方的英文文档，比如：http://t.cn/SAI8Cn Nginx wiki 上标准模块的文档质量确实不好，当然我们自己的模块的文档质量还是有保证的，毕竟是我们的“官方”文档，呵呵。  
微博位置: 无
发布时间: 2011-11-13 11:15
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2050:Nginx 向下游 http 写数据时其实有一个默认大小为 1460 字节的写缓冲区。只有当累积的数据总大小超过这个阈值（或者设置了 flush 或 last 标志）才会实际去调用 writev 去输出。可以通过 postpone_output 配置指令修改这个阈值 :)  
微博位置: 无
发布时间: 2011-11-12 20:06
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

2051:mockeagain.so 今天写出来第一天就捕捉到了 ngx_drizzle 模块中的一个衰退，很给力啊。在建立到 mysql 的 TCP 连接的过程中，有可能过早地取消对写事件的监听。该 bug 已经在 git 仓库的 master 分支中修复了 :D 现在 mockeagain 也支持拦截 glibc 的 send 函数了（底层对应 sendto 系统调用）。  
微博位置: 无
发布时间: 2011-11-12 19:52
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2052:水平触发的可怕之处在于，如果发生一个可写事件但又无甚可写的时候，一定一定要把该 socket fd 上的可写事件的监听给及时去除，否则后面每次 poll 都会返回这个可写事件，而代码又无数据可写，便立即陷入热循环，CPU 满负荷空转，白白浪费计算资源。  
微博位置: 无
发布时间: 2011-11-12 18:58
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

2053:给大家推荐这本书：http://t.cn/heFEQd 此书尚未最终定稿。我受 Andrew 的邀请 review 了一下其中的 Nginx 那章，建议他更多地考虑 Nginx 第三方模块，特别是 ngx_openresty 近两年对 Nginx 世界的贡献，书中原先列举的 Nginx 在功能上的一系列限制已不再是事实 :)  
微博位置: 无
发布时间: 2011-11-12 13:33
点赞数: 0   转发数: 16   评论数: 4
发布工具: 微博 weibo.com

2054:今天一大早收到署名 Stanley 的用户的感谢信，他说 OpenResty 中的 ngx_lua 和 ngx_redis2 模块很给力，他已经把他大量的 Ruby on Rails 代码移植到了 OpenResty/Nginx 平台上 :D  
微博位置: 无
发布时间: 2011-11-12 08:35
点赞数: 0   转发数: 0   评论数: 9
发布工具: 微博 weibo.com

2055:LISP的“程序即数据”的思想是充满魔法的东西。当我们的业务逻辑表达是数据、测试用例是数据、网络协议定义也是数据的时候，很多了不起的事情都可以发生，我们也将拥有对代码的绝对控制力。而要实现这一切，也并不一定要使用LISP语言，领域小语言亦是一条途径，关键是要有能力像操纵数据一样操纵程序。  
微博位置: 无
发布时间: 2011-11-12 08:15
点赞数: 1   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

2056:前几日往 ngx_postgres 模块的 git 仓库里提交的时候，因为偷懒没有做到一次 git 提交只包含一个逻辑更动，结果不想被 Piotr Sikora 骂了。。。  
微博位置: 无
发布时间: 2011-11-11 17:36
点赞数: 0   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

2057:在网上看到 Igor Sysoev 对 G-WAN 的作者说，“你的东西挺适合作性能评测的，但不适合作生产。”接着 G-WAN 的作者就建议 Igor 认清形势，把握方向，把 Nginx 也做成像 G-WAN 那样完全没法配置的。更搞笑的是，G-WAN 的作者骂一个写博客的哥们评测 G-WAN 的机器配置太差，测不出 G-WAN 的优势，悲剧啊  
微博位置: 无
发布时间: 2011-11-10 17:02
点赞数: 0   转发数: 2   评论数: 7
发布工具: 微博 weibo.com

2058:现在每天一大早我在 Gmail 里收到的邮件多是许愿类型的，即所谓的 feature requests，不像从前收一堆 bug reports 那样让我精神紧张，哈哈！  
微博位置: 无
发布时间: 2011-11-10 09:33
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

2059:刚刚在厨房里面洗碗的时候，灵机一动，突然想到了 ngx_headers_more 和 ngx_lua 模块中在操纵 Cache-Control 头时分别有一个 bug. 洗完碗之后到本子上立马修复了它们。所以说，多做家务对程序员真的非常有益 :)  
微博位置: 无
发布时间: 2011-11-09 21:59
点赞数: 0   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

2060:每天为全世界打义工，免费回答各种相关的技术问题，偶尔还是会收到一些几十、几百美元的捐赠。所以哥现在虽然赋闲在家，但还算是有收入的人，虽然不是固定收入，哈哈！  
微博位置: 无
发布时间: 2011-11-09 20:43
点赞数: 0   转发数: 12   评论数: 32
发布工具: 微博 weibo.com

2061:小鱼儿兄写了一篇博客介绍我们的 ngx_encrypted_session 模块的基本用法：http://t.cn/SwLaTu 当然，真实应用经常是在 Lua 中通过 ndk.set_var 接口来调用这个模块的配置指令进行加解密计算。并且在生成 session 的时候通过伴随着 DB 用户查找这样的“登录”过程 :)  
微博位置: 无
发布时间: 2011-11-09 19:50
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2062:Markus Linnala 昨天报告了我给 Nginx 核心打的一个补丁中的内存越界 bug，现已修复：http://t.cn/SwA6cM 此修复亦已包含在了 ngx_openresty 1.0.9.3 开发版中。  
微博位置: 无
发布时间: 2011-11-09 17:54
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2063:感谢@0597虾 为 ngx_lua 模块实现了 ngx.encode_args 方法，可用于从 Lua table 自动生成 URI 请求参数串。文档在这里：http://t.cn/SwwkmP 此更动已包含在了 ngx_lua 0.3.1rc27 和 ngx_openresty 1.0.9.3 开发版发布中 :)  
微博位置: 无
发布时间: 2011-11-09 17:29
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

2064:对于任何一种测试方法，最大的失败就是不能帮助我捕捉到新的 bug. 凡是能帮助我捕捉到新的 bug 的测试方法，无论多傻，都是好方法 :D  
微博位置: 无
发布时间: 2011-11-09 16:40
点赞数: 1   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2065:窗外的雨声已经响了一日一夜，丝毫没有停歇的意思。不由地想起最古老的巴利语经藏中的那句“雨季四月，吾于雨殿，足不下廊，享尽人间奇妙音乐。”  
微博位置: 无
发布时间: 2011-11-09 10:48
点赞数: 0   转发数: 1   评论数: 7
发布工具: 微博 weibo.com

2066:像 libdrizzle 和 libpq 这样的非阻塞客户端，都把socket创建与 connect调用封装成一个步骤，于是当使用rtsig事件接口（也就是Linux 2.4内核推荐的实时信号机制）的时候，我们就没有机会在 connect 调用之前为socket fd设置信号（通过 fcntl+F_SETSIG）。于是像连接被拒这样的错误就不能立即得到通知。  
微博位置: 无
发布时间: 2011-11-08 17:29
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2067:刚刚给我的 Test::Nginx 测试台添加了对环境变量 TEST_NGINX_EVENT_TYPE 的支持。现在我们可以在运行测试集时，通过在命令行上指定该环境变量来选择究竟使用 epoll, select, poll, rtsig 还是 kqueue 等接口来运行 Nginx.  
微博位置: 无
发布时间: 2011-11-08 17:24
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2068:在家里用一无线路由把我的 thinkpad 和 macbook air 连成一小局域网，作为我测试 ngx_openresty 组件的一阶近似的“差网络”环境 :)  
微博位置: 无
发布时间: 2011-11-08 17:05
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

2069:很多软件工程的教条都过于强调前期计划和设计，总希望人们在动手之前就把大多数问题都想清楚。其实对于真实系统，很难在早期就能做出太多正确的决定（少数神级人物除外），于是系统是否被设计成方便人们不断重构甚至反复重写，才是最关键的。犯了错也不怕。不少系统做成了就没人敢动，其实已然死了。  
微博位置: 无
发布时间: 2011-11-08 15:07
点赞数: 1   转发数: 104   评论数: 37
发布工具: 微博 weibo.com

2070:在构建高性能系统的时候，从最基本的东西出发，一点一点做加法，要比对一个庞然大物拼命做减法来得容易得多得多。  
微博位置: 无
发布时间: 2011-11-08 11:00
点赞数: 1   转发数: 20   评论数: 8
发布工具: 微博 weibo.com

2071:刚刚发布了ngx_openresty开发版 1.0.9.1: http://t.cn/SZWsho 更动清单在这里：http://t.cn/SZWsho 这是第一个基于 nginx 1.0.9 的版本。值得一提的是，ngx_drizzle 的事件模型重构，ngx_drizzle 与 ngx_postgres 的输出错误到 RDS，以及 ngx_lua 的 ngx.flush(wait) 等新功能并没有包含在这次发布中。  
微博位置: 无
发布时间: 2011-11-08 09:14
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2072:在程序崩溃时，gdb 这样的东西是“无价之宝”，但对于日常调试，最有效的还是在关键代码路径上加调试输出。Nginx 核心中就大量使用了 ngx_log_debugN 宏用于调试输出，其他第三方模块亦遵循此种风格。这些调试语句也有注释的功用。许多和 I/O 事件相关的 bug 如果用 gdb 单步去跟，经常就不能复现了。  
微博位置: 无
发布时间: 2011-11-07 21:25
点赞数: 1   转发数: 6   评论数: 1
发布工具: 微博 weibo.com

2073:刚刚修了nginx epoll模块中处理stale event的一bug.目前它只检查了读事件是否过期，但在调用了读事件处理句柄后，就直接调用写事件的处理句柄而未检查写事件是否也过期。现在在真实环境中就出现读写事件同时发生，但在读事件句柄中关闭连接，让未处理的写事件立马过期，但是 nginx 仍然处理了写事件。  
微博位置: 无
发布时间: 2011-11-07 17:21
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2074:我们的 etcproxy 代理可以为非阻塞 socket 实现一次只让读一个字节，下一个字节得 1ms 以后才能读到，其他时候都是 EAGAIN. 这个工具可以发现与非阻塞读相关的绝大部分 bug. 但非阻塞写因为各级写 buffer 的存在，很难做到一次只让写一个字节，所以与之相关的许许多多 bug 在本机开发时很难捕捉到 :(  
微博位置: 无
发布时间: 2011-11-07 14:57
点赞数: 0   转发数: 9   评论数: 6
发布工具: 微博 weibo.com

2075:回复@罗翅膀716:晓旭报告的 ngx_postgres 模块在差网络条件下连接 Pg 失败的问题，已确定是官方 libpq 库的 bug.它的 PQconnectPoll 函数里的 pqPacketSend 调用都未考虑底层 sendto 系统调用在非阻塞条件下会返回 EAGAIN 的情况。只要不能全部成功写出，它就直接报错。后面我会尝试给 libpq 打一补丁  
微博位置: 无
发布时间: 2011-11-06 22:32
点赞数: 0   转发数: 1   评论数: 16
发布工具: 微博 weibo.com

2076:刚刚在 lua-rds-parser 库的 0.04 版中修正了一处很傻的内存泄漏，多谢 bearnard 同学在 IRC 上的报告。有些惊讶 valgrind 居然一直没有捕捉到。。。  
微博位置: 无
发布时间: 2011-11-06 19:16
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2077:刚刚对 ngx_drizzle 模块的事件处理模型进行了比较大的重构，现在我们不再让 libdrizzle 调用 poll 了，而是由 ngx_drizzle 模块自己设置它的 POLLIN 和 POLLOUT 标记，从而可以节约一次系统调用，并能与 select, poll, rtsig 这样的事件接口一起工作（原先会挂起，只能和 epoll 和 kqueue 一起玩）。  
微博位置: 无
发布时间: 2011-11-06 17:25
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

2078:下山缆车上看到的美丽风光~  显示地图 原图 
微博位置: 无
发布时间: 2011-11-05 17:34
点赞数: 0   转发数: 0   评论数: 2
发布工具: S60客户端

2079:周末在家忙着修 C bug，结果被老婆抓出来爬鼓山。。。  显示地图 原图 
微博位置: 无
发布时间: 2011-11-05 17:33
点赞数: 0   转发数: 4   评论数: 10
发布工具: S60客户端

2080:Nginx 公司也开始向他们的客户推荐我的那些个模块，包括那个相当邪恶的 ngx_chunkin 模块以支持 chunked 编码的请求体。Igor Sysoev 老大的“宁缺勿滥”的原则在 business 世界是不太行得通的，呵呵。  
微博位置: 无
发布时间: 2011-11-04 18:19
点赞数: 0   转发数: 1   评论数: 8
发布工具: 微博 weibo.com

2081:一位署名 Nginx User 的用户在把 Apache ModSecurity 模块的核心规则集转换到 ngx_lua 平台上时，惊喜地发现 ModSecurity 在背后也悄悄用了许多 Lua 代码来实现转换器。这一下可好了，省了他很多麻烦。他刚才在 gtalk 上跟我提起这事时，开心得合不拢嘴，呵呵。  
微博位置: 无
发布时间: 2011-11-04 16:15
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2082:混 C 社区的一大好处是可以结识来自各个上层语言社区的用户，他们经常会提及他们自己社区里的一些新奇的好玩的东西。我总是能从他们那里学到很多东西，真是长见识，呵呵。  
微博位置: 无
发布时间: 2011-11-04 16:06
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

2083:在芬兰的 Markus Linnala 的请求下，我刚刚发布了 Test::Nginx 这个 Perl 模块的 v0.17 版到 CPAN: http://t.cn/hehfyG 这个新版本主要修正了对 pipelining 请求的支持，现在终于可以深入测试 http 1.1 keepalive 下的行为了，比如 ngx_lua 模块的测试集中有一个实例：http://t.cn/SzCNuA  
微博位置: 无
发布时间: 2011-11-04 15:02
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

2084:刚刚仔细查看了一下 nginx 1.0.9 的源码相对 1.0.8 的 diff，发现了一些内部 API 的变化，看来升级 ngx_openresty 的 nginx 内核到 1.0.9 还有不少工作要做。因此下一个开发版仍将继续基于 nginx 1.0.8 :)  
微博位置: 无
发布时间: 2011-11-04 12:31
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2085:刚刚在 ngx_xss 模块中修复了Sam Mulube 报告的一个小 bug，即原先的 callback 参数值的校验解析器过于严格，竟不接受以下划线起始的 JS 标识符，呵呵。修改了一下 Ragel 文法，现在在 v0.03rc5 中没有问题了: http://t.cn/Szo8ZH  
微博位置: 无
发布时间: 2011-11-04 12:28
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2086:刚刚一朋友发了一很无聊的双重长循环的例子，说对于这个例子，perl 比 node.js 和 C 都慢了很多。我试了一下，发现 luajit 比 gcc -O0 还要快 29%，而 gcc -O1和 gcc -O2只比 luajit 快 2.9 倍，真是好玩。而 nodejs 和 perl都是十多分钟都没出结果的。当然，这种微观性能评测也就图一乐，不用太认真。  
微博位置: 无
发布时间: 2011-11-04 11:52
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2087:昨晚和@吕那个布 和@珣新_去哪儿 在 gtalk 上讨论了一下为 ngx_drizzle 和 ngx_postgres 模块实现最一般的事务接口的设计与实现细节。因为 nginx 子请求的界面是 http 风格的，所以其本质上是“无状态”的，为了实现 DB 事务的状态保持，须引入 session 的概念，在子请求之间锁定连接池里的 DB 连接。  
微博位置: 无
发布时间: 2011-11-04 09:11
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2088:在访问 openresty.org 的流量中，来自中美韩的用户占了大多数 :)  
微博位置: 无
发布时间: 2011-11-03 18:13
点赞数: 0   转发数: 2   评论数: 24
发布工具: 微博 weibo.com

2089:我刚在 nginx 邮件列表和我的 nginx 英文博客上发布了 ngx_openresty 稳定版 1.0.8.26: http://t.cn/SztqEW 该发布并未包含我最近一周在北京实现的新特性，它们将会包含在下一个开发版中。非常感谢我们所有的贡献者和用户的帮助！:D  
微博位置: 无
发布时间: 2011-11-03 17:40
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

2090:在我的 VirtualBox 里，FreeBSD 在用 gcc 构造 ngx_openresty 时比 ArchLinux 快了很多倍。。。  
微博位置: 无
发布时间: 2011-11-03 16:01
点赞数: 0   转发数: 1   评论数: 13
发布工具: 微博 weibo.com

2091:ngx_encrypted_session 模块中的加解密指令倒是可以通过 ngx_lua 的 ndk.set_var 接口在 Lua 里面直接调用。PHP 和 Erlang 其实我们也有绑定实现，但尚未开源，后面我抽时间整理一下放出来给大家玩。  
微博位置: 无
发布时间: 2011-11-03 11:56
点赞数: 1   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

2092:昨晚在福州长乐机场，一下飞机就可以沐浴在温暖清新的海风之中，同机的来自首都的人们都倍感惬意 :)  
微博位置: 无
发布时间: 2011-11-03 10:10
点赞数: 0   转发数: 3   评论数: 9
发布工具: 微博 weibo.com

2093:昨天我访问了“去哪儿网”的办公室,跟许多工程师做了nginx和openresty相关的交流。然后在@0597虾 和晓旭的“胁迫”下,为ngx_postgres模块实现了输出DB错误到RDS的配置指令。  
微博位置: 无
发布时间: 2011-11-02 17:32
点赞数: 0   转发数: 2   评论数: 10
发布工具: 短信

2094:罗翼老师将我目前的工作总结为“做胶水”,甚是有趣。看来以后我可以自称“做胶水的人”了,呵呵。其实呢,我对被胶合的关键部件也是很感兴趣的,幸好哥还年轻,来日方长。。  
微博位置: 无
发布时间: 2011-11-02 16:15
点赞数: 0   转发数: 0   评论数: 2
发布工具: 短信

2095:PostgreSQL最近一二年的进步真是让人惊叹。虽然我前两年在生产上主要是和MySQL打交道。我觉得大家都应该关注一下这个非常活跃和开放的开源项目,比如新的内建Replication支持,列存储支持,索引优化算法,等等。  
微博位置: 无
发布时间: 2011-11-02 15:36
点赞数: 0   转发数: 11   评论数: 5
发布工具: 短信

2096:我一个哥们告诉我他在他们公司底层服务中大量使用ngx_openresty,Redis,PostgreSQL这样的工具链可以轻松达到那些习惯使用JDBC,Tomcat和MySQL的人们所很难想象和理解的高性能。他得意地称之为他们小组的“家传技术”。  
微博位置: 无
发布时间: 2011-11-02 09:16
点赞数: 0   转发数: 14   评论数: 16
发布工具: 短信

2097:刚刚在我的ngx_lua本地git分支里为ngx.flush函数实现了wait参数。当该布尔参数为true时，ngx.flush会等待既有输出全部刷进系统发送缓冲区才会返回（或者直到写超时抛Lua异常）。利用该特性可以实现严格非缓存输出，在大数据量分块输出时非常有用，毕竟ngx.print是异步调用，下游写不动时会在内存积压。  
微博位置: 无
发布时间: 2011-10-30 12:14
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

2098:今天去国家会议中心参加了那个hackathon，主要还是为了跟老朋友们见个面。我在ngx_lua的devel分支里实现了@hugozhu 几周前的一小需求，即让ngx.location.capture支持ctx选项，可以指定子请求的 ngx.ctx 表。另外，我为 ngx_drizzle 实现了 drizzle_output_errors 指令，可以输出 DB 错误到 RDS 输出。  
微博位置: 无
发布时间: 2011-10-29 22:53
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2099:又在北京了。。熟悉的雾蒙蒙的天空一轮残日。。  
微博位置: 无
发布时间: 2011-10-28 16:59
点赞数: 0   转发数: 0   评论数: 10
发布工具: 短信

2100:Valgrind 对栈上分配的内存没有太多办法。刚刚我在 ngx_lua v0.3.1rc24 中修复了一个用户报告的 ndk.set_var 中未恰当初始化栈上变量的 bug，该问题可能导致传入被调用配置指令的参数为空。同时还修复了@0597虾 报告的与 nginx 0.8.54 不兼容的衰退。  
微博位置: 无
发布时间: 2011-10-27 22:02
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2101:代码中的许多优化技巧会让测试用例的编写变得非常困难，特别是覆盖那些不能被优化的特殊代码路径的时候。当然，经常被其他语言的程序员批评为“喜欢早熟优化”的 C 程序员的日子自然是最不好过的了 ;)  
微博位置: 无
发布时间: 2011-10-27 15:24
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2102:我刚刚发布了 ngx_openresty 的开发版 1.0.8.21：http://t.cn/aCdPzo 这个版本包含了 ngx_lua 模块最近新添加的共享内存字典，文档在：http://t.cn/Sh7JDO 同时修正了 ngx_echo 模块的 echo_sleep 和 echo_blocking_sleep 配置指令在某些情况下的内存问题。欢迎大家试用 :)  
微博位置: 无
发布时间: 2011-10-26 16:41
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

2103:现在我们可以通过 ngx_lua 的共享内存字典的 set 方法设置指定的 key 的值为 nil，其效果是将这个 key 从字典里删除，例如 dogs:set("Jim", nil) 而这比较符合 Lua 世界里的约定，比如设置一个 lua table 项为 nil 即是把该项从 table 中移除。该更动也刚刚提交到 master 分支 :)  
微博位置: 无
发布时间: 2011-10-25 22:54
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2104:我刚刚对 ngx_lua 模块的共享内存字典的 set 方法作了一处修改，现在 0 过期时间就表示永不过期。而如果 set 方法不提供过期时间参数的话，则默认永不过期。但值得提醒的是，在存储用尽、强制剔除其他数据项时，LRU 规则比过期时间优先级更高。该更动已提交到 git master 分支 :)  
微博位置: 无
发布时间: 2011-10-25 22:37
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2105:这几天我都在跟 Nginx 官方团队讨论我们 ngx_lua 模块的标准化的细节。虽然我已经很注意了，但显然 Igor Sysoev 和 Maxim Dounin 还是对我的代码风格很不满意，所以少不了大规模修订我那一万多行 C 了。不过我也同时在促成 Nginx代码风格的书面化工作，如果能像谷歌的风格指南那样清楚，自然再好不过。  
微博位置: 无
发布时间: 2011-10-25 18:24
点赞数: 1   转发数: 5   评论数: 11
发布工具: 微博 weibo.com

2106:遇到过好几次用户报某服务性能太差，却是因为客户端实现太烂导致的。我自己多年前也曾犯过这个错误。你拿 Java 和 Python 写的阻塞着的客户端去测 redis 和 nginx 的性能，究竟能测出什么名堂？对于 nginx 极限性能的测量，即使是纯 C 实现的 ab 其实也是很吃力的。  
微博位置: 无
发布时间: 2011-10-25 17:08
点赞数: 0   转发数: 28   评论数: 7
发布工具: 微博 weibo.com

2107:刚刚在朱峰同学的提醒下，我添加了一节文档，用于演示如何在 Lua 里通过 ngx_redis2 模块发起 pipelined Redis 请求：http://t.cn/SPmcsS 利用业务特点，尽量使用 pipelined 请求可以显著提升系统性能，即便是在启用了 Redis 长连接池的情况下 :) @0597虾 同学应该对此深有体会吧？  
微博位置: 无
发布时间: 2011-10-25 16:45
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

2108:刚刚我的 ThinkPad 上的 Linux 抽风，Nginx 启动后就永远阻在 epoll_wait 上，用 curl 发起 TCP 连接也直接挂住。strace 显示 epoll_wait 依然没返回。netstat 显示连接状态止步于 SYN_SENT 状态。太诡异了！重启之后又恢复正常。。。希望不是我几日前配置的 kernel TCP 差网络摸拟器还是阴魂不散 :P  
微博位置: 无
发布时间: 2011-10-25 16:01
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2109:淘宝数据魔方团队一度在 PHP 里使用 curl_multi_get 来访问 nginx + ngx_drizzle，这确实是让人觉得哭笑不得的玩法。因为即便 nginx 和 mysql 之间是非阻塞通信，但他们的服务器端 php 和 nginx 之间仍是阻塞通信。难怪他们后来转向琢磨 node.js 了，呵呵。只有各个环节都实现非阻塞通信，才有意义。  
微博位置: 无
发布时间: 2011-10-25 14:49
点赞数: 1   转发数: 15   评论数: 12
发布工具: 微博 weibo.com

2110:注释写多了，会增加维护代码和注释之间一致性的工作量。同时注释多了，一屏能显示的代码行数也大大减少了（虽然可以通过编辑器自动隐藏注释，但那样就更容易出现代码和注释不一致了）。于是乎，写代码的最高境界就是代码即注释，注释即代码，二者合二为一 :)  
微博位置: 无
发布时间: 2011-10-25 12:22
点赞数: 1   转发数: 19   评论数: 16
发布工具: 微博 weibo.com

2111:我已经在 ngx_lua 模块的 git master 分支中实现了共享内存字典 API 的 get 和 set 方法，同时简单测试了过期时间设置以及空间用尽后的 LRU 剔除策略。已通过的测试用例可以临时充作文档：http://t.cn/SPWiUw 欢大家测试试用 :)  
微博位置: 无
发布时间: 2011-10-24 22:30
点赞数: 0   转发数: 0   评论数: 14
发布工具: 微博 weibo.com

2112:在用 ngx_echo 模块的 echo_sleep 指令测试 ngx_lua 模块的共享内存字典时，valgrind 捕捉到 echo_sleep 实现中的一处内存非法读取问题。原来两年前我在实现 echo_sleep 时误把 ngx_str_t 字符串当作 C 字符串传递给了 atof 函数。丢人啊，本该用 nginx 自己的 ngx_atofp 函数来解析浮点数字符串的。  
微博位置: 无
发布时间: 2011-10-24 18:07
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2113:我刚刚实现了 ngx_lua 中设置 nginx 变量值为 nil 的功能。例如 ngx.var.args = nil 可以直接清除当前请求的 URI 参数串。原先则会抛出一个 Lua 异常报 nil 值不允许。该特性已包含在了 ngx_lua 0.3.1rc20 和 ngx_openresty 开发版 1.0.8.19 中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-10-24 12:22
点赞数: 0   转发数: 5   评论数: 5
发布工具: 微博 weibo.com

2114:今天在看“谷歌统计”报表时通过流量来源追踪发现了这一篇博客：http://t.cn/SP7TLn 很不错的一个简介，不过其中对 ngx_xss 模块的用途完全说反了，ngx_xss 就是让你通过 JSONP 进行跨站 AJAX 编程的，呵呵。另外，ngx_devel_kit 这个供其他模块使用的模块主要提供了一些方便使用的基础 API 封装。  
微博位置: 无
发布时间: 2011-10-22 14:26
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2115:这两天为 ngx_lua 模块实现了 ngx.req.set_body_data() 和 ngx.req.set_body_file() 这两个函数，用于在 Lua 中使用内存数据或者文件数据来修改当前请求的请求体。已经提交到 git master分支。该特性完全正常工作需要应用补丁 http://t.cn/SvBwjf 并在编译时传入-DNGINX_ALLOW_REQUEST_BODY_UPDATING  
微博位置: 无
发布时间: 2011-10-21 20:43
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

2116:nginx 核心并未考虑请求体被篡改的情形，特别是 discard request body 那一部分，所以我给核心打了一个补丁：http://t.cn/SvBwjf 参考版本是 Nginx 1.0.8，当然，对于其他版本应当也是适用的 :) 这样我们就可以为 ngx_lua 模块很好地实现 ngx.set_body_data() 和 ngx.req.set_body_file() 接口了 :D  
微博位置: 无
发布时间: 2011-10-21 17:56
点赞数: 0   转发数: 2   评论数: 16
发布工具: 微博 weibo.com

2117:刚刚在 ngx_lua 模块的 git master 分支中实现了新的 Lua 接口 ngx.req.set_body_data()。利用该函数可以把当前请求的请求体改写成任意的 Lua 字符串里的值。如果当前请求体还没读取，则自动忽略它。利用该特性可以实现在 proxy_pass/fastcgi_pass/uwscgi_pass 等之前在 rewrite_by_lua 里篡改请求体。  
微博位置: 无
发布时间: 2011-10-20 12:06
点赞数: 0   转发数: 5   评论数: 2
发布工具: 微博 weibo.com

2118:今天又成了 Bug Day. 我终于在 ngx_lua 0.3.1rc17 中修正了署名 Nginx User 的哥们报告的在 rewrite_by_lua* 和 access_by_lua* 中调用 ngx.exec() 时可能会出错的问题（细节见这里的讨论：http://t.cn/Svfo3r ）。已包含在 ngx_openresty 1.0.8.15 开发版中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-10-19 17:30
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

2119:刚刚我又为 ngx_lua 模块实现了 ngx.req.get_body_data()和 ngx.req.get_body_file()这两个函数，基本上照搬了标准的 ngx_perl 模块里的相关实现。其中前者比 ngx.var.request_body 或者 ngx.var.echo_request_body 更为高效，可以减少一次动态内存分配以及一次数据拷贝。此更动已提交到 master 分支。  
微博位置: 无
发布时间: 2011-10-18 20:17
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

2120:刚刚在 ngx_lua 模块的 git master 分支中实现了 ngx.req.discard_body() 函数。为了测试这个特性，我终于下决心把 Test::Nginx::Socket 测试模块的 pipelined 请求支持给实现了 :P 现在终于可以有效地测试 http 1.1 pipelining下 nginx 的行为了，包括此种情况下不读取也不忽略请求体时的可怕后果 :)  
微博位置: 无
发布时间: 2011-10-18 19:36
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2121:我刚刚在 ngx_lua 模块的 git master 分支中实现了 ngx.req.read_body()这个同步非阻塞的接口，用于以全缓存模式读取请求体。目前直接调用 nginx 核心中的 ngx_http_read_client_request_body函数。现在 lua_need_request_body终于可以下岗了，而且我们都可以做到先发一子请求再决定读不读请求体 :D  
微博位置: 无
发布时间: 2011-10-17 22:14
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

2122:国外的一位用户愿意出钱赞助 ngx_lua 模块在请求体操纵方面的开发工作，比如实现同步非阻塞的 ngx.req.read_body() 函数,用于全缓存方式读取请求体，还有同步非阻塞的 ngx.req.recv_body_chunk() 函数，用于流式读取请求体数据（从而可以用于处理大数据上传）。明天正式开始着手这一块的实现工作 :)  
微博位置: 无
发布时间: 2011-10-16 22:12
点赞数: 0   转发数: 2   评论数: 8
发布工具: 微博 weibo.com

2123:刚刚在 ngx_lua 0.3.1rc13 中实现了 ngx.req.set_uri() 和 ngx.req.set_uri_args() 这两个新接口，这样我们就可以在 Lua 中完全表达 Nginx 的"rewrite a b;"以及"rewrite a b break;"了！相关的文档在这里：http://t.cn/aspnkI 该特性已包含在 ngx_openresty 1.0.8.9 开发版中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-10-16 12:39
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

2124:悲剧啊，ngx_lua 模块的测试集以各种模式完整地跑一遍下来，在我的小黑上竟然也需要近 35 分钟。。。人生啊，看来后面得走测试集群之路了。。。  
微博位置: 无
发布时间: 2011-10-16 11:38
点赞数: 1   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

2125:好久没上 twitter 了，用我的 VPN 作代理也上不去，更搞笑的是我在美国的时候试了几次也没连上！人品太差。。。要不就是推把我给屏了。。。  
微博位置: 无
发布时间: 2011-10-15 21:27
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

2126:我刚刚发布了 ngx_chunkin 模块的 v0.22 版，现在它会把 Transfer-Encoding 请求头彻底删除。原先是结合 ngx_proxy 模块会输出空值的 Transfer-Encoding 头，但 Apache 也会因此抱怨，真是搞笑啊。因为 nginx 未提供请求头的屏蔽和删除 API，我复制了 ngx_headers_more 模块中的相关代码 :)  
微博位置: 无
发布时间: 2011-10-14 15:35
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2127:准备利用田园在家的时间，拉晓哲老师以及@珣新_去哪儿 一起合写一本 Nginx 高级应用方面的中文图书（Nginx 公司的创始人 Andrew 同学也希望我日后有机会再译成英文的），以填补图书界在这一领域的空白 :)  
微博位置: 无
发布时间: 2011-10-14 11:07
点赞数: 1   转发数: 10   评论数: 32
发布工具: 微博 weibo.com

2128:今天是 Bug Day，修正了 Nginx 核心中的 ngx_http_named_location 函数的一个 bug，同时在 ngx_lua 和 ngx_echo 中尝试绕过此 bug. 同时把过去对ngx_lua模块的 ngx.exec()的一处修复移植到 ngx_echo 模块的 echo_exec 中。所有这些修复都包含在了ngx_openresty 1.0.8.5开发版中：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-10-13 21:19
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2129:计算世界有那么多激动人心的开源项目，无奈人生短暂，作为程序员个人，能深度参与其中一二个就很不错了。我刚花了两年时间深入 nginx 世界，现在我的几十个 nginx 模块的维护和开发工作就要占据我每天不少时间了。我默默旁观着 LuaJIT,Perl 6,PostgreSQL 这些项目中的激动人心的进展，就不由心中痒痒。  
微博位置: 无
发布时间: 2011-10-13 15:29
点赞数: 2   转发数: 5   评论数: 14
发布工具: 微博 weibo.com

2130:刚刚在 ngx_lua 模块的 shm 分支上实现了共享内存API的一个原型，已通过的测试用例在这里：http://t.cn/aFnhKY 里面的TEST 1用例在我的ThinkPad T400上用 ab -k -c10 可以压到 28000+ q/s（双worker）和 23000 q/s（单 worker）.而且ab进程也跑在同一台本上。这个共享字典同时支持 LRU 和过期时间。  
微博位置: 无
发布时间: 2011-10-12 18:11
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

2131:nginx 标准的 ngx_limit_request 模块使用 nginx 自己的红黑树和队列组件实现了一个基于共享内存的 LRU 键值缓存。我打算照此实现 ngx_lua 模块的共享内存 API 以及 ngx_shm_store 模块，而后者将被设计成可以和 ngx_lua 以及 ngx_srcache 模块一起工作 :)  
微博位置: 无
发布时间: 2011-10-11 12:49
点赞数: 1   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

2132:我刚刚发布了 ngx_openresty 1.0.8.1 开发版：http://t.cn/aCdPzo 该发布中将 nginx 核心升级到最新的稳定版，1.0.8，并包含了过去几周所有的新特性和 bug 修复。完整的更动清单在这里：http://t.cn/aFcwlh  
微博位置: 无
发布时间: 2011-10-10 17:59
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2133:我刚刚标记了 ngx_srcache 0.13rc1 发布，并更新了它在 wiki 上的官方文档：http://t.cn/aeJ4tv 这个版本包含了我在美国期间实现的所有功能以及回国后的几处修复。由于缓存序列化格式发生了变化，所以升级时须注意同时更新所有的 nginx 实例（但无需同时清空 memcached），因为老版本不认识新格式。  
微博位置: 无
发布时间: 2011-10-10 15:45
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2134:ngx_lua 模块目前用于读请求体的 lua_need_request_body 配置指令是晓哲在早期引入的一个临时解决方案。最终我们会抛弃这条指令，转而在 Lua 语言层面引入 ngx.req.read_body()和 ngx.req.recv_body_chunk()这两个同步但非阻塞的接口。前者用于全缓存整体读取，而后者用于流式读取，很像socket的recv.  
微博位置: 无
发布时间: 2011-10-10 08:21
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2135:刚才使用全新的 nginx 1.1.5 运行测试集时，valgrind 捕捉到 ngx_postgres 的一处内存泄漏。该泄漏是由 Maxim Dounin在nginx 1.1.4中引入的不兼容变化所导致的. ngx_postgres 现在需要自己显式释放与连接相关连的一个 pool. 我已经请Piotr Sikora去搞定了。测试集最有价值的时候是在有用例失败的时候。  
微博位置: 无
发布时间: 2011-10-09 09:05
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

2136:@吕那个布 今天下午会把 openresty.org 和 agentzh.org 所在的 Linode 主机迁移到其在日本的新机房，所以会暂时关闭几个小时，晚上 6 点以后应当会恢复 :)  
微博位置: 无
发布时间: 2011-10-08 15:02
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

2137:在面对操着很强的法国口音或者俄国口音的英语、同时语速又极快的老外时，我才明白自己的英语听力有多么糟糕。。。哈哈！  
微博位置: 无
发布时间: 2011-10-08 09:12
点赞数: 0   转发数: 0   评论数: 8
发布工具: 微博 weibo.com

2138:Nginx的创造者 Igor Sysoev 几周前访问了 CloudFlare 在旧金山的办公室。CloudFlare的 CEO Matthew Prince 在向我回忆当时的情景时说，Igor 同学是一个非常严肃非常酷的典型的俄国人，看起来很像战斗机飞行员。Andrew 同学也向我描述他是一个很特别的人。难怪我在手抄他的代码时，都会感觉心中很平静。  
微博位置: 无
发布时间: 2011-10-08 09:06
点赞数: 1   转发数: 2   评论数: 17
发布工具: 微博 weibo.com

2139:回到福州的家里的第一件事情就是发布 ngx_openresty 1.0.6.22 正式版：http://t.cn/akOQFo 在美国的时候，只有我的 Macbook Air 可以用，而我的 ngx_openresty 发布脚本还不能运行在它的 Mac OS X 上面 :P 该发布并未包含在美期间的任何 bug 修复和新特性，那些变更将会稍后包含在 1.0.8.x 系列中 :)  
微博位置: 无
发布时间: 2011-10-07 13:23
点赞数: 0   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

2140:Nginx 公司的创始人之一 Andrew Alexeev 很有兴趣把我们的 ngx_lua 模块（以及其他的一些他们觉得特别有用的），整合进官方 Nginx 中。他同时很想了解一下在中国除了淘宝网，还有哪些互联网公司在生产上使用到了 ngx_lua 模块。应用了 ngx_lua 的朋友能否告诉我你们公司的名字及大致的使用场景？多谢！  
微博位置: 无
发布时间: 2011-10-06 14:40
点赞数: 0   转发数: 33   评论数: 31
发布工具: 微博 weibo.com

2141:刚刚和 Nginx 公司的 Andrew 同学面对面单独聊了很久，他向我详细介绍了他们公司的 Igor Sysoev 和 Maxim Dounin 后面围绕 nginx 的工作计划，包括 nginx 1.x 和 2.x 这两大分支。这一下我后面干活儿就不用担心和他们撞车了，而且和官方可以有更紧密的联系。V2 的许多特性还是很值得期待的，呵呵。  
微博位置: 无
发布时间: 2011-10-06 06:41
点赞数: 1   转发数: 56   评论数: 40
发布工具: 微博 weibo.com

2142:这几日都在消化 DNS 相关的 RFC 文档，以及阅读 nginx 核心中动态 resolver 部分的源码，同时参考了 PHP 的 Net_DNS 库的一些设计，现在基本上已经知道 ngx_dns 模块应该怎么做了，呵呵。明天开始正式干活儿。。。  
微博位置: 无
发布时间: 2011-10-05 10:50
点赞数: 0   转发数: 0   评论数: 11
发布工具: 微博 weibo.com

2143:ngx_srcache 的 devel 分支现在默认也能识别响应头“Cache-Control: max-age=0”和“Expires: <过去的某一个日期>”来禁用缓存更新操作。并且提供了 srcache_response_cache_control 配置指令，以禁用此功能。后面要做的工作就剩下通过 $srcache_expire 变量来提供缓存保鲜期的自动计算功能了，呵呵。  
微博位置: 无
发布时间: 2011-10-03 06:38
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

2144:刚刚查看 google analytics 的统计报告，意外发现9月29日那天 openresty.org 的流量疯涨了一个数量级。查看来源之后，才知道是 openresty 又 Hacker News 了，不过顶楼是关于 node.js 的“callback 难题”的：http://t.cn/ae1b6o 看来不少用户在配置很低的机器上使用 openresty 也取得了极好的性能。  
微博位置: 无
发布时间: 2011-10-03 01:46
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

2145:今天和媳妇儿骑车漫游金门大桥两岸，风好大，感觉有些冷。。。  原图 
微博位置: 无
发布时间: 2011-10-02 12:47
点赞数: 1   转发数: 0   评论数: 11
发布工具: 微博 weibo.com

2146:刚刚在 ngx_srcache 模块的 git devel 中实现了响应状态行（status line)和 Content-Type 响应头的自动缓存机制。从此我们不再依赖于 default_type 和 mime.types 等设置来手动恢复响应的 Content-Type 头了。未来 ngx_srcache 将会自动缓存其他响应头，并提供配置指令来过滤那些不希望缓存的响应头 :)  
微博位置: 无
发布时间: 2011-10-01 06:53
点赞数: 0   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

2147:刚刚向 nginx-devel 邮件列表提交了一个针对 nginx 核心的小补丁：http://t.cn/aDqnfb Maxim Dounin 同学很快就回复了。自从 Maxim 得到官方 SVN 仓库的提交权限之后，补丁的反馈明显好了很多。我也开始计划着再提交一个针对标准的 ngx_addition 模块的小补丁，呵呵。  
微博位置: 无
发布时间: 2011-10-01 02:19
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

2148:ngx_srcache模块现在默认会自动检查响应头Content-Encoding是否为非空值，如果非空，则跳过缓存更新操作，并打出一个警告到error.log. 毕竟很少有人会记得把Content-Encoding编码进缓存键中，而一旦忘记把后端压缩关闭，则会误将压缩结果缓存起来。可通过srcache_ignore_content_encoding禁用此行为。  
微博位置: 无
发布时间: 2011-09-30 11:42
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2149:今天又给ngx_srcache模块实现了更多RFC 2616的要求，即现在默认会遵照Cache-Control响应头的值来决定是否将当前响应存入缓存。同时新添加了srcache_store_no_store, srcache_store_private和srcache_store_no_cache配置指令用于禁止该响应头影响缓存策略。我参考了Apache2的mod_cache模块的配置界面。  
微博位置: 无
发布时间: 2011-09-30 06:12
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2150:刚刚在李子义同学的提醒下，我为 ngx_lua 模块实现了 HTTP 1.0 下的非 chunked 流式输出支持，即在 Lua 用户事先显式设置 Content-Length 响应头的情况下，对 HTTP 1.0 请求禁用自动全缓存输出模式。这个功能在一些场景下还是很有用的，配合使用ngx.flush()和echo_sleep可以看到流式输出的直观效果。  
微博位置: 无
发布时间: 2011-09-29 15:45
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2151:刚刚在实现 srcache_request_cache_control 配置指令的过程中，又顺手修正了 ngx_srcache 模块中和 srcache_fetch_skip 指令相关的一个 bug: 当 srcache_fetch_skip 置为真值时，不应同时自动跳过 srcache_store 步骤，毕竟后者可以通过 srcache_store_skip 指令加以控制。该更动也是在 git devel 中。  
微博位置: 无
发布时间: 2011-09-29 06:44
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2152:ngx_srcache模块刚又有了srcache_request_cache_control配置指令，当置为on时，客户端可以通过请求头Cache-Control: no-cache或者Pragma: no-cache强制ngx_srcache绕过缓存查找步骤（但并不会自动跳过缓存更新步骤）。这里是该特性对应的测试用例：http://t.cn/aenyTY 目前仍提交在了devel分支里。  
微博位置: 无
发布时间: 2011-09-29 06:36
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

2153:刚刚在 ngx_srcache 模块的 git devel 分支中，实现了 srcache_methods 配置指令，可以用于指定参与缓存的 HTTP 请求的方法名称的列表，和 ngx_proxy 模块里面的 proxy_cache_methods 配置指令有些类似，但支持更多的方法名，比如 PUT 和 DELETE. 现在默认只有 HEAD 和 GET 请求是可缓存的。  
微博位置: 无
发布时间: 2011-09-29 05:18
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2154:正在和 CloudFlare 公司的 Nginx 开发团队交流技术问题。photo by 媳妇儿  原图 
微博位置: 无
发布时间: 2011-09-29 01:57
点赞数: 1   转发数: 0   评论数: 8
发布工具: 微博 weibo.com

2155:我开始根据 CloudFlare 的业务需求，重新安排我原先想做的各项 TODO 的优先级。我会首先着力增强 ngx_memc 模块的功能，添加 Unix Domain Socket 支持，自动 gzip 压缩和解压选项支持，mget 命令支持，以及 pipelining 支持。之后，我会着手实现一个可以和 DNS 服务器进行非阻塞通信的 nginx 模块。  
微博位置: 无
发布时间: 2011-09-28 07:23
点赞数: 0   转发数: 4   评论数: 9
发布工具: 微博 weibo.com

2156:在旧金山街头~  原图 
微博位置: 无
发布时间: 2011-09-27 14:03
点赞数: 1   转发数: 1   评论数: 12
发布工具: 微博 weibo.com

2157:一位网名叫做 Perlover 的俄国人最近向我们的 nginx 模块项目疯狂地创建问题 ticket。。。我这几日都来不及回复了。。。  
微博位置: 无
发布时间: 2011-09-27 00:52
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

2158:在飞机上我利用看电影和打盹的间隙，完成了各个模块同 nginx 1.1.4 的兼容性更新的大部分工作。幸好国泰的飞机上有电源，否则我的 macbook 无论如何也撑不过十多个小时 ;)  
微博位置: 无
发布时间: 2011-09-25 04:55
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2159:我和媳妇儿顺利到达旧金山，Mathew Prince 亲自来接我们，还带上了他的漂亮女友。刚出机场后，看两边街景与国内无异，直到进了湾区以后，才见到越来越多的绿色，越来越高大的树木。最终我们到了 John 的精致可爱的 guest apartment 落脚 :)  
微博位置: 无
发布时间: 2011-09-25 04:52
点赞数: 0   转发数: 3   评论数: 12
发布工具: 微博 weibo.com

2160:Nginx 1.1.4已经内置了ngx_upstream_keepalive模块，并包含了Maxim Dounin为proxy/fastcgi/memcached添加长连接支持的补丁以及upstream API的不兼容变化。这几日一直在计划着把我那些upstream模块都更新到和1.1.4兼容，现在看来，只能在飞机上搞了。Matthieu Tourne今天已经开始跟我念叨这件事情了。  
微博位置: 无
发布时间: 2011-09-23 19:34
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

2161:买礼物中。。。  原图 
微博位置: 无
发布时间: 2011-09-23 14:24
点赞数: 0   转发数: 0   评论数: 7
发布工具: S60客户端

2162:Nginx受Perl文化的影响还是挺大的，配置记法中随处可见Perl风格的充满魔法的诡异记法。而到目前为止官方唯一嵌入核心的动态语言解释器就是perl5（虽然因为阻塞和笨重而没有多少实用价值）。当然，Nginx也参考了Apache的许多内部实现方式，但在配置文件记法上，Apache后来明显越来越偏Java/XML风格了。  
微博位置: 无
发布时间: 2011-09-23 11:50
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

2163:在 sexybabes 的提议下，我刚刚让 ngx_lua 模块的 ngx.exec() 接口接受 Lua table 作为其第二个可选的 args 参数：http://t.cn/agyiG6 该特性连同 ngx.headers_sent 接口已经包含在了 ngx_openresty 1.0.6.17 开发版发布中：http://t.cn/aCdPzo :)  
微博位置: 无
发布时间: 2011-09-23 00:08
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2164:刚刚发布了 ngx_openresty 稳定版 1.0.6.12（注意最后一段数字是偶数）: http://t.cn/aCdPzo 这是第一个基于 nginx 1.0.6 核心的 OpenResty 稳定版 :) 感谢所有朋友的努力！  
微博位置: 无
发布时间: 2011-09-21 19:12
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2165:ngx_lua目前使用标准Lua的CFunction方式向Lua暴露Nginx的C API，这对于LuaJIT来说有些不幸，因为CFunction会干扰JIT"追踪"(trace)，而进入解释模式（详情见http://t.cn/admEfX )。因此未来我会利用 LuaJIT的FFI特性来暴露 Nginx C API，这样我们就可以跑得更快！  
微博位置: 无
发布时间: 2011-09-21 18:38
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2166:一年学习一门新的编程语言。今年我算是学会了 Erlang，而去年学的是 Lua，前年学会了 Haskell，大前年则是 JavaScript. 今年你学的是哪一门新语言呢？哈哈？  
微博位置: 无
发布时间: 2011-09-21 17:47
点赞数: 0   转发数: 7   评论数: 15
发布工具: 微博 weibo.com

2167:Larry Wall 曾经说过，他当年创造 Perl 是为了在 C 和 Shell 之间取得某种平衡；现在我在 Web 应用的 server 端大量使用 Lua 则是为了进一步地在 C 和 Perl 之间取得新的平衡 :)  
微博位置: 无
发布时间: 2011-09-21 12:43
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

2168:大三的时候，我摸仿Perl CPAN模块 Parse::RecDescent，用Perl自己实现了一个相同界面的递归下降分析器生成器。当时的实现可以分别输出独立的 Perl 和 C# 实现的文本分析器。这几日我又在此基础上添加了 Lua 代码生成器，得到的 Lua 分析器在 LuaJIT 中比Perl实现快了 3.5 倍，且还有不小的优化空间 :D  
微博位置: 无
发布时间: 2011-09-21 12:04
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2169:perl 5.12 相比 5.10 的性能提升还是很明显的，我在大三时候写的递归下降分析器生成器的一个典型用例在 5.12 中运行，整体比 5.10 快了 14.6% :D 而当年在雅虎做网页智能抽取器时，我那个抽取器在 5.10 中又比 5.8 快了近一倍。所以说，perl 5 这些年还一直在稳步进步，只不过大家关注得少了而已。  
微博位置: 无
发布时间: 2011-09-21 11:18
点赞数: 0   转发数: 8   评论数: 9
发布工具: 微博 weibo.com

2170:今天@珣新_去哪儿 让 ngx_rds_json 模块中的 rds_json_ret 配置指令产生的 JSON 输出也能遵守 rds_json_success_property 和 rds_json_user_property 的配置要求。该修复已包含在了 ngx_openresty 1.0.6.11 发布中：http://t.cn/aCdPzo 同时我还包含了两处微小的性能优化 :)  
微博位置: 无
发布时间: 2011-09-20 22:09
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2171:程序文档中最重要的便是代码示例：一例胜千言！Perl 世界里的 CPAN 是非常庞大的程序库，其中几乎所有模块的文档都会把 Synopsis 一节安排在最前面，而这一节里几乎全部是示例，这已然成为惯例，以至于我在 Nginx 模块的文档中也这么安排。几乎没有示例的文档看着就闹心了，比如 http://t.cn/adJKt5  
微博位置: 无
发布时间: 2011-09-20 10:36
点赞数: 0   转发数: 4   评论数: 2
发布工具: 微博 weibo.com

2172:刚把我在四年前为雅虎中国编写的 SearchAll Firefox 插件更新到了和 Firefox 6.0.2 相兼容，虽然还有不少小问题，呵呵：http://t.cn/adPTZg 不知道 @jqliu 老师是否还在使用它呢，嘿嘿。后面几天我开始彻底重写这一款插件。现在回头看我平生写的第一个 JS 应用的代码，可真是惨不忍睹啊。。。呵呵。  
微博位置: 无
发布时间: 2011-09-18 20:11
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2173:我在最新的 ngx_openresty 1.0.6.7 中为 ./configure 脚本添加了 --with-luajit=PATH 和 --with-lua51=PATH 选项，即允许让用户自己指定外部的 LuaJIT 2.0 或者 Lua 5.1 安装目录的前缀。这对于打 RPM/Debian 包的一些场景会比较有用，毕竟在Linux世界都倾向于打小包，即为 LuaJIT 这样的单独打小包。  
微博位置: 无
发布时间: 2011-09-18 13:39
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2174:我：“晓哲老师！又有人报bug！”晓哲：“是小白还是高级开发者？”我：“小白。”晓哲：“不理。。。”这是从前和晓哲老师的典型对话。但令人吃惊的是，我经常从所谓的“小白用户”提的琐碎问题中学到很多东西。在他们的刺激下，我经常可以顺便搞清楚自己原先没机会关注的一些重要细节 :)  
微博位置: 无
发布时间: 2011-09-17 22:16
点赞数: 1   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2175:周末到森林公园呼吸新鲜空气真不错:)  显示地图 原图 
微博位置: 无
发布时间: 2011-09-17 18:12
点赞数: 0   转发数: 0   评论数: 1
发布工具: S60客户端

2176:利用 ngx_lua 模块的 access_by_lua 配置指令可以在 Nginx 请求处理的 access 阶段提前于 proxy_pass/fastcgi_pass 等后端通信，通过 Lua 来执行高效的安全检查方面的工作，这里有一例子：http://t.cn/arRyO9 听说@去哪儿网 的工程师们就很喜欢这么玩，呵呵。  
微博位置: 无
发布时间: 2011-09-17 15:31
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2177:我刚刚发布了 ngx_drizzle 0.1.1 正式版：http://t.cn/arQHAK 两个月前发布的上一个稳定版 v0.1.0 在 32 位系统上会有段错误，这两天还有用户在 Nginx 邮件列表里面抱怨来着，看来是发布新的正式版的时候了 ;) 多谢 @魏世江 @stefanli @姜大炮 @calio 在过去两个月中对此模块的贡献！  
微博位置: 无
发布时间: 2011-09-17 13:32
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2178:刚回答了 nginx 邮件列表里的一个用户提问，演示了如何在 nginx.conf 中通过 Lua 来获取系统环境变量到 nginx 变量中：http://t.cn/araZQG  
微博位置: 无
发布时间: 2011-09-16 12:18
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2179:受美国 CloudFlare 公司的邀请，我跟我媳妇儿下周将去旧金山玩一段时间。在此期间，我将跟 CloudFlare 的技术团队进行相关的交流。他们也是我们不少 Nginx 模块的生产用户 :) 话说我在 jobless 的状态下申请美国的 B-1 签证，还真是一波三折呀，呵呵。  
微博位置: 无
发布时间: 2011-09-16 10:53
点赞数: 0   转发数: 5   评论数: 18
发布工具: 微博 weibo.com

2180:我刚把我的 Firefox 插件 SearchAll 的源码仓库从 SVN 迁移到了 GitHub 上：http://t.cn/arMXN7 这个插件比较有意思的一点是使用一个 Perl 编写的框架来开发的：http://t.cn/arMXNz 想当年，@定球呀球 就是通过这个项目和我在网上结识的，嘿嘿。以码会友就是好 ;)  
微博位置: 无
发布时间: 2011-09-15 22:51
点赞数: 1   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

2181:今天根据@去哪儿网 的需求，我为 ngx_rds_json 模块添加了 rds_json_root, rds_json_success_property, 和 rds_json_user_property 这几条配置指令：http://t.cn/arVUoq 这样就可以配置生成许多 JS 库喜欢的 JSON 格式，并包含用户自定义的属性了。该特性已包含在 ngx_openresty 开发版 1.0.6.5 中。  
微博位置: 无
发布时间: 2011-09-15 18:36
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2182:在和一些用户讨论功能设计的时候，经常会注意到人们有一种追求过度灵活度的倾向，即超出可以想见的实际需求，一味追求 API 和功能上的极端灵活性。这种倾向其实是有害的，首先过度灵活的东西会大大提高实现的复杂度，给性能打上不小的折扣，其次，因为缺乏可预见的实际需求，投入产出严重不成比例。  
微博位置: 无
发布时间: 2011-09-15 12:18
点赞数: 0   转发数: 16   评论数: 9
发布工具: 微博 weibo.com

2183:@珣新_去哪儿 帮忙为 ngx_lua 模块实现的 header_filter_by_lua 指令让这个nginx邮件列表中的问题终于有了圆满的解：http://t.cn/arzbC5 利用这个特性对proxy上游返回的响应头（包括种的cookie）进行过滤和修改是最经典的玩法了。那个楼主还是三个月前提的问呢。满足用户的实际需求是最最开心的了！  
微博位置: 无
发布时间: 2011-09-14 17:07
点赞数: 0   转发数: 1   评论数: 4
发布工具: 微博 weibo.com

2184:大部分人平时都很忙很浮躁，对我来说也是幸运的。这样我也可以做一些长期的更重要的事情，并且不用太担心和别人撞车 :)  
微博位置: 无
发布时间: 2011-09-14 12:09
点赞数: 1   转发数: 5   评论数: 4
发布工具: 微博 weibo.com

2185:今天帮助一个印度用户架设了 ngx_srcache + ngx_memc + memcached 作 web service 的缓存，在他的 4 核 500 MB 内存的 Linode VPS 上，使用 ab -c1024，在缓存命中的情况下，也能达到 2600+ qps. 吞吐量比他原先的 varnish 服务器高出一个数量级以上，而且非常稳定。当然了，他的业务需求足够简单 ;)  
微博位置: 无
发布时间: 2011-09-13 22:52
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2186:厚厚的云层遮住了明月，左海一片静谧。烟花在远处响着，却也看不见。  原图 
微博位置: 无
发布时间: 2011-09-12 20:28
点赞数: 1   转发数: 1   评论数: 6
发布工具: S60客户端

2187:我发现自己特别喜欢先做low-hanging fruit性质的活儿。细细地反复打磨一个小功能的感觉很好，特别是在使用C语言的时候，呵呵。  显示地图 
微博位置: 无
发布时间: 2011-09-12 19:40
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

2188:最近我又感染了一位PHP程序员开始学Lua，他是通过我们的ngx_lua模块体会到Lua在性能方面的威力的。他说已经让他的整个团队都开始学Lua，并逐步把他们的PHP编写的业务系统都迁移到ngx_lua上来。对于他们的业务来说，性能是第一位的。  
微博位置: 无
发布时间: 2011-09-12 18:49
点赞数: 0   转发数: 5   评论数: 5
发布工具: S60客户端

2189:我在雅虎的第一件工作就是编写了 SearchAll 这一款 Firefox 插件：http://t.cn/aBppbo 但已经很久没有维护和更新了。今天又有用户来信希望我将之更新到与 Firefox 5+ 兼容，他说他为了使用 SearchAll 一直忍着没有升级他的 Firefox. 看到现在的 Firefox 性能已如此之好，SearchAll 也该重生一下了 :)  
微博位置: 无
发布时间: 2011-09-12 10:18
点赞数: 1   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2190:在 nginx 世界中，让各个模块协同工作是非常灵活，同时也是非常有趣的。刚刚为我的一个生产用户写了一个样例配置：http://t.cn/aBoDD1 在这个例子里，ngx_lua, ngx_geoip, ngx_proxy, ngx_echo, 和 ngx_rewrite 这几个模块协同完成请求的处理。Lua 语言和 Nginx 变量就是其中的胶水 :)  
微博位置: 无
发布时间: 2011-09-11 21:36
点赞数: 0   转发数: 3   评论数: 9
发布工具: 微博 weibo.com

2191:我最怕看到这样的 Nginx 基础 API 的变化：http://t.cn/aBiEKN 这下好了，ngx_chain_update_chains 这样常用的 API 都变了，许多第三方模块都需要更新，否则编译都编不过去，同时更要命的是，某些模块自己的内存管理策略也会因这个激进的变化而不得不修改，因为这个函数现在还有主动释放内存的功能。  
微博位置: 无
发布时间: 2011-09-11 12:52
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

2192:最近几日一直在学习今年新发布的 ExtJS 4，用它新的 Chart API 做一些带图表的小应用。ExtJS 4 的 API 设计让我感觉很不错，特别是 MVC 相关的设计界面。如果早一些接触这样的 RIA JS 框架（包括 YUI 3），则我一年多以前给量子店铺统计的前端系统设计的 JS 框架就会是另一个样子了 :)  
微博位置: 无
发布时间: 2011-09-11 12:23
点赞数: 0   转发数: 4   评论数: 3
发布工具: 微博 weibo.com

2193:今天一大早收到自由软件基金会（FSF）的 Matt Lee 发来的邮件，提醒我更新 mod_libmemcached_cache 这个 Apache 模块中的许可证中 SFS 的联系地址。Matt 说他们已经不用那个老地址有十多年了。老外们对版权和许可证还真的是很认真。  
微博位置: 无
发布时间: 2011-09-09 12:31
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2194:按@珣新_去哪儿 的建议，ngx_openresty 未来的开发版的版本号都采取第四段数字为奇数，而稳定版的第四段数字都为偶数的版本号模式。例如1.0.6.1和1.0.6.3都是开发版，而1.0.6.2和1.0.6.4则是稳定版。我刚刚发布了此模式下的第一个开发版1.0.6.1: http://t.cn/aCdPzo 包含了朱峰报告的一个bug的修复。  
微博位置: 无
发布时间: 2011-09-08 16:15
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2195:今天切菜时不小心割破了手指，看来后面跟媳妇儿的分工得调换过来，由我主司炒菜环节了，呵呵。无论如何，得坚持一日三餐在家做，嘿嘿。  
微博位置: 无
发布时间: 2011-09-07 22:20
点赞数: 1   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

2196:一些号称完成自举的语言，比如 CoffeeScript，其解析器部分并未真正完成自举，其语义还是由 Jison 这样的 JavaScript 库来完成的。类似地，Not Quite Perl6 （NQP）语言的解析器部分也依赖 PIR 语言写的 Parrot Grammar Engine (PGE) 。因此，这些号称完成自举的语言在移植到其他平台时还是挺麻烦的。  
微博位置: 无
发布时间: 2011-09-07 15:59
点赞数: 1   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2197:咱能不再写像这样子的阻塞着的、把 Nginx 退化为 Apache prefork 的垃圾 Nginx 模块么？http://t.cn/a1WVeF 记得有人抱怨 Nginx 并发上不去，结果一看他们写的 Nginx 模块，全是阻塞着的 socket 调用，真是太 NB 了。  
微博位置: 无
发布时间: 2011-09-07 15:21
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

2198:今天又忍不住把 ngx_redis2 模块的文档给 wiki 化了：http://t.cn/a1X181 刚刚我还帮助一个用户优化他的基于 ngx_redis2 + ngx_lua + lua-redis-parser 的 web 应用。我们注意到，在这种配置下，nginx 是很容易让后面的 redis 进程跑满CPU的，特别是启用nginx的 redis 连接池和 LuaJIT 加速的时候。  
微博位置: 无
发布时间: 2011-09-06 18:13
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2199:刚刚把我的 slackware 上的 firefox 3.6.2 升级到了最新的 6.0.1，确实一下感觉快了好多好多。。。不过折腾了好久 Firefox 的安全选项，才让 TiddlyWiki 又可以保存自己了，多亏了这个页 面：http://t.cn/a16HOW  
微博位置: 无
发布时间: 2011-09-06 16:31
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2200:Nginx 1.1.x 开发分支还在剧烈地变化中，其 upstream 部分也有不向后兼容的变化（因为 Maxim Dounin 的 keepalive 支持），将 ngx_openresty 升迁到 1.1.x 核心需要做很多工作，包括所有 upstream 模块都要作相应的修改，而且 ngx_upstream_keepalive 模块也在变化中，所以我先观望，不急于升到 1.1.x  
微博位置: 无
发布时间: 2011-09-06 11:01
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2201:Maxim Dounin 的 HTTP 1.1 proxy 以及更一般的 keepalive upstream 的补丁已经整合到 nginx 1.1.x 开发分支中，一天前，他把他的 ngx_http_upstream_keepalive 模块也作为 nginx 核心的补丁提交到了 nginx-devel 邮件列表，看来这个模块很快就要成为核心模块了，ngx_openresty 未来用不着再打包它了。  
微博位置: 无
发布时间: 2011-09-06 10:58
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2202:今天我发布了 ngx_openresty 1.0.5.1 正式版，包含了这半个多月所有的修复和新特性及新组件。同时发布了第一个基于最新的 Nginx 稳定版 1.0.6 的 ngx_openresty 的 devel 发布：http://t.cn/aCdPzo  
微博位置: 无
发布时间: 2011-09-04 16:23
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

2203:一直想找一个独立的像样的 Erlang JSON 库，看起来还不错的 jsonerl 库在编码浮点数时还是依赖 mochinum，明显是从 mochiweb 抽出来时没改干净，其运行时性能也确实不敢恭维，看来还是得自己搞一个靠谱点的了。。。话说，我使用 Erlang 过程中最大的不爽还是运行时异常的信息太不友好了，怀念 perl 的  
微博位置: 无
发布时间: 2011-09-04 00:06
点赞数: 0   转发数: 1   评论数: 6
发布工具: 微博 weibo.com

2204:向机器描述我们的问题的能力和效率，直接影响着我们用机器解决问题的能力和效率。我经常勉励身边的朋友和同事，深入学习编译器构造方面的原理和技术，熟悉相关的语言和工具。我很庆幸自己在高中时就抱着那本《编译原理及实践》反复苦读了三年，获益良多。  
微博位置: 无
发布时间: 2011-09-02 17:51
点赞数: 1   转发数: 19   评论数: 11
发布工具: 微博 weibo.com

2205:我刚刚在 nginx 邮件列表中发布了 ngx_lua 模块的 v0.3.0 版，该发布包含了过去两个月的所有新特性和缺陷修复。发布公告在这里：http://t.cn/a3l71Y  
微博位置: 无
发布时间: 2011-09-02 16:30
点赞数: 0   转发数: 3   评论数: 5
发布工具: 微博 weibo.com

2206:@珣新_去哪儿 这两日为 ngx_lua 模块实现了 header_filter_by_lua 和 header_filter_by_lua_file 配置指令：http://t.cn/a3Kylz 现在我们终于可以用 Lua 定义输出头过滤器了，呵呵。该特性已经包含在了 ngx_lua v0.2.1rc21 和 ngx_openresty 1.0.5.1rc13 中。感谢@珣新_去哪儿 的出色工作！  
微博位置: 无
发布时间: 2011-09-01 23:48
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

2207:前几日因台风一直在下雨，今晚雨终于停了，媳妇儿拉着我去散步。先在于山脚下的图书城翻了几本书，最喜欢"Beautiful Architecture"和"The Design of Design"。而后又上山走了一圈，一路都是夜凉如水的感觉，棒极了～  
微博位置: 无
发布时间: 2011-09-01 23:04
点赞数: 1   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2208:在我刚刚发布的 ngx_openresty 1.0.5.1rc12 中，我包含并默认启用了 lua-rds-parser 和 ngx_rds_csv 这两个最近新开发的小组件以及近期的一些 bug 修复：http://t.cn/aCdPzo 我已经在 Linux, Mac OS X, FreeBSD, 和 Solaris 这些系统上测试过了。欢迎大家试用和反馈 :)  
微博位置: 无
发布时间: 2011-08-31 15:52
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2209:这两天我编写了 lua-rds-parser 库：http://t.cn/a3AXzQ 可以在 Lua 里直接解析 ngx_drizzle 和 ngx_postgres 模块生成的 Resty-DBD-Stream (RDS) 格式了，呵呵，无需再通过 JSON 中转了。想写这个 Lua 库很久了，@定球呀球 可以考虑升级哈，不过要小心 rds.parser.null == cjson.null ~= yajl.null  
微博位置: 无
发布时间: 2011-08-31 10:42
点赞数: 1   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

2210:在@hugozhu 的推动下，今天我初步完成了 ngx_rds_csv 模块：http://t.cn/aumr1F 可以把 ngx_drizzle 和 ngx_postgres 模块输出的 RDS 二进制流转换为 CSV 逗号分隔格式。该模块遵照 RFC 4180 实现，同时提供了选项可设置字段分隔符和行终结符，以及是否包含字段名列表作为第一行。欢迎大家试用和反馈  
微博位置: 无
发布时间: 2011-08-29 21:32
点赞数: 0   转发数: 1   评论数: 21
发布工具: 微博 weibo.com

2211:我过去在向新手解释自己熟知的事情时，很容易变得缺乏耐心，我一度最喜欢说的话是：“见鬼！难道你就不能自己去 google 吗？”或者“嘿！文档上不是已经写得很清楚了么？你有认真去读吗？”。倘若我能克制性格上的这一弱点，耐心地讲解，显示友好，我可以争取到更多朋友，更多盟友，以及更多的用户 :)  
微博位置: 无
发布时间: 2011-08-29 15:22
点赞数: 1   转发数: 8   评论数: 21
发布工具: 微博 weibo.com

2212:根据 google analytics 的报告，我的 openresty.org 站点昨日的访问流量中，来自 wiki.nginx.org 的流量首次超越 weibo.com，成为第一大来源。看来我最近疯狂的文档 wiki 化工作，效果还是比较明显的，嘿嘿。不过现在来自中国的流量依旧是最多的，虽然用户来自世界上几十个国家和地区 :)  
微博位置: 无
发布时间: 2011-08-29 08:49
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2213:我真成了“文档控”了，今天在给 lua-redis-parser 库添加 typename 方法时，顺手把它原先难看的纯文本格式的文档也 wiki 化了，呵呵：http://t.cn/au0cZi  
微博位置: 无
发布时间: 2011-08-28 22:54
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2214:周末，在三坊七巷对着kindle构思代码。媳妇儿抓拍的  原图 
微博位置: 无
发布时间: 2011-08-28 15:19
点赞数: 0   转发数: 4   评论数: 14
发布工具: S60客户端

2215:我这两天在尝试为ngx_lua模块的正则匹配接口ngx.re.match函数实现"o"正则选项，类似Perl的/o正则修饰符，即自动在进程级别缓存和共享编译好的正则。我发现即使是单个小正则启用该选项，也能让nginx整体的响应延时减少9%之多，不再需要自己用变量去缓存正则对象－－为每一个正则取一个变量名真很崩溃。  
微博位置: 无
发布时间: 2011-08-27 10:59
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

2216:昨天发布了 SSH::Batch 0.027 到 CPAN: http://t.cn/au7w9H 感谢@珣新_去哪儿 添加了passphrase验证支持和tty选项的相关文档，感谢 Mithun Ayachit 添加了通过环境变量 SSH_BATCH_RC 来指定集群名配置文件 .fornodesrc 的支持。详细的变更在这里：http://t.cn/au7w9Q 社区驱动的项目开发就是好呀~  
微博位置: 无
发布时间: 2011-08-26 17:14
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2217:nginx 核心中封装的 ngx_regex_exec 宏并没有提供传递起始偏移量参数(startoffset)给底层的 pcre_exec() 函数的方法，于是我刚刚在 ngx_lua 中自己重新封装了一个版本，这样就很轻松地修正了 ngx.re 正则接口不支持 look-behind 正则断言的 bug，同时也让我的代码简洁和清晰了许多。已发布到 rc 版本。  
微博位置: 无
发布时间: 2011-08-26 16:56
点赞数: 0   转发数: 2   评论数: 10
发布工具: 微博 weibo.com

2218:刚刚和@珣新_去哪儿 聊天时，顺便提到我目前脑袋里想做的十项任务，放到这里以自勉：http://t.cn/auPvJP  
微博位置: 无
发布时间: 2011-08-26 15:21
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2219:今天又调整了一天我在 wiki.nginx.org 上的各个模块的 wiki 文档以及我的 wiki2markdown.pl 转换器脚本；修正了不少格式上以及内容上的小问题 :) 同时还抽时间在 Gtalk 上帮助 Sparsh Gupta 用我的 ngx_srcache + ngx_memc + ngx_lua 模块组合，取代他的 varnish 缓存服务器集群。  
微博位置: 无
发布时间: 2011-08-25 23:10
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

2220:Maxim Dounin 终于得到 nginx 官方 SVN 仓库的提交权限了，Nginx 终于不再是 one-person project 了，同时 Maxim 同学以后也不会再用成堆的补丁对 nginx-devel 邮件列表灌水了 ;)  
微博位置: 无
发布时间: 2011-08-25 18:08
点赞数: 0   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

2221:今晚我在 Sparsh Gupta 同学的推动下，为 ngx_srcache 缓存模块编写了一篇漂亮的 wiki 文档页：http://t.cn/amYi4k 这个模块可以为 nginx 任意的 location 实现透明的 memcached/redis/... 分布式缓存 :) 我们已经在生产上使用一年多了。  
微博位置: 无
发布时间: 2011-08-25 00:23
点赞数: 0   转发数: 6   评论数: 2
发布工具: 微博 weibo.com

2222:刚刚我为 ngx_lua 模块实现了计划中的最后一个 PCRE 正则接口，ngx.re.gsub 全局替换函数：http://t.cn/amOIxS 目前，正则中的 look-behind 特性尚不支持，ngx.re.gmatch 也有此限制。此外，我注意到还有一个 ngx.re.split 方法有待实现 ;)  
微博位置: 无
发布时间: 2011-08-24 18:00
点赞数: 0   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

2223:刚刚 wiki.nginx.org 网站的系统管理员 MTecknology 在 #nginx IRC 聊天频道上说，只要我在 wiki 上写点什么，他就很快会收到 wiki 遭遇 spam 攻击的报警。。看来哥的 wiki 编辑频度确实太高了一点儿。。哈哈！  
微博位置: 无
发布时间: 2011-08-24 13:21
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

2224:刚刚我给 ngx_lua 模块的 ngx.re.match 正则匹配接口添加了可选的 ctx 参数的支持：http://t.cn/aEk7kx 我们既可通过 ctx.pos 指定匹配的起始位置，也可在成功匹配后，从 ctx.pos 读出匹配后的最新偏移量。借助这个特性以及新添加的"a"正则选项（即 anchored 匹配模式），就能轻松构造词法分析器了！  
微博位置: 无
发布时间: 2011-08-24 13:10
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2225:昨天我在 ngx_lua 模块中为 Lua 实现了 ngx.re.sub 正则替换接口：http://t.cn/amoi7W 替换模版脚本的实现参考了 Nginx 核心中的 ngx_http_script，但支持 $ 的转义（即双写转义，$$，类似 Gnu make 中的记法）。今天再实现一下 ngx.re.gsub 全局替换接口就基本上完整了，呵呵。  
微博位置: 无
发布时间: 2011-08-24 09:38
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2226:Nginx 对于单个 http 请求的处理流程大致可以分为 rewrite, access, content, log 等多个 phase （阶段），其中前三个阶段注册的模块回调都可以实现 I/O 中断，比如在 rewrite phase 回调中发起对数据库后端的非阻塞请求，但最后一个 log phase 只能进行纯 CPU 计算和同步 I/O 操作了，遗憾啊。。。  
微博位置: 无
发布时间: 2011-08-23 12:25
点赞数: 0   转发数: 0   评论数: 9
发布工具: 微博 weibo.com

2227:今天花了几个小时，把我们的 ngx_drizzle 模块的文档也 wiki 化了：http://t.cn/amZQOO “代码写得好，不及文档写得好”;) 淘宝量子统计的登录系统，时间接口，以及所有报表的数据接口，都是通过这个 ngx_drizzle 模块和后端 MySQL 大集群进行非阻塞通信的 :)  
微博位置: 无
发布时间: 2011-08-22 18:09
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2228:最近一段时间我都在给ngx_openresty的Lua引擎添加Perl正则接口的支持,然后我就可以把Perl的Parse::RecDescent解析器生成器,还有TT2模版引擎也完整地移植到Lua环境中去了,嘿嘿。  
微博位置: 无
发布时间: 2011-08-21 16:36
点赞数: 0   转发数: 1   评论数: 1
发布工具: 短信

2229:在龙岩天马山的环山木栈道上遇见的花蝴蝶。山风温柔拂面，山林托着木桥，仿佛在空中行走。  显示地图 原图 
微博位置: 无
发布时间: 2011-08-20 21:49
点赞数: 0   转发数: 2   评论数: 5
发布工具: S60客户端

2230:一日在IRC上遇见老朋友Piotr Sikora，他告诉我他为了不每天面对着机器，正在玩高空跳伞。他说他有一点恐高，幸运的是4000英尺的高度也没太大关系了。看来程序员为了远离电脑，都不惜性命了。Piotr是ngx_cache_purge和ngx_postgres等众多模块的作者  
微博位置: 无
发布时间: 2011-08-20 10:45
点赞数: 0   转发数: 5   评论数: 2
发布工具: S60客户端

2231:我后悔买了从福州到厦门的动车票,晚了一个多钟头才开车。我媳妇儿说“和谐号”应该改名叫做“晚点号”。悲剧。。  
微博位置: 无
发布时间: 2011-08-19 16:11
点赞数: 0   转发数: 0   评论数: 2
发布工具: 短信

2232:ngx_lua现在禁用了Lua用户代码级别上的coroutine(协程),这是因为Lua用户代码本身就是运行在一个隐式的协程中,如果内部再嵌套一个协程,则需要同时yield两层协程,才能把控制权交还给Nginx主事件循环,而标准Lua不支持这么玩。  
微博位置: 无
发布时间: 2011-08-19 14:52
点赞数: 0   转发数: 0   评论数: 1
发布工具: 短信

2233:今天我在 ngx_lua 模块中实现了 ngx.re.gmatch 正则匹配接口：http://t.cn/anM6xM 现在可以使用 Lua 迭代器来遍历字符串内所有的匹配结果了，类似 Perl 5 里的 //g 方式。该特性已经包含在了 ngx_lua v0.2.1rc12 和 ngx_openresty 1.0.5.1rc2 中 :) 在 C 级别上创建 Lua 闭包玩迭代器，还是挺有趣的  
微博位置: 无
发布时间: 2011-08-18 20:55
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2234:我多年前做的毕设项目，Makefile::Parser，今天收到了一英国用户提供的补丁。几天前我还收到另一位用户的 bug 报告（此公几乎每年都发一封邮件提醒我该 bug 的存在）。我刚花了好大劲，才找到了原来的SVN仓库，并迁移到GitHub上。开源的力量就在于用户可以刺激连作者都已淡忘了的项目继续存活下去。。  
微博位置: 无
发布时间: 2011-08-17 22:29
点赞数: 1   转发数: 3   评论数: 7
发布工具: 微博 weibo.com

2235:刚刚晓哲老师交给任务了，最近我得给 ngx_drizzle 模块加上 failover 机制，即 nginx 的所谓“upstream next”机制 :) 话说@珣新_去哪儿 所热衷的 health check 机制也是很有趣很有用的，特别是 mysql health check, WOW.  
微博位置: 无
发布时间: 2011-08-17 17:15
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

2236:我今天为 ngx_lua 模块实现了第一个内建于 Lua 的正则匹配接口 ngx.re.match() 函数：http://t.cn/aEk7kx 该特性已经包含在 ngx_lua v0.2.1rc11 和 ngx_openresty 1.0.5.1rc1 中。这仅仅是一个开始，后面我还将实现 ngx.re.gmatch(), ngx.re.sub(), 以及 ngx.re.gsub() 等函数 :) 正则可以带来魔法！  
微博位置: 无
发布时间: 2011-08-17 00:18
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2237:我刚刚发布了 ngx_openresty 1.0.5.0 正式版，包含了过去一周的所有更新：http://t.cn/aCdPzo 这是第一个基于 nginx 1.0.5 核心的 openresty 正式版发布。欢迎大家及时反馈 :)  
微博位置: 无
发布时间: 2011-08-16 17:30
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2238:我原来在雅虎的一位老大告诉我他最近一直在背 GRE 单词，为的是提高他的代码的可读性。想来，给变量、函数、模块等东西起名字，确实是最困难的事情之一 :) 佩服啊。。。  
微博位置: 无
发布时间: 2011-08-15 21:47
点赞数: 0   转发数: 14   评论数: 4
发布工具: 微博 weibo.com

2239:今天我为 ngx_set_misc 模块也创建了一个 wiki 页面：http://t.cn/aEHQ9D 比原先的 README 看起来严肃多了，呵呵。也难怪原先有用户向我反映说，ngx_set_misc 感觉像是一个做了一半的项目（我当时很生气地回应说我们已经在生产上稳定应用了一年多了） :)  
微博位置: 无
发布时间: 2011-08-15 21:42
点赞数: 1   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2240:Github 会自动识别和格式化渲染仓库根目录上的 README.markdown 文件，我刚用我的 wiki2markdown.pl 脚本把几个有 wiki 页的 Nginx 模块的 wiki 源转换为 markdown 格式，这样这些模块的 GitHub 主页上也有漂亮的格式化 README 了，呵呵。比如 ngx_echo 模块的 github 首页：http://t.cn/aE0E7s :D  
微博位置: 无
发布时间: 2011-08-15 12:12
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2241:我又用Perl写了一个wiki2markdown.pl脚本，可以把 wiki 格式转换为markdown格式。这样，以后我们就直接编辑 Nginx Wiki 上的文档，然后再同步到git仓库里的README和README.markdown文件。从wiki生成纯文本格式是利用wiki2pod.pl和pod2text工具来完成的。这些脚本都在这个项目里：http://t.cn/aRMCTH  
微博位置: 无
发布时间: 2011-08-15 09:20
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

2242:刚刚我把 ngx_lua 的文档迁移到了 nginx wiki 网站上：http://t.cn/aESj6Y 看起来好看多了，有章节目录，语法高亮，还有内部互链。写了一个不到 40 行的 Perl 5 脚本，完成从 markdown 格式到 wiki 格式的转换。这个脚本写完之后看起来像是密码：http://t.cn/aESj6j 写得时候则非常爽 :)  
微博位置: 无
发布时间: 2011-08-14 19:30
点赞数: 0   转发数: 15   评论数: 9
发布工具: 微博 weibo.com

2243:Lua自身的正则表达式功能非常有限，所以Lua程序员多使用 Lrexlib 这样的第三方库。但我觉得 Lrexlib 有些重，而 nginx 核心中已经为 PCRE 正则库封装了一个 API，所以在 ngx_lua 模块中直接暴露这个接口还是有意义的。这里是我设计的一个草案：http://t.cn/aEiCcB 参考了 Lrexlib 和 JS 的正则接口。  
微博位置: 无
发布时间: 2011-08-14 12:24
点赞数: 1   转发数: 3   评论数: 12
发布工具: 微博 weibo.com

2244:今晚和媳妇儿一起漫步闽江江畔。习习凉风，朗朗夜空。  显示地图 原图 
微博位置: 无
发布时间: 2011-08-13 21:11
点赞数: 0   转发数: 1   评论数: 7
发布工具: S60客户端

2245:在运行于ngx_lua之上的Lua应用中，各请求之间的基本状态隔离是通过Lua协程来完成的，但因为Lua VM是全局共享的，所以加载的外部Lua模块的包变量都是所有请求共享的。为了方便存取当前请求的上下文数据，欧远宁同学建议引入 ngx.ctx 结构，该结构的生命期和当前请求绑定，同时每个请求都有自己的副本。  
微博位置: 无
发布时间: 2011-08-13 17:04
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

2246:Nginx 的请求体结构支持让第三方模块注册自己的 cleanup 回调函数，类似 C++ 类的析构函数。不过，nginx 子请求的 cleanup 回调并不会在子请求结束时立即调用，而是会推迟到主请求结束时再统一调用。对于一些需要及时释放内存的场合，还是得自己在子请求结束时显式调用 cleanup 函数的 :)  
微博位置: 无
发布时间: 2011-08-13 16:16
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2247:我开始在 ngx_lua 应用这样一种调试输出策略：对于关键代码路径上的重要事件，使用nginx自己的 ngx_log_debugN 宏来输出，而对于更细粒度的，使用我自己的 ddebug.h 头文件中的 dd 宏直接打到 stderr. 先前，我图方便，只使用我的 dd 宏，结果不少用户写信抱怨说不知道如何启用 dd 输出：确实不友好。  
微博位置: 无
发布时间: 2011-08-13 15:34
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2248:今天一哥们把我在雅虎时开发的 VDOM WebKit 服务器又给倒腾出来跑了，很是欣慰：http://t.cn/aEzgmB 和 http://t.cn/aEzgmr 有时候在想，自己从前铺了很多摊子，若把其中的任一样都继续做深做细做精致，该是多么幸福的事情呀。人这一生确实不该总是一个劲儿地铺摊子。  
微博位置: 无
发布时间: 2011-08-12 17:01
点赞数: 0   转发数: 5   评论数: 3
发布工具: 微博 weibo.com

2249:刚才几小时的光景，我又为 ngx_lua 添加了 ngx.req.get_post_args()函数，现在在 lua_need_request_body 启用的时候，可以直接拿到解析好的POST请求参数列表了。在@定球呀球 的一再要求下，我把 ngx.req.get_query_args() 更名为更短的ngx.req.get_uri_args(). 此更动已包含在最新的 rc 发布中 :D  
微博位置: 无
发布时间: 2011-08-12 16:51
点赞数: 1   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2250:我刚刚为 ngx_lua 实现了 ngx.req.get_query_args() 方法，这样在 Lua 中就可以直接调用解析好的 URL 参数了。目前的 C 实现支持多值参数和无值参数。细节请见 ngx_lua 的文档：http://t.cn/hgnIt1 多谢 Bertrand Mansion 的提议。此更动已包含在 ngx_lua v0.2.1rc5 和 ngx_openresty 1.0.5.0rc4 中  
微博位置: 无
发布时间: 2011-08-12 09:53
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2251:在刚刚发布的 ngx_openresty 1.0.5.0rc3 中，我包含并默认启用了 lua-redis-parser 库，在各个操作系统上都已经测试过了：http://t.cn/aCdPzo lua-redis-parser 库用来解析 redis 原始的响应体，并提供了工具函数构造 redis 原始请求串。它经常和 ngx_redis2 模块一起使用：http://t.cn/aRm6ez  
微博位置: 无
发布时间: 2011-08-11 10:16
点赞数: 0   转发数: 8   评论数: 0
发布工具: 微博 weibo.com

2252:ngx_openresty 的 ./configure 脚本其实也有一个回归测试集：http://t.cn/aRQjzM 我有意引入了 --dry-run 选项，这样 ./configure 脚本就只打印它要执行的命令，而不实际执行。这个选项名是摸拟 Gnu make. 另外，还有一个 --platform 选项，可强制指定当前操作系统. 软件也须设计成“可测试的” ;)  
微博位置: 无
发布时间: 2011-08-10 21:06
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2253:今天我在 ngx_openresty 1.0.5.0rc2 中打包并默认启用了 lua-cjson 这个 lua 库，包含了作者给我的补丁，已经在 Linux i386, Linux x86_64, FreeBSD 8.2, 以及 Solaris 11 上分别用标准 Lua 和 LuaJIT 进行过了简单测试。在 Solaris 和 Mac OS X 上花的气力最多。明天我再打包 lua-redis-parser 库 :D  
微博位置: 无
发布时间: 2011-08-10 20:56
点赞数: 1   转发数: 11   评论数: 5
发布工具: 微博 weibo.com

2254:Solaris 11 官方源里的 gcc 貌似不认识 isinf 函数，很是奇怪，我须传入 -D'isinf(x)=0' 选项给 gcc，才能顺利地让 lua-cjson 在 Solaris 上编译和运行。MySQL 也曾经在这里中过招：http://t.cn/aRjGex 呵呵。  
微博位置: 无
发布时间: 2011-08-10 14:54
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

2255:Solaris 11 在我的 VirtualBox 里慢得像爬。。。相比其他几个虚机（WinXP, Archlinux, 和 FreeBSD）明显慢了很多。作为二者共同的主人，Oracle 就不能针对它做些优化么？  
微博位置: 无
发布时间: 2011-08-10 12:24
点赞数: 0   转发数: 0   评论数: 11
发布工具: 微博 weibo.com

2256:昨天我用@定球呀球 的一个经典用例，发现 lua-cjson 在编码数字字符串 key 的 table 时会出错。lua-cjson 的作者非常热情，在短短 15 个小时内，就回复了我的邮件并且提供了一个补丁。这个用例也曾经让 lua-yajl 疯狂，直到 lua-yajl 的作者按我的补丁修正了此问题。良好的技术支持真的是无比重要呀。  
微博位置: 无
发布时间: 2011-08-10 09:49
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2257:lua-cjson 库很 NB 啊，我用一个来自真实世界的 389 KB 的 JSON 串作基准测试，结果发现它比 lua-yajl 库在解析操作上快了 67%，在序列化操作上则快了 49%. 赞啊. 大家可以考虑在生产上替换哈：http://t.cn/aRaNqV 比 perl 的 JSON::XS 模块都快了 46% 呢！@定球啊球 @0597虾 @珣新_去哪儿  
微博位置: 无
发布时间: 2011-08-09 17:43
点赞数: 0   转发数: 8   评论数: 8
发布工具: 微博 weibo.com

2258:我刚刚发布了 ngx_openresty 1.0.4.2 正式版，包含了最近一周多以内的所有改进和修复：http://t.cn/aCdPzo 同时发布的还有开发版 1.0.5.0rc1，和 1.0.4.2 相比，唯一的区别就是升级了 nginx 核心到最新的稳定版 1.0.5 :) 感谢所有的用户！:D  
微博位置: 无
发布时间: 2011-08-09 15:18
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2259:在用 PostgreSQL 9.0.4 运行 ngx_postgres 模块的测试集时，注意到，和 8.4.x 不同的是，9.x 系列会为 select 查询返回非 0 值的 rows affected 字段，好是奇怪。比如查询“select 1+2”的结果集，rows affected 字段对于 Pg 9 就是 1，而在 8.4.x 之前都是 0. 因为这个缘故，测试集失败了一大片。。汗  
微博位置: 无
发布时间: 2011-08-09 14:26
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2260:今天无意中注意到最近的 nginx 1.0.x 中已经直接包含了 md5 编解码的完整实现，看来 Igor 同学要把 0 依赖项运动进行到底了，呵呵。openssl/libcrypto 和古老的 md5.h 那一垛东西在各种 OS 中的各种版本整起来也确实纠结。。。  
微博位置: 无
发布时间: 2011-08-08 21:50
点赞数: 0   转发数: 2   评论数: 0
发布工具: 微博 weibo.com

2261:Solaris 11 上的 install 脚本好弱，都不支持为安装目标自动创建上级目录。于是我用 Perl 写了一个 install 脚本，包含在了 ngx_openresty 1.0.4.2rc13 中：http://t.cn/aCdPzo 现在 OpenResty 可以启用 LuaJIT 在最新的 Solaris 11 上构造和运行了！当然，需要先安装 gcc-3 和 SUNWlibm 这两个包。  
微博位置: 无
发布时间: 2011-08-08 16:07
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2262:FreeBSD 默认的 make 是 bsdmake，它的 jobserver 功能，即指定 -jN 选项时，连规则内部的命令之间都会并行执行，相当夸张，所以命令中如果有 cd 命令，一定要尽量使用绝对路径，否则命令之间会相互干扰。我刚刚修正了 ngx_openresty 生成的 Makefile，现在在 FreeBSD 上 make -j2 也可以正确工作了。  
微博位置: 无
发布时间: 2011-08-08 09:33
点赞数: 0   转发数: 4   评论数: 1
发布工具: 微博 weibo.com

2263:今天干活儿的时候，耳边都是王雅梦的《森林之梦》，感觉棒极了：http://t.cn/hkrzh 多谢@金埔 在两年前把我引入古典吉它的美妙世界 [呵呵]  
微博位置: 无
发布时间: 2011-08-07 22:08
点赞数: 0   转发数: 4   评论数: 5
发布工具: 微博 weibo.com

2264:LuaRocks 是一个用于安装和布署第三方 Lua 模块的工具，相当于 Lua 世界的 cpanm. 之前一直有用户报告 ngx_lua 里使用 LuaRocks 会有问题（http://t.cn/aRhJ9Q ），但我今天用最新的各组件，在 Linux 和 Mac OS X 上都没遇到问题。我把今儿的经历写成了一篇教程，和大家分享：http://t.cn/aRhJ98  
微博位置: 无
发布时间: 2011-08-07 19:11
点赞数: 0   转发数: 9   评论数: 4
发布工具: 微博 weibo.com

2265:Solaris 11 官网直接提供了 VirtualBox 可以导入的镜像，实在是太方便了，连 guest additions 驱动都预装好了 :D 启动后直接进入 GNOME 桌面，呵呵。  
微博位置: 无
发布时间: 2011-08-06 23:34
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2266:刚刚在新华书店看到一本OpenSolaris的书,顿时萌生了回去用VirtualBox虚一个Solaris的想法。以后OpenResty的官方兼容列表就是Linux,MacOSX,FreeBSD以及OpenSolaris,呵呵。  
微博位置: 无
发布时间: 2011-08-06 16:46
点赞数: 0   转发数: 2   评论数: 7
发布工具: 短信

2267:昨天在雅虎通上和晓哲老师讨论技术时，我媳妇儿在旁边扫了一眼，感叹说：“哇，晓哲老师还会说‘靠’啊。。。”原来晓哲老师在她心目中一直是温文尔雅的形象~  显示地图 
微博位置: 无
发布时间: 2011-08-06 15:48
点赞数: 0   转发数: 11   评论数: 7
发布工具: S60客户端

2268:在最新的ngx_lua v0.2.1rc3中，我修复了一个存在已久的bug，即在lua_need_request_body开启，同时使用了access_by_lua或者rewrite_by_lua配置指令的时候，proxy或者fastcgi到后端服务的POST/PUT请求经常会触发“zero size buf”的alert错误。原来我把NGX_DONE错写成了NGX_DECLINED.多谢@珣新_去哪儿  
微博位置: 无
发布时间: 2011-08-05 22:54
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

2269:我在刚刚发布的 ngx_openresty 1.0.4.2rc5 中为 ./configure 脚本添加了新选项 --with-no-pool-patch，在启用该选项时，ngx_openresty 会自动为 nginx 核心应用@0597虾 编写的 no pool 补丁，即完全禁用 nginx 的内存 pool 设施，从而方便 valgrind memcheck 这样的工具发现更多的内存非法读写的 bug.  
微博位置: 无
发布时间: 2011-08-05 10:02
点赞数: 0   转发数: 1   评论数: 3
发布工具: 微博 weibo.com

2270:我刚刚在ngx_openresty 1.0.4.2rc4中为 ./configure 脚本添加了 --with-libpq=DIR 选项，这样，当 Pg 安装在某个特殊路径，例如/opt/postgres/下的时候，就可以强制 ngx_postgres 模块使用该位置下的 libpq 库，同时自动为 nginx 设置RPATH头，以便运行时也能使用正确路径下的动态链接库。多谢@0597虾  
微博位置: 无
发布时间: 2011-08-04 20:39
点赞数: 0   转发数: 2   评论数: 4
发布工具: 微博 weibo.com

2271:LuaJIT 2.0 相比标准 Lua 5 解释器，不仅在执行速度上有很大提升（在真实的量子统计系统中，我测量出平均一倍的整体提升率），而且也可以有效地降底内存的消耗。@0597虾 基于 ngx_lua 构建的生产系统在切换到 LuaJIT 后观察到了内存占用的下降，这和我们原先在量子统计里作切换时观察到的效果一致 :)  
微博位置: 无
发布时间: 2011-08-04 15:44
点赞数: 1   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2272:利用 redis pipelining 特性确实可以极大的提升 web 应用的性能，特别是密集访问 redis 的场景。@0597虾 基于 ngx_redis2 + ngx_lua 构建的接口在使用了 pipelining 之后，总延时从原来的 120ms 降到 20ms，“快了 6 倍”。她先前在我的建议下，使用 LuaProfiler 定位到瓶颈在高频度的 redis 请求上。  
微博位置: 无
发布时间: 2011-08-04 15:40
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2273:Valgrind 在 FreeBSD 上跑得比在 Mac OS X 上溜多了，利用其 memcheck 工具运行 Nginx 不像在 Mac 上时那样还需要给 Nginx 打补丁。很赞啊，ngx_drizzle 模块的测试集在 FreeBSD i386 上顺利通过了 memcheck 模式 :D  
微博位置: 无
发布时间: 2011-08-04 14:44
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2274:刚刚在 ngx_openresty 1.0.4.2rc2 中修复了 1.0.4.1 中的一个小衰退，即启用 --with-http_iconv_module 选项，会报“ngx_devel_kit is required to build ngx_iconv; please put it before ngx_iconv”的错误，多谢@有点儿意思 的报告 :D  
微博位置: 无
发布时间: 2011-08-04 14:10
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2275:Nginx 总使用64位 off_t，而在i386系统上，gcc 的 off_t 默认是32位，因此须总是先包含 nginx 的头文件，否则在32位系统上会错误地引入 32 位 off_t. 网上这篇东西详细介绍了此问题：http://t.cn/a8GlqR ngx_drizzle 模块因此问题，在 32 位系统上完全不能工作，多谢@魏世江 和@stefanli 的报告。  
微博位置: 无
发布时间: 2011-08-04 08:21
点赞数: 0   转发数: 4   评论数: 6
发布工具: 微博 weibo.com

2276:libdrizzle 很脑残的一个地方是用纠结的 bool 类型作为其 API 的一部分，而 nginx 脑残的是为了绕过 perl 5 解释器里的 bool 定义，直接 #undef bool. 现在我把 libdrizzle 的头文件放在 nginx 头文件之前会在 32 位系统上出现 off_t 大小不一致问题；而如果调换顺序，又会在 Mac 上遭遇 bool 未定义。  
微博位置: 无
发布时间: 2011-08-03 22:36
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2277:在 FreeBSD 上想从 ports 安装 vim，结果不一小心从源码编了一回 GTK，因为它是 vim 的一依赖项。。。人生啊。。。  
微博位置: 无
发布时间: 2011-08-03 16:07
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2278:晓哲老师一直敦促我着手实现ngx_lua模块的“cosocket API”。cosocket这个术语是我发明的,但概念是晓哲提出的,即为Lua实现一组同步的Socket API,但底层却是透明非阻塞的,且向上可以任意并行组合。这是今年高优先级的一件事情。  
微博位置: 无
发布时间: 2011-08-02 19:55
点赞数: 1   转发数: 2   评论数: 12
发布工具: 短信

2279:这两天我没有写一行代码,感觉浑身不自在。。昨晚在飞机上拿纸笔画了一个架构图,心里稍微好受了一些。。晚上下飞机后一定要补上几行代码!哈哈!拳不离手,曲不离口啊,代码也是越写越有能耐。  
微博位置: 无
发布时间: 2011-08-02 19:18
点赞数: 1   转发数: 1   评论数: 3
发布工具: 短信

2280:上海地铁的自动售票机少找了我十块钱,投诉无果。能靠谱点么?  
微博位置: 无
发布时间: 2011-08-02 15:54
点赞数: 0   转发数: 1   评论数: 10
发布工具: 短信

2281:上海地铁10号线今天抽风,坐了快一个钟头了,才走出去五站地,是高铁事故给闹的么?早知道我该打车的。。。  
微博位置: 无
发布时间: 2011-08-02 11:18
点赞数: 0   转发数: 0   评论数: 7
发布工具: 短信

2282:我和我媳妇儿在福州前后丢了两回东西,都由好心人物归原主。向福州人民致敬!呵呵。  
微博位置: 无
发布时间: 2011-08-01 23:43
点赞数: 1   转发数: 1   评论数: 4
发布工具: 短信

2283:我经常会被批评为“重新发明轮子”,但我坚信,连轮子都没亲手造过的技师,也很难造出什么好车子。当然,那些抵制开源、以所谓“自主知识产权”为名义重新发明钉子的,自然就另当别论了。  
微博位置: 无
发布时间: 2011-08-01 21:32
点赞数: 0   转发数: 25   评论数: 17
发布工具: 短信

2284:Valery同学的ngx_eval模块依赖于Nginx核心的所谓subrequest in memory特性一直让我感觉很不爽,一来这个特性限制多多,需要目标模块的显式支持,二来这个特性bug多多。我一直想重写它,虽然Lua模块完全可以实现它的功能。  
微博位置: 无
发布时间: 2011-08-01 21:21
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2285:只要从正则表达式生成DFA,避免回溯,为ngx_substitude就可以流式地在nginx输出过滤器中进行正则替换操作。对多个正则替换进行DFA合并优化就更强大了,呵呵。@120斤的大青蛙 有兴趣添加这样的功能不?我一直想提供补丁来着,赫赫。  
微博位置: 无
发布时间: 2011-08-01 21:12
点赞数: 0   转发数: 2   评论数: 2
发布工具: 短信

2286:Redisql 的作者曾在给我的一封邮件中说，写 C 代码写多了容易受内伤，所以每周他都会花几日出城游玩一回，以放松身心。好在我有我媳妇儿每晚准点拉我出门去散步，而且经常会把福州城里的于山给爬一遍。昨晚她又拉我夜游近 5 公里的水滨栈道，我犹豫了。。。回想从前在北京开辟一条散步路线竟是如此困难  
微博位置: 无
发布时间: 2011-08-01 10:36
点赞数: 1   转发数: 3   评论数: 9
发布工具: 微博 weibo.com

2287:刚才在 FreeBSD 8.2 官方的 ports 里看到我们的 ngx_echo, ngx_headers_more, 和 ngx_memc 都在 www/nginx 中包含了，很开心。据该 port 的维护者称，更新版本的 FreeBSD port 已经包含了我们的大部分 nginx 模块， 包括 ngx_lua 和 ngx_redis2 在内 :D  
微博位置: 无
发布时间: 2011-07-31 00:06
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

2288:发现 WinXP 上默认的动态端口的范围好小啊，才 1025 ~ 5000 这区区几千个。在实现 WinSock C 客户端高频度访问 Erlang 服务的应用时，使用短连接方式，不一会儿就可以把动态端口耗尽。所以只能尽量设计成 keep-alive 长连接的形式了，否则就得自己去改 Windows 注册表 :(  
微博位置: 无
发布时间: 2011-07-30 23:17
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2289:在 VirtualBox 里虚了一个最新的 FreeBSD 8.2，配置好 DHCP 之后可以顺利连上网络，但发现默认安装里连 bash, sudo 和 vim 都没有，只好自己用 FreeBSD ports 从源码一个一个依赖项地编译，很有用 cpan 工具装 Perl 模块的感觉。配置好之后，我再试试 ngx_openresty 在这个系统上的可移植性，嘿嘿。  
微博位置: 无
发布时间: 2011-07-30 16:35
点赞数: 0   转发数: 2   评论数: 13
发布工具: 微博 weibo.com

2290:刚刚发布了 ngx_openresty 1.0.4.1: http://t.cn/aCdPzo 包含了过去半个月的各种更新和修复。特别地，我们把 ngx_postgres 模块的版本提升到 0.9rc1，从而可以和 Pg 9.0.x 的 libpq 库一起工作了 :) 感谢 @姜大炮 @Lance @珣新_去哪儿 @0597虾 等众多朋友的帮助与支持 :D  
微博位置: 无
发布时间: 2011-07-30 10:21
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2291:这几日在 WinXP 虚机上用 MinGW gcc 编写了一些 WinSock 客户端代码，放在一个 DLL 里面，由 MT4 外汇交易客户端调用。发现微软的 WinSock API 在命名方式上相当之混乱，早期模仿 bsd socket，搞了一堆纯小写命名的函数，如 setsockopt 之流，而后又按 Windows API 风格搞了 WSACleanup 这样的东西。晕  
微博位置: 无
发布时间: 2011-07-30 09:50
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2292:早上回复 nginx 邮件列表的一个主题，编写了一个小示例，以演示如何编写 Lua 代码，在 nginx 中根据当前请求的 User-Agent 请求头和 redis 中的记录，动态选择 ngx_proxy 模块指向的 HTTP 后端服务器：http://t.cn/aj0GhL  这里为了简单起见，没有使用 lua-redis-parser 库 :)  
微博位置: 无
发布时间: 2011-07-27 15:13
点赞数: 0   转发数: 8   评论数: 7
发布工具: 微博 weibo.com

2293:当我们有一个统一的 build system 时，就可以做许多有趣的事情。这两天我让 ngx_openresty 的 configure 脚本的 --with-debug 选项可以影响到 LuaJIT 的构造，即会启用 gcc 调试符号来编译 LuaJIT. 多谢好徒弟@0597虾 的提醒。后面我打算再引入 --with-no-pool-patch 选项，以自动启用 no-pool 补丁。  
微博位置: 无
发布时间: 2011-07-27 09:41
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2294:昨晚，在 David Yu 的提议下，我为 ngx_set_misc 模块添加了 set_misc_base32_padding 配置指令，在该指令置为 off 时（默认为 on），可以禁止 base32 编码过程中对余下字节的等号补齐的行为。这可以有效节约带宽，比如“44======”现在可以精简为“44”。我已提交的补丁在这里：http://t.cn/ajSUEK  
微博位置: 无
发布时间: 2011-07-27 09:04
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2295:一早看到了 Maxim Dounin 在 nginx-devel 邮件列表中的重量级邮件，题为：“upstream keepalive: call for testing”：http://t.cn/ajafHq  这个补丁让 ngx_proxy, ngx_fastcgi 等模块都比较完整地支持长连接了，特别地，ngx_proxy 可以 HTTP 1.1 协议和后端通信，包括上游响应体的 chunked 支持。  
微博位置: 无
发布时间: 2011-07-27 07:13
点赞数: 0   转发数: 19   评论数: 7
发布工具: 微博 weibo.com

2296:新款的 macbook air 看得我真眼馋，早知道就忍半年再买了，唉。。。 http://t.cn/h6ZaoY  
微博位置: 无
发布时间: 2011-07-26 17:54
点赞数: 0   转发数: 2   评论数: 5
发布工具: 微博 weibo.com

2297:刚刚把 openresty.org 和 agentzh.org 等域名都启用了 CloudFlare 作为 CDN，希望能对速度提升有所帮助。同时我还在 TiddlyWiki 中启用了 Google Analytics 服务，而 CloudFlare 也提供了流量统计服务，后面正好可以比较比较 :)  
微博位置: 无
发布时间: 2011-07-24 13:30
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2298:拼串操作是高代价的。Erlang 中大部分 IO 操作函数都直接接受所谓的 iolist() 类型的参数，即字符串片段的列表（或者任意嵌套的列表的列表），从而不用程序员自己去拼串，而由底层直接取数据。我有意让 ngx_lua 的 ngx.say/ngx.print 函数也支持字符串片段的 table 作为输入，和模版引擎可以直接对接。  
微博位置: 无
发布时间: 2011-07-23 22:52
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2299:这两天我给 ngx_lua 模块所做的另一个新功能是添加了 LUA_DEFAULT_PATH 和 LUA_DEFAULT_CPATH 这两个 C 宏，以定制 Lua 模块的默认搜索路径的列表。这个功能将为 ngx_openresty 未来打包 lua-cjson, lua-redis-parser 这些第三方的 Lua 程序库铺平道路！我希望未来用户需要安装的依赖项越来越少，呵呵  
微博位置: 无
发布时间: 2011-07-22 12:51
点赞数: 0   转发数: 3   评论数: 2
发布工具: 微博 weibo.com

2300:这两天抽空融合了 James Hurst 同学提供的针对 ngx_lua 模块的一个小补丁，新增了 ngx.parse_http_time() 这个 Lua 接口，以暴露 nginx 核心中的 ngx_http_parse_time 这个 C 函数给 Lua 程序员。应用补丁的过程还是充满乐趣的，不用太动脑筋，嘿嘿！  
微博位置: 无
发布时间: 2011-07-22 12:46
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2301:刚刚在福州的新家发布了 ngx_redis2 模块的 v0.07 版：http://t.cn/alAPZ6  这是该模块的第一个公开的正式版发布 :)  
微博位置: 无
发布时间: 2011-07-22 12:42
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2302:福州电信的10兆宽带还挺给力，axel -n10 可以达到 1.1 MB/s 下载速率，访问大部分国内外的网站也比原先在公司内网快多了 :D 刚刚在 macbook air 上用 axel 测试的时候，装宽带的师傅好奇地问我“这是什么东东？”，我答是命令行版的 flashget.  
微博位置: 无
发布时间: 2011-07-21 16:02
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2303:@ 福州  原图 
微博位置: 无
发布时间: 2011-07-20 19:21
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

2304:代码写的尽可能地漂亮是对的,但决不能取代文档的地位。试想mysql和apache这样的东西没有文档,那大家都得去读几十万乃至几百万行高度优化了的C代码,估计也没人去用了。同时出于效率方面的考虑,代码也不能保持那么漂亮,再有代码洁癖的人经常也会妥协。  
微博位置: 无
发布时间: 2011-07-20 10:23
点赞数: 0   转发数: 1   评论数: 2
发布工具: 短信

2305:几周前我在上班的时候,无意中听到坐在对面的 @chaoslawful 老师在嘱咐后端一位新人“要像春儿那样,从文档自动生成你的程序。。”我听了,顿时无限欣慰。  
微博位置: 无
发布时间: 2011-07-19 21:41
点赞数: 0   转发数: 1   评论数: 2
发布工具: 短信

2306:自从javadoc问世以来,很多人热衷于从程序生成文档,殊不知这样的文档少有人类可读的,即使配备了最漂亮的样式和模版也不济。我觉得未来比较有前途的做法是首先把文档写清楚了,然后从文档自动生成程序。。  
微博位置: 无
发布时间: 2011-07-19 21:08
点赞数: 0   转发数: 20   评论数: 26
发布工具: 短信

2307:这两天我抽空在学习parrot虚拟机的PIR语言,发现这个“低级语言”也已经相当“高级”了。熟悉了这个下面就可以阅读PCT,PGE,NQP这些上层建筑的源码了。我一直希望NQP能成为我们OpenResty的标配语言之一。  
微博位置: 无
发布时间: 2011-07-19 20:42
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2308:坐在前往福州的火车上,刚刚渡过黄河。夜幕降临,心潮澎湃。  
微博位置: 无
发布时间: 2011-07-19 19:14
点赞数: 0   转发数: 1   评论数: 10
发布工具: 短信

2309:面向对象的一些要素其实也可以在C编程中得到应用,即使C语言本身没有提供直接的OO支持。利用结构体和函数指针可以巧妙地模拟类、继承以及多态。Apache和Nginx源码中都有不少这样的例子。今儿看到有人辱骂C程序员不懂OO,真是无知。  
微博位置: 无
发布时间: 2011-07-19 18:37
点赞数: 0   转发数: 18   评论数: 28
发布工具: 短信

2310:Larry Wall下了很大的决心在Perl 6正则中让“|”默认是最长子串语义,类似Lex和Ragel中的那样。这样我们就有机会在Perl 6编译器中引入高效的DFA实现,否则Perl正则从时间复杂度上看就不会跑得太快。  
微博位置: 无
发布时间: 2011-07-18 11:42
点赞数: 0   转发数: 1   评论数: 4
发布工具: 短信

2311:这几日都在忙于收拾东西，待下周到达福州之后，我再发布 ngx_redis2 模块的一个新的正式版，同时释出 ngx_openresty 1.0.4.1 :)  
微博位置: 无
发布时间: 2011-07-17 20:18
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

2312:从最基本的东西出发,构造出一个比较复杂的业务系统,充满了乐趣。可惜现在的程序员越来越难于有这样的机会了,呵呵。  
微博位置: 无
发布时间: 2011-07-15 21:40
点赞数: 0   转发数: 5   评论数: 3
发布工具: 短信

2313:昨天和一哥们聊天,很震惊对方竟怀疑JVM的字节码的执行效率,不过转念一想也不觉奇怪,毕竟外面有那么多堆了一层又一层的过度设计的Java应用开发框架,让不少人产生了JVM很慢的错觉也正常。即便是C语言也经不起那么堆叠呀。当然,JVM的内存占用则是另外一回事了。  
微博位置: 无
发布时间: 2011-07-15 09:08
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2314:在公司的倒数第二天就发现用淘宝花名登录不了旺旺了，真是效率呀，呵呵。。。  
微博位置: 无
发布时间: 2011-07-14 17:49
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2315:我将我的 agentzh.com 域名指向了 CloudFlare 提供的免费的 CDN 服务，大家有兴趣的话帮我测试一下在你的网络中的速度，特别是和 agentzh.org 的比较（后者还是直接指向我的国外主机）。可以拿 ngx_openresty 的这个 tarball 来测试：http://t.cn/aOxv1I  在我公司内网里使用 CDN 快了整整 2 倍 :D  
微博位置: 无
发布时间: 2011-07-14 16:46
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2316:Drizzle社区让人无语啊,我的bug报告和补丁提交都是石沉大海,无论是邮件,ticket还是irc消息都从未有过回音。不靠谱啊。@chaoslawful 貌似运气倒是比我好一点点。日后搞RDBMS开发,我想我应该会去混Pg社区的,呵呵。  
微博位置: 无
发布时间: 2011-07-14 10:41
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2317:刚刚和@珣新_去哪儿 讨论给 ngx_set_misc 模块添加一条 let 配置指令，这样我们可以直接这样写：let $a = 32 if $b ~ 'regex' or $c = 56; 这样许多简单的配置需求也不必引入 Lua 了 :)  
微博位置: 无
发布时间: 2011-07-13 19:26
点赞数: 0   转发数: 2   评论数: 3
发布工具: 微博 weibo.com

2318:今天 ngx_openresty 的一个国内用户说我们各个 nginx 模块的测试集对他来说就是最好的文档，因为他英语不好，看不懂我们的英文文档。当我说后面多写些中文教程时，他说有这么详尽和清晰的测试用例，其实也不一定需要了，哈哈！感谢 Test::Base 的数据驱动的测试编写方式！“用例即文档”真赞！  
微博位置: 无
发布时间: 2011-07-13 17:58
点赞数: 0   转发数: 6   评论数: 3
发布工具: 微博 weibo.com

2319:“谎言是罪恶，次于杀人抢劫强奸但属同档。”多谢我的佛学和古语言学师傅 hmss 的教诲。。。警钟长鸣。。。 http://t.cn/aOzB8D  
微博位置: 无
发布时间: 2011-07-13 12:49
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2320:前几日看朱德庸的漫画，就很欣赏书中引用的那句“幸福是做减法，而不是做加法”。今天终于可以把我未来一二个月的一件大任务给减掉了，耶！  
微博位置: 无
发布时间: 2011-07-13 11:36
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2321:在过去的近两年时间里,ngx_openresty项目的工作重点一直是“make things work; make things fast”,所以目前还需要用户拥有nginx配置方面的较多经验。未来我们的重点将慢慢变为“make things easy”  
微博位置: 无
发布时间: 2011-07-12 22:34
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2322:我刚刚发布了 ngx_openresty 1.0.4.0 版：http://t.cn/aCdPzo  这是第一个基于 nginx 1.0.x 核心的 openresty 发布，同时包含了最近几天的 bug 修复和各种改进 :)  
微博位置: 无
发布时间: 2011-07-12 18:26
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2323:英语听力还是不好，今天在 gtalk video 上和一个美国的律师小姑娘聊天还是跟不上趟。。。说话就像打击关枪。。。呵呵  
微博位置: 无
发布时间: 2011-07-12 10:02
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2324:事件接口的边沿触发(ET)确实易出错。我们在开发ngx_postgres模块的时候,就被libpq库的一个小bug给搞了。在它的poll调用的一种状态下仅仅设置了一下sock选项而没有去写缓冲区,于是当前可写事件就被白白浪费,当前请求就永远挂起直到超时了。幸好有办法可以绕过。。  
微博位置: 无
发布时间: 2011-07-11 20:11
点赞数: 0   转发数: 5   评论数: 5
发布工具: Kjava客户端

2325:刚刚又修正了 ngx_echo 模块中的 echo_after_body 的一个 bug：在网络不好时，会发生数据截断，就因为我在输出过滤器里只检查了不是 NGX_OK 的情形，而事实上，下游输出过滤器还会返回 NGX_AGAIN. 这一块是我 09 年作为初学者写的 nginx 相关的代码，确实不严谨呀，多谢@定球呀球 在一个多月前的报告！  
微博位置: 无
发布时间: 2011-07-11 17:31
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2326:认识@chaoslawful 之前，我搞开发遇见他人的bug都是习惯性地绕着走；认识@chaoslawful 之后，我也学他一样 gdb, strace, valgrind 啥都上地一顿深挖，哈哈！真是痛快。。。  原图 
微博位置: 无
发布时间: 2011-07-11 16:14
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2327:ngx_srcache 模块 v0.12 版刚刚发布：http://t.cn/a0NN0c   从前我也为 apache 的 mod_cache 实现过 memcached 驱动，但却是阻塞的，而我这个模块在角色上类似 mod_cache. 虽然现在功能集还不完整，但并不影响我们在许多场景中用于生产。有用户报告说 ngx_srcache + ngx_memc 比他用 Lua 做缓存快 30%.  
微博位置: 无
发布时间: 2011-07-11 13:14
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2328:要推动代码review就须努力让此过程变得容易甚至舒心。记得我去年邀请我们的数据仓库工程师review我们的数据接口代码时,他开始还有些排斥和畏难,但当他看到我们的LZSQL代码后,立马赞不绝口,反将之视为一种享受,因为LZSQL是专为数据逻辑设计的语言,非常清晰。  
微博位置: 无
发布时间: 2011-07-10 08:17
点赞数: 1   转发数: 2   评论数: 3
发布工具: 短信

2329:不只一次看到有同仁赞美nginx代码之优美。纯粹从代码风格上看,Igor和Maxim在每个空格上的使用都颇有讲究,命名方面也近乎无可挑剔。但从工程上讲,它为性能极致做出了很大牺牲。其核心各部分间的耦合之深,陷阱之多,超出大多数人想象。连作者自己也时常被绕进去。  
微博位置: 无
发布时间: 2011-07-10 07:55
点赞数: 0   转发数: 3   评论数: 5
发布工具: 短信

2330:这个月下旬到达福州这座美丽的榕城以后,我会继续深入推进我们的 ngx_openresty 等众多开源项目,同时打算系统地继续学习工作期间没有机会深入的计算机科学的一些有趣的分支,呵呵。  
微博位置: 无
发布时间: 2011-07-09 10:14
点赞数: 0   转发数: 2   评论数: 11
发布工具: 短信

2331:下周是我在淘宝的最后一周,随后我会和我媳妇儿一起移居福州,过所谓的“田园生活”。在淘宝量子的近两年时光过得很愉快很充实,老大们赋予了我很大的自由度和权限,对我的各项工作给予了很大支持。我非常感激。  
微博位置: 无
发布时间: 2011-07-09 10:04
点赞数: 0   转发数: 26   评论数: 43
发布工具: 短信

2332:今天把先前提到的 nginx 核心在极端条件下的字节随机乱序输出的bug通过一个小测试用例移交给了@chaoslawful 老师诊断。chaoslawful 感叹我终日忙于修bug,根本没时间创新,想来有些无奈,或许这就是做产品和做玩具之间的差别吧。。  
微博位置: 无
发布时间: 2011-07-08 23:46
点赞数: 0   转发数: 0   评论数: 6
发布工具: 短信

2333:刚刚发布了 ngx_openresty 0.8.54.9: http://t.cn/aCdPzo  这次发布包含了过去一周所有的 bug 修复和组件的新版本。这将是我们基于 nginx 0.8.54 核心所做的最后一次 ngx_openresty 发布。下一个发布将基于 nginx 1.0.4 核心 :)  
微博位置: 无
发布时间: 2011-07-08 19:23
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2334:继续发布模块！这一次是 ngx_memc 模块的 v0.12 版：http://t.cn/a0vp5T  现在 memcached 协议中只有 mget 没有实现了，后面我打算为这个模块引入类似 ngx_redis2 那样的用户配置界面（当然，现有的老界面继续兼容），届时 mget 命令就很容易实现了，呵呵。  
微博位置: 无
发布时间: 2011-07-08 17:22
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

2335:刚刚发布了我的 ngx_echo 模块的 v0.36 版，包含了过去 5 个月的各种 bug 修复，多谢@淘你哥 ，@drdrxp ，Marcus Clyne 等同学的 bug 报告和补丁！这里是我发到 nginx 邮件列表的公告：http://t.cn/apsFz6  
微博位置: 无
发布时间: 2011-07-08 16:29
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2336:在 James Hurst 的推动下，ngx_redis2 和 lua-redis-parser 现在可以有限度地支持 redis 的订阅和发布功能了，我在 ngx_redis2 的 README 文档中作了相关说明：http://t.cn/aps0mF  （见 Redis Publish/Subscribe Support 一节）。没想到 redis 的订阅发布功能像 DB 事务那样是有状态的，真是麻烦呀。  
微博位置: 无
发布时间: 2011-07-08 15:54
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2337:今天一大早收到了英国一家公司的 CTO 捐赠到我的 PayPal 帐户的 100 美元，说是算作请我喝啤酒了。他们公司在生产上广泛使用了我的 ngx_memc 和 ngx_srcache 模块作 web 应用的分布式缓存。我邀 @chaoslawful 老师共饮，无奈老师滴酒不沾，遗憾了，哈哈！  
微博位置: 无
发布时间: 2011-07-08 12:42
点赞数: 0   转发数: 11   评论数: 14
发布工具: 微博 weibo.com

2338:今晚和媳妇儿骑单车夜游京城，从慈云寺桥出发，途经大望桥、天安门、西单、复兴门、西直门桥、德胜门、后海、地安门、东四十条、工人体育场、三里屯、甜水园，最终回到起点。历时三个小时，沿途我多在等我媳妇儿赶上。无论如何，媳妇儿确实很强壮，游兴甚至在我以上。尽兴！明早上班我再继续修bug！  原图 
微博位置: 无
发布时间: 2011-07-07 23:47
点赞数: 0   转发数: 0   评论数: 4
发布工具: S60客户端

2339:今天发布了 Test::Nginx 0.16 模块到 CPAN，这是我发给 nginx-devel 邮件列表的公告邮件：http://t.cn/ap31v9  包含了一些重要的改进，比如自动创建用户文件的上级目录，还有当 nginx 因 valgrind 启动缓慢来发生连接被拒时的自动定时重连功能，等等。我们所有 nginx 模块的测试集都是用它驱动的。  
微博位置: 无
发布时间: 2011-07-07 18:12
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2340:archlinux 的软件包和 kernel 的版本总是升级得很激进。。。不得不从 valgrind 的 svn trunk 编了一个最新版，才得以顺利地使用它运行 ngx_lua 的测试集。。。  
微博位置: 无
发布时间: 2011-07-07 17:54
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2341:在刚发布的 ngx_openresty 0.8.54.9rc5 开发者版本中，整合了 Maxim Dounin 同学的一个补丁，现在子请求嵌套调用过深（超过 50 次）时，会给出优雅的出错信息了。官方的 nginx 核心这一块的保护一直有 bug，会直接崩溃。一个月前去哪儿的工程师就曾撞见过这个问题。未来我们会整合 Maxim 的更多补丁。  
微博位置: 无
发布时间: 2011-07-07 17:01
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2342:在虚拟机里调试一个每次都能复现的内存 bug，不想 bug 突然就消失了！而且再也不能复现。。。莫非被宿主机器的磁盘缓存给耍了？从前也遇到过几次类似的情况。。。汗啊，汗。。。  
微博位置: 无
发布时间: 2011-07-07 15:35
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2343:经常发现只要坚信某处有bug,就总能刨出些不相干的bug来。找bug也需要信仰啊。昨晚找echo_location在极端网路条件下的随机字节乱序问题,最后却发现和echo模块毫无关系,但过程中还是发现了echo模块的一些小问题。  
微博位置: 无
发布时间: 2011-07-07 11:14
点赞数: 0   转发数: 1   评论数: 2
发布工具: 短信

2344:发现 ngx_headers_more 模块也有半年没有发布正式版了，于是赶紧发布了一个 v0.15 新版：http://t.cn/appYWP  这个模块目前主要是用户驱动了，也是我们最受欢迎的模块之一：Facebook 曾告诉我他们在生产上也在使用这个模块。一些 Linux 发行版的官方 nginx 包里也默认包含了此模块 :)  
微博位置: 无
发布时间: 2011-07-06 12:21
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

2345:我的 ngx_rds_json v0.11 刚刚发布了：http://t.cn/appVFX  记得一年多以前，因为缓冲区分割过碎且频繁调用系统调用 writev，对于大数据量响应体一度非常低效，后来优化了缓冲区管理之后，就像飞一样了，呵呵。  
微博位置: 无
发布时间: 2011-07-06 11:51
点赞数: 0   转发数: 3   评论数: 0
发布工具: 微博 weibo.com

2346:看到越来越多的朋友开始对lzsql语言发生兴趣。不过,我们的lzsql编译器并没有开源,且目前只支持mysql后端,呵呵。未来会以restysql语言的形式重新实现并开源,届时也会同时支持Pg数据库。  
微博位置: 无
发布时间: 2011-07-06 11:00
点赞数: 0   转发数: 0   评论数: 2
发布工具: 短信

2347:我刚又发布了 ngx_drizzle v0.1.0 模块：http://t.cn/apXL1b  包含了过去 8 个月积累的众多 bug 修复和新特性。其实我一直想“早发布，常发布”，可惜前面半年都疲于应付公司业务需求了，呵呵。  
微博位置: 无
发布时间: 2011-07-05 18:16
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2348:我刚刚发布了 ngx_lua 模块的 v0.2.0 版，包含了过去五个月的众多 bug 修复和新特性，这是我在 nginx 邮件列表中的发布公告：http://t.cn/apxnVP  非常感谢我们所有用户的支持，特别是德国的 moodydeath 同学 :)  
微博位置: 无
发布时间: 2011-07-05 13:41
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

2349:我从 @chaoslawful 老师那里学到的最有价值的一点是，永远不要对某一种技术、工具或者语言产生类似宗教信仰那般的情愫。我从前就对 Perl 特别执着，这虽然帮助我深入了这门语言，但也让我在多年闭塞和排外。我们现在围绕 nginx 做很多工作并不是我们觉得 nginx 很完美，而是因为其他的东西更烂一些。  
微博位置: 无
发布时间: 2011-07-04 19:01
点赞数: 3   转发数: 20   评论数: 5
发布工具: 微博 weibo.com

2350:在 nginx 配置文件中，可以通过 $1, $2 这样的特殊变量来引用正则匹配中的 group capture，类似 Perl 5 中的记法。它们的实现相比其他 nginx 变量非常特殊。现在 ngx_lua 支持在 Lua 代码中通过 ngx.var[1], ngx.var[2], ngx.var[3] 等来引用这些变量了。多谢 Tobia Conforto 同学几天前的报告 :)  
微博位置: 无
发布时间: 2011-07-04 17:49
点赞数: 0   转发数: 1   评论数: 2
发布工具: 微博 weibo.com

2351:昨天根据James Hurst的报告，修正了ngx_redis2和lua-redis-parser的redis应答解析器的多个问题，原先 multi-bulk reply内部不支持status/error/integer reply，现在终于修正了。另外，连续多个multi-bulk reply也可以正确解析了。现在redis短连接下可有限支持 redis pub/sub特性，相关补丁都已提交。  
微博位置: 无
发布时间: 2011-07-04 17:44
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2352:昨天修正了 Richard Kearsley 同学在几个月前报告的 ngx_lua 中不能对 $limit_rate 这样的特殊 nginx 变量进行写入的问题。现在 Lua 接口 ngx.var.VAR = VALUE 已经忠实按 ngx_rewrite 模块的 set 指令的方式来实现了，呵呵：http://t.cn/apGhrm  补丁刚已提交到 GitHub :)  
微博位置: 无
发布时间: 2011-07-04 17:39
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2353:我的金童 @calio 正在开发 ngx_beanstalkd 模块，以便让 nginx 直接和 beanstalkd 这个队列服务进行非阻塞通信：http://t.cn/apb6bU  目前 beanstalkd 的 put 命令的实现比较完整了，我刚向他提了实现 reserve 和 delete 命令的需求，哈哈！后面抽时间搞一个小语言，以便让 upstream 模块的开发自动化  
微博位置: 无
发布时间: 2011-07-04 17:10
点赞数: 1   转发数: 0   评论数: 6
发布工具: 微博 weibo.com

2354:哈哈，今儿意外发现了这个东西“Making AJAX Applications Crawlable”： http://t.cn/hs1lI  其实作为一个 AJAX 控，我也一直在思考这样的问题 :D  
微博位置: 无
发布时间: 2011-07-04 16:34
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2355:在昨天的会上，我的两个好徒弟特意来看我，照片中便是玉女 @0597虾 和金童 @calio :D  原图 
微博位置: 无
发布时间: 2011-07-03 14:46
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2356:今天有幸见到了Jonathan，Perl 6编译器Rakudo的核心开发者之一。这些年来我一直在关注他的工作，也期待着能让Perl 6在ngx_openresty平台上高效运行。今天我们在饭桌上简单讨论了一下让Not Quite Perl6在Lua虚拟机上完成自举的相关技术细节。  原图 
微博位置: 无
发布时间: 2011-07-02 22:41
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

2357:今天在PerlChina大会上分享的幻灯片也放到了我的agentzh.org首页上: http://t.cn/a9qkQB  
微博位置: 无
发布时间: 2011-07-02 22:18
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2358:刚刚发布了 ngx_openresty 0.8.54.8: http://t.cn/aCdPzo  包含了这一周对 ngx_lua, ngx_echo, ngx_srcache 等众多模块的 bugfix :) 下周我就要开始着手升级这个 bundle 中的 nginx 核心到 1.0.4 的工作了 :D 生命不息，升级不止。。。  
微博位置: 无
发布时间: 2011-07-01 12:26
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

2359:我的很多项目的测试集都拥有自我更新的能力,即它会在一遍运行之后把自己克隆出来,同时把这一遍运行的实际输出作为克隆体中的期望输出。当被测应用的输出格式因需求发生变化时,只要把某次人工审核过的克隆版覆盖现有的测试集就好了。而手工大规模地更新测试集的期望输出则会死人的。  
微博位置: 无
发布时间: 2011-07-01 11:08
点赞数: 0   转发数: 4   评论数: 2
发布工具: 短信

2360:刚才在 #nginx-master 聊天频道回答了 onr 同学关于使用 ngx_lua + ngx_redis2 + redis 实现 comet server 的相关技术细节。我建议他利用 redis 的 pub/sub 特性，配合 ngx_lua 的 ngx.location.capture 可以天然地实现从前到后都是非阻塞的 long-poll 结构。他已经开始实现这个东东了，并答应开源！  
微博位置: 无
发布时间: 2011-06-30 17:38
点赞数: 0   转发数: 21   评论数: 10
发布工具: 微博 weibo.com

2361:今天修正了@淘你哥 几周前报告的 ngx_echo 的 echo_location 在用作第一条输出指令时，不能和 ngx_xss 模块一起工作的 bug: http://t.cn/aN6rv5  我提交的补丁在这里：http://t.cn/aN6rvG  为了让主请求的 body 过滤器能恰当地检测 body 的起始，需要在子请求的输出之前输出一个 sync buf. 纠结。。  
微博位置: 无
发布时间: 2011-06-30 17:28
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2362:昨天在 IM 上回答新浪一位工程师关于 ngx_memc 模块的问询时，他突然说起后面将把我这些模块都自己重新实现一遍，这样就可以深刻理解了。我顿时想起一位 Haskell 编译器的作者曾说，它每学一门新语言就自己实现一遍这门语言，以期彻底领会，而他那个 haskell 编译器也是学　haskell 的副产品。汗啊汗。  
微博位置: 无
发布时间: 2011-06-30 15:33
点赞数: 0   转发数: 2   评论数: 1
发布工具: 微博 weibo.com

2363:昨晚修复了@珣新_去哪儿 在几周前报告的　ngx_srcache 模块中的一个 bug: 还是因为捕获那些有内部跳转的子请求的响应体需要特别的技巧。我现在都是利用 post_subrequest 回调结构，备份子请求的 ctx，然后在头过滤器中再把它恢复出来，和 ngx_lua 里的做法一样。当然了，还可以有其他变通办法了，呵呵  
微博位置: 无
发布时间: 2011-06-30 15:23
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2364:发现我总是不自觉地把读别人的代码和写自己的代码之间的比例控制在三七开,或许是因为我骨子里还是信奉小纳什的那句“过度接受二手知识只会损害自己的原创力”吧。。呵呵  
微博位置: 无
发布时间: 2011-06-30 12:26
点赞数: 0   转发数: 0   评论数: 0
发布工具: Kjava客户端

2365:今儿开始启动升级我们生产上的nginx到最新的1.0.4版的公司流程。完了之后再升级开源版ngx_openresty中的nginx核心。又开始了漫长的运行各种单元和集成以及业务测试集的过程。。  
微博位置: 无
发布时间: 2011-06-29 13:56
点赞数: 0   转发数: 0   评论数: 3
发布工具: 短信

2366:刚刚更新了 ngx_drizzle 模块的文档：http://t.cn/aCsOoB  介绍了如何安装 libdrizzle 1.0，现在我们至少要求这个版本的 libdrizzle. 不用补丁，至少在 Linux 和 Mac OS X 都测试通过了 :D  
微博位置: 无
发布时间: 2011-06-28 18:03
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2367:昨晚我给 ngx_drizzle 模块打了一个小补丁,现在它在 Mac OS X 上可以直接和 libdrizzle 一起编译了。原来须在包含 nginx 头文件之前包含 libdrizzle.h,否则它用到的 bool 类型就不能正确设置。纠结。。  
微博位置: 无
发布时间: 2011-06-28 14:26
点赞数: 0   转发数: 0   评论数: 0
发布工具: Kjava客户端

2368:gcc 4.6 新增了 -Wunused-but-set-variable 警告，于是乎许多使用了 -Wall -Werror 的“良民”软件都编译不过了，其中也包括 nginx 0.8.x，见官方变更列表：http://t.cn/hGzRkG  我在新发布的 ngx_openresty 0.8.54.7 中通过补丁禁掉了 -Werror，并修正了我自己那些模块中的对应缺陷。世界在变。。。  
微博位置: 无
发布时间: 2011-06-28 12:08
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2369:正则其实不仅可以用于匹配字符串,把原语稍加扩展后其实可以在更一般的问题空间中进行搜索,从而可以用来求解四皇后等经典AI问题。大学时代我曾花一夜时间为编译课的教授实现过一个这样的“元正则引擎”,考试发卷时交付的。他答应给我加分,无奈我那门课自己考得极高,再加就满分了,只好作罢。  
微博位置: 无
发布时间: 2011-06-28 11:06
点赞数: 0   转发数: 0   评论数: 3
发布工具: Kjava客户端

2370:昨晚我发布了ngx_openresty 0.8.54.7: http://t.cn/aCdPzo  主要升级了LuaJIT2.0,ngx_lua和ngx_echo等模块到最新版,绕过了gcc 4.6新加的“变量设置但未使用”的警告。  
微博位置: 无
发布时间: 2011-06-28 08:43
点赞数: 0   转发数: 3   评论数: 3
发布工具: 短信

2371:发现自己现在一遇见在线的或者离线的后台daemon服务的开发需求，首先考虑的是erlang。幸运的是，即使在那些同时需要对外暴露http服务的场合，我的erlang服务也能和ngx_openresty很好地一起工作。如果还需要Web交互界面，就再写些JS跑在浏览器里ajax服务。  
微博位置: 无
发布时间: 2011-06-26 11:30
点赞数: 1   转发数: 0   评论数: 0
发布工具: S60客户端

2372:媳妇儿昨晚送我的大猫。。身子其实也挺大的，拍不出来了。。这是媳妇儿逼我跟它合的影。。  原图 
微博位置: 无
发布时间: 2011-06-25 10:47
点赞数: 0   转发数: 0   评论数: 3
发布工具: S60客户端

2373:刚刚在我的小黑上从源码编译了最新的官方 mysql 5.5.13，拿 libdrizzle 1.0 运行了一下 ngx_drizzle 和 ngx_rds_json 模块的测试集，全部通过。这样以后我们线上就可以用 ngx_openresty 去连 mysql 5.5+ 了，耶！回头做了更多测试之后，就把我们线上的 libdrizzle 从 0.8 升到 1.0 去 :D  
微博位置: 无
发布时间: 2011-06-24 18:06
点赞数: 0   转发数: 8   评论数: 0
发布工具: 微博 weibo.com

2374:在 ngx_drizzle 最新版中，我移植了Maxim Dounin同学打给他的 ngx_upstream_keepalive 连接池模块的补丁给我的 mysql 连接池。在线上稳定运行了一天，通过 drizzle_status 指令检查线上 mysql 连接池状态，效果明显，连接平均复用次数从几次提高到几千次。看来 epoll 的 stale 事件确实不能不忽略啊。  
微博位置: 无
发布时间: 2011-06-24 15:47
点赞数: 0   转发数: 12   评论数: 7
发布工具: 微博 weibo.com

2375:刚刚在 CPAN 上发布了我为我们部门的前端工程师和测试工程师开发的 Cheater 随机数据库生成器：http://t.cn/aCZiU9  它毫无悬念了内置了一种类似 SQL 的小语言用来描述数据模型和字段值域。在我们内部已经应用半年多了，祝玩得开心~  
微博位置: 无
发布时间: 2011-06-24 14:38
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2376:走在北京的大街上非常缺乏安全感。许多转弯的机动车都跟人行横道上的行人抢行。稍不留神,就得被撞死。真是一帮人渣。。  
微博位置: 无
发布时间: 2011-06-24 13:18
点赞数: 0   转发数: 0   评论数: 5
发布工具: 短信

2377:看到无敌的 LuaJIT 2.0.0 beta8 刚刚发布了：http://t.cn/aC7Zpf  ARM port 终于完整了，另外增加了字节码导出和加载功能。回头把线上的 beta7 给升级了，呵呵。  
微博位置: 无
发布时间: 2011-06-24 11:18
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2378:moodydeath同学报ngx_lua的各种微妙的bug报得我感觉都要死了,呵呵。。这位德国的哥们太强大了。。超级qa啊。。哈哈!  
微博位置: 无
发布时间: 2011-06-24 10:18
点赞数: 0   转发数: 2   评论数: 4
发布工具: 短信

2379:有时不禁会庆幸我们ngx_openresty项目启动的时间。在这过程中,LuaJIT2.0,libdrizzle,以及Nginx等都伴随着我们工作的深入而及时地成熟起来。比如Nginx在0.8.x以后才支撑很复杂的子请求。我们也为这些东西的完善尽了自己的一份力。  
微博位置: 无
发布时间: 2011-06-23 14:46
点赞数: 0   转发数: 1   评论数: 9
发布工具: 短信

2380:我们的业务系统一直维护着一个庞大的Perl驱动的测试集,每当我升级底层的nginx及其模块时,都会先在开发环境运行好几遍测试集,确保没有引入衰退。我一直跟同事们强调这个测试集是我们产品的生命线;没有它,我们是决不敢动底层的任何东西的。  
微博位置: 无
发布时间: 2011-06-22 20:17
点赞数: 0   转发数: 5   评论数: 2
发布工具: 短信

2381:今儿自己胡乱给 openresty.org 配了一个主题色，大家看看图一乐，呵呵：http://t.cn/a9nfUu 我媳妇儿喜欢“令人眩晕的绿色”，所以主要是绿色系了 :P 话说 TiddlyWiki 还能自己编辑自己的显示样式，真爽~  
微博位置: 无
发布时间: 2011-06-22 15:40
点赞数: 0   转发数: 1   评论数: 5
发布工具: 微博 weibo.com

2382:这两天把 openresty.org 的新首页用 TiddlyWiki 搭了一个架子出来，还缺许多页面，先放出来给大家瞅瞅，呵呵：OpenResty - Scalable Web Platform based on NGINX 后面慢慢再多加一些教程啥的，呵呵。欢迎有应用经验的同学投稿~~这个网站的 git 仓库位于 http://t.cn/a9lw5U  
微博位置: 无
发布时间: 2011-06-21 15:58
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2383:昨儿注意到Tiddlywiki还可以自动生成RSS feed,很赞啊~我已经把我的agentzh.org首页配置成支持RSS订阅了,呵呵。简单就是美~  
微博位置: 无
发布时间: 2011-06-21 10:44
点赞数: 0   转发数: 0   评论数: 0
发布工具: Kjava客户端

2384:对别人现成的东西作代码分析,评价得失,往往是容易的,而自己创造一个工业重量级的东西,并不断去响应用户的需求,不断去修正问题,却要付出极大的艰辛,需要始终如一的坚持。  
微博位置: 无
发布时间: 2011-06-20 09:49
点赞数: 0   转发数: 7   评论数: 6
发布工具: 短信

2385:今晚来回做了两个小时地铁在西直门这边请了两位mm一起吃饭,一位在Oracle工作,一位在腾迅。其中的一位还是工程师。我很惊讶竟然有很多人不信程序员中其实也有不少漂亮女孩的,呵呵。  
微博位置: 无
发布时间: 2011-06-19 20:37
点赞数: 0   转发数: 1   评论数: 13
发布工具: Kjava客户端

2386:这两天在我的个人主页上汇集整理了一下我过去几年中历次演讲和分享的幻灯片：http://t.cn/a9qkQB 简单看来，06 年还是 Perl 5为主，07 年是 Perl 6 开发和 Firefox 插件开发，08 年是 OpenResty.pm 平台开发，09 年是网页抽取和web浏览器的集群化，10 年之后就是 Nginx 和 Lua 相关开发了，呵呵。  
微博位置: 无
发布时间: 2011-06-18 17:46
点赞数: 0   转发数: 3   评论数: 3
发布工具: 微博 weibo.com

2387:libdrizzle是一个第三方的mysql客户端C库，支持非阻塞通信和流式处理。这些日子我有用户报告说，最新发布的libdrizzle 1.0不能和我们的ngx_drizzle摸块一起工作。我们线上一直用的是自己打过补丁的0.8版。据说新版有较大改进，今天我得自己试试看。  
微博位置: 无
发布时间: 2011-06-18 10:21
点赞数: 1   转发数: 69   评论数: 22
发布工具: S60客户端

2388:TiddlyWiki 通过 Javascript 自己修改自己已经很有趣了，同时因为是静态 HTML 文件，还可以为全网搜索引擎顺利索引其中的文字内容，这样就更爽了，比如我的个人主页在 Google 中是这个样子：http://t.cn/a9AIQa  
微博位置: 无
发布时间: 2011-06-17 16:26
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2389:利用我徒弟 @calio 的 ngx_iconv 模块可以方便地实现在 nginx.conf 配置文件中对 nginx 变量或者响应体作字符编码的转换，昨儿我刚在nginx邮件列表里发了一个应用实例：http://t.cn/a9zQG7  
微博位置: 无
发布时间: 2011-06-17 11:17
点赞数: 0   转发数: 3   评论数: 4
发布工具: 微博 weibo.com

2390:心的做法,让我们换用或者接入异质的新语言和新的技术平台变得极端困难,不自己挂一个JVM或者PHP解释器,我还解不开数据。。。靠!  
微博位置: 无
发布时间: 2011-06-17 10:04
点赞数: 0   转发数: 2   评论数: 0
发布工具: 短信

2391:最反感在公司里看到别人使用JVM或者PHP私有的序列化应用数据,更有甚者,还把序列化后的结果直接存到数据库里面。这种极端短视的以己为中  
微博位置: 无
发布时间: 2011-06-17 10:02
点赞数: 0   转发数: 4   评论数: 2
发布工具: 短信

2392:这两天把夏达姐姐的«子不语»都看完了,感觉很宁静,很平和,很舒缓。C 程序搞多了确实容易受内伤,需要这些艺术作品来化解,呵呵。  
微博位置: 无
发布时间: 2011-06-16 23:15
点赞数: 0   转发数: 2   评论数: 4
发布工具: Kjava客户端

2393:我的 ngx_headers_more 今天终于支持改写带 charset 的 Content-Type 响应头了，多谢 ML 同学报告这个问题。moodydeath 同学最近报告的 ngx_lua 模块的所有 bug 今天终于都修完了，爽死了，终于可以松一口气了。发现现在每天除了修 bug，基本上就没时间干别的了，汗啊。。。  
微博位置: 无
发布时间: 2011-06-16 20:48
点赞数: 0   转发数: 0   评论数: 5
发布工具: 微博 weibo.com

2394:在我们众多开源的nginx模块中,用户最多、最受欢迎的竟是最简单的ngx_headers_more,其次就是ngx_echo。不由让我想起那句“Simple software makes people happy”:那些小白不会、大牛不屑的重要的事情还是得有人去做的。  
微博位置: 无
发布时间: 2011-06-15 21:23
点赞数: 0   转发数: 2   评论数: 6
发布工具: 短信

2395:每天对我来说都是 Bug Day：今天我还修正了 ngx_lua 模块中一个长期存在的 bug，即发生内部跳转的子请求从前是不能被 ngx.location.capture() 等函数捕获响应的，因为内部跳转会清空所有模块的上下文数据。幸好今儿找到一条捷径可以把上下文结构在输出过滤器中给恢复出来：http://t.cn/aKro4q  
微博位置: 无
发布时间: 2011-06-15 19:33
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2396:刚刚修正了 ngx_headers_more 模块的一个小问题，more_clear_headers Foo 现在可以清除响应头里出现的所有 Foo 头了，而不像原先只能清除第一个 Foo：http://t.cn/aKBFkm 多谢李杨同学的报告。我注意到 ngx_lua 模块中的输出头操纵 API 倒没有此问题。  
微博位置: 无
发布时间: 2011-06-15 18:12
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2397:刚刚标记了 ngx_openresty 0.8.54.6 这个新发布：http://t.cn/aKB0h0 更新了 bundle 中的 ngx_redis2, ngx_drizzle, 和 ngx_lua 到最新版，包含了许多 bug 修复。欢迎大家在 Linux/MacOSX/*BSD/Solaris 等操作系统上试用 ;)  
微博位置: 无
发布时间: 2011-06-15 17:17
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2398:随着ngx_lua模块的测试集越来越庞大,以各种模式完整地运行一遍,在我最快的本上也需要十几分钟的时间,已然成为我TDD周期中的严重瓶颈。看来未来得把测试集搞成mapreduce的,分布到多机去跑。测试用例多了也愁人,呵呵。  
微博位置: 无
发布时间: 2011-06-15 11:15
点赞数: 0   转发数: 2   评论数: 3
发布工具: Kjava客户端

2399:我们的运维工程师的nginx日志轮转脚本写得有缺陷,直接ps|grep nginx拿到进程列表,然后逐一发USR1信号。不幸的是,我的日志监控系统的erlang beam进程也能被grep到,而且beam一收到未知信号就给我直接退出了!它怎么能这么处理呢?应该忽略啊!  
微博位置: 无
发布时间: 2011-06-15 08:25
点赞数: 0   转发数: 8   评论数: 8
发布工具: 短信

2400:昨晚把 agentzh.org 和 agentzh.com 这两个域名及其子域都指向国外的主机了，实在受不了无休止的问询和审核了，墙了就墙了吧，呵呵。后面把 openresty.org 等域名也切过去。从国内访问速度肯定会慢些，但还好啦~  
微博位置: 无
发布时间: 2011-06-14 10:24
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2401:编写较为复杂的Nginx模块需要比较复杂的工具链,光有valgrind和常规测试台是很不够的,还需要packet切分工具以模拟极端网络,要禁用掉nginx自己的内存pool,以便能检测到更多的内存问题,须使用极其苛刻的http客户端:这些都是我们用血的教训换来的。  
微博位置: 无
发布时间: 2011-06-14 09:40
点赞数: 0   转发数: 10   评论数: 10
发布工具: 短信

2402:在老家休假一周，来自世界各地的用户邮件都一路相随。在家利用零星的时间修复了两个 Nginx 模块的三个 bug，而公司生产环境倒没有收到任何报警。正是依靠外部用户长期以来的热心帮助，才让我在公司部署的系统非常的稳定。这正是开源的巨大魅力之一。  
微博位置: 无
发布时间: 2011-06-11 14:42
点赞数: 0   转发数: 3   评论数: 2
发布工具: S60客户端

2403:网上看到一些同学认为 Apache 之所以比 Lighttpd 和 Nginx 低效主要是因为 Apache 在功能上更为完善，颇为无语。我要通过自己的努力让 Nginx 在功能上更为完善，从而直接证明他们是错的。我是不指望让所有人都理解C10K难题和非阻塞通信了。  
微博位置: 无
发布时间: 2011-06-11 14:18
点赞数: 0   转发数: 1   评论数: 3
发布工具: S60客户端

2404:昨天用telnet调试时意外注意到ngx_lua在某些情况下会输出两个last chunk(即chunked编码的终结符)，这在短连接时能忽略，但在keepalive时多余的last chunk就被当做下个响应的开头而出错。回头为Test::Nginx测试台加上对多余字节的检查。  
微博位置: 无
发布时间: 2011-06-10 11:11
点赞数: 0   转发数: 3   评论数: 1
发布工具: S60客户端

2405:刚刚打磨和应用了一下 Vitaly Peretiatko 同学昨晚提交的补丁，为 ngx_set_misc 模块添加了 set_random 指令，现在我们可以在 nginx.conf 里按指定区间生成伪随机数啦！见 http://t.cn/aoFSDo 这对一些简单的负载均衡配置应该是很有用的，Vitaly 同学说在他们的生产环境中用到了此功能。  
微博位置: 无
发布时间: 2011-06-08 12:07
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2406:准备在 7 月 2 日 Perl 中国 2011 年北京聚会上讲一讲 Perl 和 ngx_openresty 在我们量子店铺统计这个产品中的各种有趣的应用： http://t.cn/aodTll 聚会是免费的，欢迎感兴趣的朋友过来聚哈。回头等幻灯片做好了也贴到这里来。  
微博位置: 无
发布时间: 2011-06-07 15:50
点赞数: 0   转发数: 25   评论数: 4
发布工具: 微博 weibo.com

2407:Lua 首次进入 TIOBE 编程语言排行 TOP 10: http://t.cn/hthwf "The major advantages of Lua are its small footprint and fast performance." Yo2Lua 的朋友们也在不遗余力地把 Lua 打造成所谓的“云时代的 PHP”，不过他们目前的实现和我们开源的 ngx_lua 并没有关系，呵呵。  
微博位置: 无
发布时间: 2011-06-07 15:10
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2408:出门看电影之前匆忙提交了对lua-redis-parser的一处更动，试图修复在Mac OS X上的链接错误，不想从电影院回到家就收到了一位热心用户一小时前的bug报告，说我最后一次提交让Linux链接不成功——感动！这种情况我自己已经遇到多次了，真的很感激社区反馈的强大力量~  
微博位置: 无
发布时间: 2011-06-06 23:21
点赞数: 1   转发数: 1   评论数: 1
发布工具: S60客户端

2409:在返乡休假的火车上。。。  原图 
微博位置: 无
发布时间: 2011-06-04 11:52
点赞数: 0   转发数: 1   评论数: 7
发布工具: 彩信

2410:在日常工作中,我一直在努力实践自己对美的追求--代码之美,结构之美,速度之美。我在过去一年的时间里彻底重写了量子店铺统计这个产品的前端和中间层,把自己对美的定义融入到系统的各个层面。当自己这种柏拉图式的追求直接融入公司业务并服务于最终用户时,这种喜悦就非同寻常了。  
微博位置: 无
发布时间: 2011-06-03 14:55
点赞数: 0   转发数: 10   评论数: 4
发布工具: 短信

2411:发现大家都会比较关注使用非阻塞模型来应对来自客户的“慢连接”，比如使用nginx作反向代理。其实来自后端的“慢连接”同样会导致灾难，比如后面是一个mysql大集群，我们以阻塞方式访问mysql；而只要当其中一二台mysql故障而超时时，就会让前端机发生请求积压，进而是进程或线程积压，直至全面拥堵崩盘  
微博位置: 无
发布时间: 2011-06-02 19:37
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2412:昨儿在nginx-devel邮件列表收到一哥们的求助邮件,说是模仿我们的ngx_form_input模块,搞了一个在access阶段读取请求体的nginx模块,但会随机出现请求超时等诡异问题。我一看才发现他漏抄了一个字母c:看来抄袭代码还是直接复制粘贴比较保险些~  
微博位置: 无
发布时间: 2011-06-02 08:33
点赞数: 0   转发数: 0   评论数: 1
发布工具: 短信

2413:我的第一个Erlang系统明天正式上线,名叫lzwatcher,即Nginx错误日志的实时直播应用,基于Gmail风格的标签筛选式订阅。整体是6台机器7个Erlang结点的小集群,呵呵。最终是1600行Erlang代码,连空行和注释;异常处理占了多一半的篇幅。  
微博位置: 无
发布时间: 2011-06-01 21:00
点赞数: 0   转发数: 46   评论数: 23
发布工具: 短信

2414:有三年多没关注jquery的新变化了,今天再看文档,发现添加了许多激动人心的新功能,特别是jquery.ajax()方法,都直接支持jsonp跨大域了,哈哈!爽死了!  
微博位置: 无
发布时间: 2011-06-01 20:07
点赞数: 0   转发数: 1   评论数: 4
发布工具: 短信

2415:读全新领域的书,我喜欢只读懂三成,然后掩卷自己接着演绎后面的内容。待演绎得差不多了,再接着读书,对照一下书中的结果。自己推导出书中的重要定理是常事,更有趣的是有时会得到全新的结论和启迪。一些学科在彻底明了细节之后反而不易得到启发和灵感。灵感源自雾里看花,源于自己的直觉。  
微博位置: 无
发布时间: 2011-05-31 18:42
点赞数: 2   转发数: 2   评论数: 2
发布工具: Kjava客户端

2416:无意中发现 moodydeath 同学的办公环境截屏里，Kate 打开着的竟是 ngx_lua 模块的 C 源码！哈哈：http://t.cn/hDj2Hh 我们来自德国的热心用户和协作伙伴 :D  
微博位置: 无
发布时间: 2011-05-31 11:15
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

2417:媳妇儿送的《子不语》，是我偶像夏达姐姐的作品~意境确实了得，爱不释手ing  原图 
微博位置: 无
发布时间: 2011-05-29 14:11
点赞数: 0   转发数: 0   评论数: 3
发布工具: S60客户端

2418:moodydeath 同学很强大呀，又发现了我们 ngx_lua 模块中一个和响应头设置相关的 bug，我中午花了几分钟修正了：http://t.cn/hDVJU7 很奇怪那几行问题代码当初是如何引入的（也许当时写了一半又被打断了？哈哈）  
微博位置: 无
发布时间: 2011-05-27 16:54
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2419:今年八月初开始我将为nginx开发拥有比较完整的http 1.1支持的proxy模块,先是keepalive长连接和连接池支持,然后是chunked输入输出支持,最后则是pipelining,呵呵。广大用户对此呼声一直很高,我有可能会得到一些美国公司的捐赠。  
微博位置: 无
发布时间: 2011-05-27 14:33
点赞数: 0   转发数: 8   评论数: 6
发布工具: Kjava客户端

2420:今儿一大早收到老爸给我发的电子邮件，打开一看，里面只写了一句话：“Never let the demands of tomorrow interfere with the pleasure and excitement of today!”  
微博位置: 无
发布时间: 2011-05-27 12:44
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2421:在写Erlang代码的时候感觉很爽的一点是不必像Haskell那样纠结于Monad和类型匹配。当然Erlang里可选的函数类型声明还是很有意义的,借助于dialyzer这样的静态代码分析工具,类型检查(typecheck)毕竟可以在程序实际运行之前捕捉到许多错误。  
微博位置: 无
发布时间: 2011-05-27 11:54
点赞数: 0   转发数: 0   评论数: 0
发布工具: Kjava客户端

2422:昨儿在一台Debian系统上部署ngx_openresty时发现,LuaJIT构造时如果在PATH环境变量找不到ldconfig,就依赖libdl了,不自己添加-ldl链接选项的话,最后用户程序链接时就会报dlopen等符号找不着的错。把/sbin加进PATH就好了。  
微博位置: 无
发布时间: 2011-05-27 10:20
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2423:我今天标记了 ngx_openresty 0.8.54.5 这一新发布，更新了 bundle 里的 ngx_lua 和 ngx_echo 到最新版：http://t.cn/hewclN 主要修复了一些 bug，没有添加新的特性 :)  
微博位置: 无
发布时间: 2011-05-25 18:23
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2424:这两天基于 Erlang 的 lists, file, 和 re 模块写了一个简单的 nginx error.log 解析器，处理我们线上的 nginx 错误日志文件，在我的 macbook 上达到 1.4 MB/sec，而在我的 thinkpad 上则是 2.7 MB/sec，如果使用 jsonerl 将解析结果编码为 JSON 串输出，则会慢上近一倍,急需更快的 JSON 编码器，呵呵  
微博位置: 无
发布时间: 2011-05-25 18:15
点赞数: 0   转发数: 0   评论数: 2
发布工具: 微博 weibo.com

2425:招聘太花时间了，面了太多人都不合适。。。这年头遇上好孩子就是得靠运气~~  
微博位置: 无
发布时间: 2011-05-25 11:54
点赞数: 0   转发数: 0   评论数: 3
发布工具: 微博 weibo.com

2426:今天我发布了 Test::Nginx 模块的 0.15 版到 CPAN 网络，这次发布添加了有关 TEST_NGINX_* 变量的许多英文文档： http://t.cn/heDTZG Antoine Bonavita 同学实在是太给力了！  
微博位置: 无
发布时间: 2011-05-23 18:24
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2427:今天又收到一位国外用户的 bug 报告，修正了 ngx_lua 模块的一个与转发当前请求的请求头到子请求相关的问题：http://t.cn/heDbQ8 很开心地看到我们的用户越来越多了[呵呵]  
微博位置: 无
发布时间: 2011-05-23 16:51
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2428:编程本质上就是和机器的沟通，在现实领域内使用最有效的沟通方式可以极大提升沟通效率。数学家是发明新记法的专家，老一辈UNIX程序员也在日常工作中发明新的小语言，创造和机器交流的最佳方法。可惜编译器的快速构造技巧和写程序的程序没能很好地被继承，我们这一代是被各种花哨IDE毁掉的一代。  
微博位置: 无
发布时间: 2011-05-22 16:11
点赞数: 0   转发数: 6   评论数: 2
发布工具: S60客户端

2429:我特别喜欢根据很具体的业务模型引入简单的领域内小语言(DSL)，这样可以用最简洁最自然的方式描述业务问题和工程对象，同时自己实现的类型检查和语义分析能在编译期发现更多更高级的编程错误，能建立更智能的上下有关的业务约束，还有机会生成更高效的目标代码并在业务层抽象掉具体的实现语言。  
微博位置: 无
发布时间: 2011-05-22 15:32
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

2430:一些系统工程师常常会特别强调深挖底层系统特性和行为的重要性。这固然必要，不过我们同时需也要特别关注另一个方面，即向上走，对复杂问题进行有效的抽象，从很高的层次理解业务和计算本身。有效的抽象可以让复杂问题变得清晰甚至优美，并且允许我们未来轻松地更换掉其背后的实现。  
微博位置: 无
发布时间: 2011-05-22 00:21
点赞数: 0   转发数: 5   评论数: 3
发布工具: S60客户端

2431:昨晚意外发现 Erlang OTP 的 gen_fsm 行为支持在状态切换时指定 timeout 时间，分外高兴，因为这意味着那种按时间间隔自驱动的状态机可以很自然地表达了（例如那种自己定时 poll 外部资源的模块）。原来以为须借助 gen_fsm:send_event_after/2 函数才能搞定呢~~  
微博位置: 无
发布时间: 2011-05-20 17:05
点赞数: 0   转发数: 1   评论数: 1
发布工具: 微博 weibo.com

2432:典型的nginx upstream模块都能享受到upstream配置块提供的加权轮询式负载均衡、备份结点设置、出错时自动结点切换(failover)、长连接池等功能。比如我的ngx_memc和ngx_redis2模块就在此列,还有未开源的量子实时引擎模块ngx_lz_st  
微博位置: 无
发布时间: 2011-05-19 19:41
点赞数: 0   转发数: 0   评论数: 0
发布工具: Kjava客户端

2433:moodydeath同学昨儿又报告了ngx_lua模块的一个小bug:在Lua代码中先清除再添加一个同名输出头时会不生效,于是我上午很快修复了它,不过我同时注意到ngx_headers_more模块也会有类似的问题,下午接着修~  
微博位置: 无
发布时间: 2011-05-19 16:13
点赞数: 0   转发数: 0   评论数: 0
发布工具: Kjava客户端

2434:一大早到班，被前台mm通知有派出所的人找，吓了一跳。在会客区见到了警察叔叔之后才知道是专程跑开索取我的注册域名和国内主机的备案信息的。单在工信部的网站上备案还不够，在首都就是受到特别关注啊。。  
微博位置: 无
发布时间: 2011-05-19 10:29
点赞数: 0   转发数: 4   评论数: 12
发布工具: S60客户端

2435:这几天一直在不停地写 erlang 代码，我的实时日志监控系统终于搞定 2/3 强了，连空行、注释和大量调试代码在内，汗啊。这可是功能多么复杂的一个分布式系统呀。。。越来越爱 erlang 了 :D  
微博位置: 无
发布时间: 2011-05-18 18:07
点赞数: 0   转发数: 3   评论数: 10
发布工具: 微博 weibo.com

2436:这个老外写了篇文章,介绍了他是如何使用我们的 ngx_openresty 组件让他们的 web 应用的吞吐量从 100 q/s 提升到 1000 的: http://t.cn/heo7Z0 如果他直接使用我的 ngx_openresty bundle 的话，安装过程就没那么繁琐了~~  
微博位置: 无
发布时间: 2011-05-18 12:17
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2437:我发现自己越来越陶醉于把Erlang写成Haskell风格,看着这些Erlang代码越来越能觉出久违的美感,特别是在macbook上看的时候。。当然,Erlang的record记法是少有的例外,好在习惯之后也没那么碍眼了。  
微博位置: 无
发布时间: 2011-05-17 13:16
点赞数: 0   转发数: 0   评论数: 1
发布工具: 短信

2438:在我的小黑上测试了一下自己拿原生 erlang 写的 hello world 性质的 http server（基于 OTP gen_server 行为），吞吐量最高可以到 8k q/s，相比 nginx + php-fpm + php hello world 的 4k q/s，这个“天花板”还算满意。erlc 使用 +native 编译性能反降；erl 运行时启用 +K true +A 2.  
微博位置: 无
发布时间: 2011-05-16 12:16
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2439:意外发现Erlang的inet库竟然内置有http协议的流式解析支持,通过setopts或者listen函数的{packet,http}选项开启。这样,用纯Erlang写http服务器不要太方便了!  
微博位置: 无
发布时间: 2011-05-15 20:38
点赞数: 0   转发数: 4   评论数: 1
发布工具: 短信

2440:下午在团结湖畔思考一个Erlang程序。。  原图 
微博位置: 无
发布时间: 2011-05-14 21:56
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

2441:长期工作在一个有着多个并行子项目的公司项目中，经常需要跟踪协调多个 git 分支的提测、预发和上线以及合并到 master 的状态，和许多 PM，开发以及 QA 沟通。我不得不让我的工作都变成异步的，先做一份，再切到别的任务，等别人 OK 了再回调我做下一份：时间长了很是崩溃。  
微博位置: 无
发布时间: 2011-05-13 16:24
点赞数: 0   转发数: 6   评论数: 4
发布工具: 微博 weibo.com

2442:刚刚发布了 ngx_openresty 0.8.54.4 : http://t.cn/hewclN 升级了 LuaJIT, ngx_lua, ngx_srcache 和 ngx_headers_more 这几个组件到最新版本。我同时也已经在着手升级 nginx 到 1.0.x 系列的相关工作了  
微博位置: 无
发布时间: 2011-05-13 16:06
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2443:最近在公司老是连不上国外网站，幸好有老何放在国内的主机可以做socks代理，此时tsocks神器就可以让git和wget等不支持socks代理设置的工具都走我本地的 socks 代理: http://t.cn/hewZbE 不过官网上的下载地址都是404，去别处找了一个src rpm，自己解开后才得到源码包。  
微博位置: 无
发布时间: 2011-05-13 15:24
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2444:昨天我用 Lcov/gcov 生成了我们 ngx_headers_more 模块测试集的代码覆盖报告，还挺漂亮的：http://t.cn/hewhBZ 看来后面还需要添加更多的测试用例了，呵呵。  
微博位置: 无
发布时间: 2011-05-13 15:15
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2445:在 lua-l 国际邮件列表里新发布的 lua-cjson 库看起来很不错哎，比 lua-yajl 小巧多了，可以考虑用它替换掉我们线上大量使用的 lua-yajl 库，而且似乎没必要在我们的 ngx_lua 里自己实现原生的 json 编解码器了。  
微博位置: 无
发布时间: 2011-05-13 11:38
点赞数: 0   转发数: 0   评论数: 4
发布工具: 微博 weibo.com

2446:刚刚上传了我们的 Nginx 模块测试框架 Test::Nginx 的 0.14 版到 CPAN，包含了 Antoine Bonavita 同学实现的许多新特性以及添加的许多新文档 ( http://t.cn/hehfyG )。感谢国际开源社区推动着我的这些项目不断前进   
微博位置: 无
发布时间: 2011-05-12 20:03
点赞数: 0   转发数: 2   评论数: 2
发布工具: 微博 weibo.com

2447:一位国内用户使用我们的 ngx_lua 和 ngx_redis2 模块,基于nginx + lua + redis,做了一个股票新闻聚合应用的数据接口,启用 redis 连接池和 LuaJIT,单机用 ab 轻松压过一万q/s,同时保有C10K的性质,从前到后都是非阻塞网络通信，这在性能上确实是王道   
微博位置: 无
发布时间: 2011-05-12 11:02
点赞数: 0   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2448:下班回家的路上没怎么张口就吃了一嘴的沙子。。伟大首都相当之不适宜普通人类居住啊。。  
微博位置: 无
发布时间: 2011-05-11 22:17
点赞数: 0   转发数: 0   评论数: 6
发布工具: 短信

2449:热烈祝贺LuaJIT 2.0 beta7发布!这个beta版被作者认为是比较稳定的一版,同时也意味着最终正式版离我们已经不远了。过几天我把它更新到咱们的生产上去,呵呵。  
微博位置: 无
发布时间: 2011-05-10 21:39
点赞数: 0   转发数: 4   评论数: 4
发布工具: 短信

2450:前不久我应用了一个俄罗斯用户的C补丁,现在ngx_lua可以在没有ngx_devel_kit(NDK)的情况下构造了,只不过依赖NDK的那几个功能都禁用了,比如set_by_lua和ndk.set_var. 看来大家都不太喜欢强依赖项呀,呵呵。  
微博位置: 无
发布时间: 2011-05-10 21:35
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2451:昨晚精神状态很好,一口气重写并应用了moodydeath同学针对ngx_lua同学的几个补丁,新增了几个Lua接口以读写请求头,借用了我自己的ngx_headers_more模块的大量代码。很多用户都曾表示需要这个特性,呵呵。  
微博位置: 无
发布时间: 2011-05-10 13:47
点赞数: 0   转发数: 0   评论数: 3
发布工具: 短信

2452:前几天我应用了一个国外用户提交的针对ngx_srcache缓存模块的补丁,添加了srcache_store_max_size, srcache_fetch_skip和srcache_store_skip这三条全新的配置指令。现在终于可以定制绕过缓存的策略了,呵呵。  
微博位置: 无
发布时间: 2011-05-09 23:15
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2453:最近思路中断，工作效率很低，无心审阅几个老外的大补丁。打算把代码都放进Kindle，盯住看看可能会有进展，就像最初看Nginx源码陷入困境时那样搞。  
微博位置: 无
发布时间: 2011-05-08 15:33
点赞数: 0   转发数: 9   评论数: 7
发布工具: S60客户端

2454:This woman defines "cool"!  原图 
微博位置: 无
发布时间: 2011-05-07 21:49
点赞数: 0   转发数: 0   评论数: 0
发布工具: S60客户端

2455:看到 Perl 界的元老 chromatic 老师写的文章“复用只是一个惊喜”（Reuse is Merely a Happy Accident）： http://t.cn/hgISfY  
微博位置: 无
发布时间: 2011-05-04 11:35
点赞数: 0   转发数: 3   评论数: 1
发布工具: 微博 weibo.com

2456:我在福州商场看到了xunxin乖乖做的服装品牌广告。我觉得还行 @liseen @Chinainvent @万大米 @jqliu @0597虾  原图 
微博位置: 无
发布时间: 2011-05-03 11:25
点赞数: 0   转发数: 0   评论数: 5
发布工具: 彩信

2457:自己的开源软件要建立起自己的用户和开发社区,很重要的一点就是及时响应用户和协作者,无论是各种问询、缺陷报告、新特性申请,抑或是补丁提交。早期只能主要靠自己。近来收到针对我们的ngx_lua,ngx_srcache和Test::Nginx的共四个补丁,正纠结中。。。  
微博位置: 无
发布时间: 2011-05-03 06:31
点赞数: 0   转发数: 3   评论数: 2
发布工具: 短信

2458:刚刚才发现 Macbook Air 的照相程序很有意思耶~~  原图 
微博位置: 无
发布时间: 2011-05-01 13:53
点赞数: 0   转发数: 3   评论数: 11
发布工具: 微博 weibo.com

2459:Valgrind 最新版 3.6.1 在 Mac OS X 上的 signal 操纵还有有问题，首先不让用户程序使用 SIGUSR2，因为其内部实现已经征用了此信号;其次用户程序在使用 memcheck 运行时不能可靠响应 SIGQUIT 等信号的回调。费了好大劲，打了一些补丁，nginx 才勉强能用 valgrind 在 MacBook 上跑测试集,唉。。。  
微博位置: 无
发布时间: 2011-05-01 12:13
点赞数: 0   转发数: 0   评论数: 0
发布工具: 微博 weibo.com

2460:发现 libdrizzle 竟然连接不上mysql 5.5.10，在网上发现了下面这个 ticket 说的正是这个问题： https://bugs.launchpad.net/drizzle/+bug/677522 看那哥们的补丁，并未考虑 TCP packet 被切片的情形，估计使用 etcproxy 就悲剧了。后面一定要自己写了一个靠谱的 ngx_mysql 模块，不用 libdrizzle 了。  
微博位置: 无
发布时间: 2011-05-01 11:55
点赞数: 0   转发数: 0   评论数: 1
发布工具: 微博 weibo.com

2461:榕城千年榕树  原图 
微博位置: 无
发布时间: 2011-04-30 14:29
点赞数: 0   转发数: 0   评论数: 4
发布工具: S60客户端

2462:正在榕城和媳妇儿共进西式牛排,呵呵。  
微博位置: 无
发布时间: 2011-04-29 13:34
点赞数: 0   转发数: 0   评论数: 4
发布工具: 短信

2463:习惯了在 Linux bash 里面使用 $(readlink) 来获取当前bash脚本的绝对路径，却发现在 Mac OS X 上的行为很不一样，后来又发现BSD上的人们用 $(realpath)，人生啊，为了移植性，还是借用一下 Perl one-liner 了：me=`perl -MCwd -e'print Cwd::abs_path(shift)' $0`  
微博位置: 无
发布时间: 2011-04-29 12:40
点赞数: 1   转发数: 1   评论数: 0
发布工具: 微博 weibo.com

2464:感慨自己经常不得不重新发明那些早已经被做烂了的“轮子”,比如我为nginx做的memcached和redis客户端驱动。很多时候这是迫于工程上的原因。做到极至本身是很困难的,更何况有这么多不同的环境和应用场景?确实在这里,“可复用的代码”远没有“可编辑的代码”有价值。  
微博位置: 无
发布时间: 2011-04-28 07:03
点赞数: 0   转发数: 2   评论数: 7
发布工具: 短信

2465:Marcus Clyne前两天和我讨论了在ngx_lua模块中让Lua的垃圾回收器使用ngx_pool来分配释放内存,但我注意到ngx_pool不太适合Lua GC的几个重要方面,特别是当VM常驻内存并为所有请求共享的时候,细节请见Github上issues讨论。  
微博位置: 无
发布时间: 2011-04-27 18:38
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

2466:(1/2)我这周开始打算抽空使用Erlang,给量子统计做一个可靠、高效和易扩展的软实时错误监控系统,把各种错误信息映射成非技术同学可读的中文形式,像聊天信息一样实时地推送给监控订阅的用户,可以同时服务于QA,运营,PE,和开发。监控用户可以选择监视错误的某个量子用户的id,并且我们通过类似Greas  
微博位置: 无
发布时间: 2011-04-26 12:46
点赞数: 0   转发数: 0   评论数: 0
发布工具: 短信

